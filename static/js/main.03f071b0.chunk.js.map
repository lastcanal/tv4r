{"version":3,"sources":["constants/index.js","selectors/index.js","helpers/index.js","helpers/reddit.js","actions/index.js","hooks/useFullscreen.js","components/Posts.js","components/Option.js","components/Picker.js","components/SubredditScopePicker.js","components/Controls.js","components/Title.js","components/Help.js","components/Menu.js","components/ReplyTree.js","components/Reply.js","components/Comment.js","components/CommentTree.js","components/Comments.js","components/VideoPlayer.js","components/ImagePlayer.js","components/WebPagePlayer.js","components/Post.js","hooks/useKeyboardController.js","hooks/useLayoutDimensionTracker.js","hooks/useRouteTracker.js","hooks/useAppTheme.js","App.js","hooks/useForceWindowFocus.js","reducers/index.js","configureStore.js","index.js"],"names":["MEDIA_VIDEO","MEDIA_IMAGE","DEFAULT_SUBREDDITS","DEFAULT_SUBREDDIT","KNOWN_EMBED_REQUIRED_PROVIDERS","allPostsSelector","createSelector","posts","allMediaSelector","filterPosts","videoMediaSelector","imageMediaSelector","get","key","props","mediaSelector","showImages","showVideos","mediaType","filter","isVideo","filterVideo","isImage","filterImage","post","filterVideoImage","media","secure_media","is_video","oembed","type","ReactPlayer","canPlay","url","preview","enabled","matchPostPath","pathname","matchPath","matchRedditPath","matchSubredditPath","getNewSubredditFromPath","selectedSubreddit","permalink","match","isExact","params","subreddit","toLowerCase","didInvalidateSubredditFromPath","state","action","payload","location","decodeHTMLEntity","html","mime","DOMParser","parseFromString","documentElement","textContent","findPostById","postId","index","findIndex","id","extractPost","getImageDimensions","img","maxHeight","maxWidth","minRatio","height","width","ratio","Math","min","translateVolume","volume","change","max","muiThemeToRSTheme","palette","theme","colors","primary","background","contrastText","primary25","primary50","primary75","neutral0","neutral5","neutral10","neutral20","neutral30","neutral40","neutral50","neutral60","neutral70","neutral80","neutral90","contrastColor","themeMode","dark","light","REDDIT_API_HOST","chompTrailingSlash","string","endsWith","slice","postURL","extention","URL","encodeURI","replyURL","parentId","scope","fetch","limit","subredditURL","href","invalidateSubreddit","translatePost","dispatch","getState","postsBySubreddit","config","showNSFW","nextPost","previousPost","fetchPosts","requestPosts","reddit","then","response","json","children","data","length","reduce","acc","child","push","extractPosts","error","receivedAt","Date","now","receivePosts","catch","receivePostsError","fetchPostsIfNeeded","selected","isFetching","didInvalidate","shouldFetchPosts","invalidateSubredditIfNeeded","newSubreddit","router","shouldInvalidateSubreddit","loadSubreddit","batch","selectSubreddit","refreshSubreddit","fetchCommentsIfNeeded","cursor","comments","requestComments","receiveCommentsError","receiveComments","fetchComments","fetchRepliesIfNeeded","items","commentsForPost","exec","parent_id","groups","requestReplies","receiveRepliesError","receiveReplies","fetchReplies","playerJumpTo","number","percentage","configToggleFilter","configToggleShowVideos","configToggleShowImages","useFullscreen","isFullscreen","useEffect","screenfull","isEnabled","request","exit","classNameForTile","classes","tile","style","THUMBNAIL_HEIGHT","Thumbnail","thumbnail","title","over_18","fontSize","src","alt","Skeleton","variant","refs","onSelectPost","e","preventDefault","selectPost","spacing","useTheme","element","box","getBoundingClientRect","parentBox","parentNode","left","offsetLeft","toFixed","scrollTo","behavior","calculateColumns","window","innerWidth","useState","columns","setColumns","onResize","debounce","addEventListener","removeEventListener","postsIter","Array","from","ref","node","GridList","className","gridList","cellHeight","cols","map","GridListTile","rows","onClick","bind","GridListTileBar","root","titleBar","withStyles","flexWrap","transform","opacity","margin","marginBottom","boxShadow","outline","border","display","postText","alignItems","justifyContent","flexDirection","connect","selectedPost","visible","useStyles","makeStyles","shape","backgroundColor","paper","borderRadius","default","Option","isSelected","onFocus","setValue","removable","MenuItem","component","stopPropagation","ListItemIcon","value","color","StaticOption","breakpoints","container","up","minWidth","makeSelectStyles","styles","text","menu","nameToOption","name","label","options","useRef","mappedOptions","useMemo","mappedValue","selectTheme","selectStyles","isClearable","menuPlacement","onChange","current","blur","maxMenuHeight","onMenuOpen","onMenuClose","components","subreddits","AutoPlayOnIcon","styled","SyncIcon","AutoPlayOffIcon","SyncDisabledIcon","controls","overflow","ShowImagesControl","Tooltip","IconButton","aria-label","ShowVideosControl","RefreshControl","TogglePlayControl","isPlaying","ShowNSFWControl","isAutoAdvance","flex","textOverflow","whiteSpace","textDecoration","fontWeight","Title","a11yProps","TabPanel","other","Typography","role","hidden","aria-labelledby","Box","p","anchorEl","setAnchorEl","React","open","Boolean","undefined","event","currentTarget","aria-describedby","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","AppBar","position","Tabs","_event","newValue","Tab","Grid","item","minHeight","flexGrow","listStyle","padding","marginRight","lineHeight","marginLeft","menuRef","largeScreen","useMediaQuery","Container","stype","bottom","paddingBottom","borderTop","ReplyTree","replies","depth","comment","MoreButton","reply","show","setShow","loading","setLoading","body","ReactHtmlParser","markdown","nofollow","target","kind","CircularProgress","size","thuckness","setTimeout","voteTotal","ups","downs","commentAuthor","author","commentBody","selfPostBody","postTitle","selftext_html","selfText","overflowWrap","secondary","commentSpacing","base","comment_container","comment_container_alt","classForDepth","paddingRight","CommentTree","isFetchingComments","playerHeight","setVisible","fallback","setFallback","IntersectionObserver","rootMargin","document","getElementById","threshold","observer","elements","isIntersecting","observe","unobserve","LoadComments","loadComments","spacer","LinearProgress","spacerBottom","menuButton","menuHeight","textAlign","isMediaFallback","scan","jump","playerRef","setPlayerHeight","playerWidth","setPlayerWidth","onMediaEnded","onMediaError","player","currentTime","getCurrentTime","seekTo","reddit_video","fallback_url","replace","throttle","imgRef","newWidth","getVideoDimensions","secure_media_embed","media_embed","provider_name","indexOf","isKnownMediaEmbed","content","playerWrapper","_index","attribs","renderMediaEmbed","playing","preload","reactPlayer","onEnded","onError","loop","isFullsceen","media_fallback","zIndex","objectFit","transition","setUrl","setImgRef","imageWidth","setImageWidth","imageHeight","setImageHeight","enhance","image","parser","images","resolutions","selectedImage","find","getPostImage","onImageChange","timeout","clearTimeout","useLayoutEffect","fallbackLink","domain","onLoad","top","botton","sandbox","load","paddingLeft","miniPlayerWidth","showMiniPlayer","setShowMiniPlayer","isNSFW","showMiniPlayerIfNeeded","pageYOffset","miniPlayer","is_self","renderMedia","scrollY","right","down","useKeyboardController","handleKeyDown","keyboardControls","metaKey","shiftKey","seconds","playerScanForwards","jumpTo","parseInt","handleKeyboardAction","useLayoutDimensionTracker","setMenuHeight","menuOffsetHeight","setMenuOffsetHeight","orientation","setOrientation","innerHeight","screenHeight","setScreenHeight","calculateMenuHeight","calculateHeight","onOrientationChange","constrained","innnerHeight","useRouteTracker","newPermalink","translatePermalink","useAppTheme","prefersLightMode","createMuiTheme","grey","typography","fontFamily","forceWindowFocus","focus","useForceWindowFocus","CssBaseline","LOCATION_CHANGE","selectedPosts","hot","new","controversial","rising","nextIndex","previousIndex","addSet","Set","add","removeSet","delete","DEFAULT_CONFIG","createRootReducer","history","combineReducers","connectRouter","createHashHistory","middleware","thunk","routerMiddleware","devtools","__REDUX_DEVTOOLS_EXTENSION__","trace","traceLimit","noop","persistConfig","storage","whitelist","rootReducer","persistedReducer","persistReducer","store","createStore","compose","applyMiddleware","persistor","persistStore","configureStore","render","hashType","exact","path","App"],"mappings":"0UAAaA,EAAc,cACdC,EAAc,cA6CdC,EAAqB,CAChC,SACA,gBACA,kBACA,gBACA,OAGWC,EAAoBD,EAAmB,GAKvCE,EAAiC,CAC5C,U,QCvDWC,EAAmBC,aAC9B,qBAAGC,SACH,SAAAA,GAAK,OAAIA,KAGEC,EAAmBF,aAC9B,mBAAeG,EAAf,EAAGF,UACH,SAAAA,GAAK,OAAIA,KAGEG,EAAqBJ,aAChC,gBAAGC,EAAH,EAAGA,MAAH,OAAeE,EAAYD,EAAiB,CAAED,UAAUP,MACxD,SAAAO,GAAK,OAAIA,KAGEI,EAAqBL,aAChC,gBAAGC,EAAH,EAAGA,MAAH,OAAeE,EAAYD,EAAiB,CAAED,UAAUN,MACxD,SAAAM,GAAK,OAAIA,KAGLK,EAAM,SAACC,GAAD,OAAS,SAACC,GAAD,OAAWA,EAAMD,KAEzBE,EAAgBT,YAC3B,CAACD,EAAkBO,EAAI,cAAeA,EAAI,gBAC1C,SAACL,EAAOS,EAAYC,GAClB,OAAID,GAAcC,EACTT,EAAiB,CAAED,UACjBS,IAAeC,EACjBN,EAAmB,CAAEJ,UACnBU,IAAeD,EACjBN,EAAmB,CAAEH,UAClBU,GAAeD,OAApB,EACET,K,yjBCXN,SAASE,EAAaF,EAAOW,GAClC,OAAQA,GACN,KAAKlB,EACH,OAQC,SAAsBO,GAC3B,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAOY,OAAOC,GATVC,CAAYd,GACrB,KAAKN,EACH,OAUC,SAAsBM,GAC3B,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAOY,OAAOG,GAXVC,CAAYhB,GACrB,QACE,OAYC,SAA2BA,GAChC,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAOY,QAAO,SAACK,GACpB,OAAQJ,EAAQI,IAASF,EAAQE,MAdxBC,CAAiBlB,IAkBvB,SAASa,EAASI,GAAO,IAAD,EAC7B,IAAKA,EAAM,OAAO,EAClB,IAAME,EAAQF,EAAKG,cAAgBH,EAAKE,MACxC,OACEF,EAAKI,UACmB,WAAnB,OAALF,QAAK,IAALA,OAAA,YAAAA,EAAOG,cAAP,eAAeC,OACfC,IAAYC,QAAQR,EAAKS,KAGtB,SAASX,EAASE,GAAO,IAAD,EAC7B,QAAKA,KAEFJ,EAAQI,IAAUA,EAAKI,WAAxB,UAAoCJ,EAAKU,eAAzC,QAAoC,EAAcC,UAI/C,IAgBDC,EAAgB,SAAAC,GAAQ,OAC5BC,YAAUD,EAAU,yCAETE,EAAkB,SAAAF,GAAQ,OACrCD,EAAcC,IANW,SAAAA,GAAQ,OAAIC,YAAUD,EAAU,iBAM9BG,CAAmBH,IAYnCI,EAA0B,SAACC,EAAmBC,GACzD,IAAMC,EAAQL,EAAgBI,GAE9B,OAAY,OAALC,QAAK,IAALA,OAAA,EAAAA,EAAOC,UAAWH,IAAsBE,EAAME,OAAOC,UACxDH,EAAME,OAAOC,UAAUC,cACvBN,GAGOO,EAAiC,SAACC,EAAOC,GACpD,IAAMP,EAAQL,EAAgBY,EAAOC,QAAQC,SAAShB,UAEtD,OAAY,OAALO,QAAK,IAALA,OAAA,EAAAA,EAAOC,UACZK,IAAUN,EAAME,OAAOC,UAAUC,eAYxBM,EAAmB,SAACC,GAAD,IAAOC,EAAP,uDAAc,YAAd,OAC9B,IAAIC,WAAYC,gBAAgBH,EAAMC,GACnCG,gBAAgBC,aAGRC,EAAe,SAACC,EAAQvD,GACnC,IAAMwD,EAAQxD,EAAMyD,WAAU,SAAAxC,GAAI,OAAIA,EAAKyC,KAAOH,KAElD,OAAIC,GAAS,EACJ,CAAEA,QAAOvC,KAAMjB,EAAMwD,IACnBxD,EAAM,GACR,CAAEwD,MAAO,EAAGvC,KAAMjB,EAAM,IAExB,CAAEwD,OAAQ,EAAGvC,KAAM,CAAEyC,GAAIH,KAIvBI,EAAc,SAAChB,EAAOC,GACjC,OAAIA,EAAOY,OAAS,EACX,CAAEA,MAAOZ,EAAOY,MAAOvC,KAAM2B,EAAO3B,MAClC2B,EAAO5C,OAAS2C,EAAM1B,MAAQ0B,EAAM1B,KAAKyC,GAC3CJ,EACLX,EAAM1B,KAAKyC,GACXlD,EAAcoC,IAEPA,EAAO5C,MACT,CAAEwD,MAAO,EAAGvC,KAAM2B,EAAO5C,MAAM,IAE/B,CAAEwD,OAAQ,EAAGvC,KAAM,OAqBjB2C,EAAqB,SAACC,EAAKC,EAAWC,GAA4B,IAAlBC,EAAiB,uDAAN,EACtE,IAAKH,EAAK,MAAO,CAAEI,OAAQ,KAAMC,MAAO,MADoC,IAEpEA,EAAkBL,EAAlBK,MAAOD,EAAWJ,EAAXI,OACTE,EAAQC,KAAKC,IAAIL,EAAUD,EAAWG,EAAOJ,EAAYG,GAC/D,MAAO,CAAEC,MAAOA,EAAQC,EAAOF,OAAQA,EAASE,IASrCG,EAAkB,SAACC,EAAQC,GAAT,OAC7BJ,KAAKC,IAAI,EAAGD,KAAKK,IAAI,EAAGF,EAASC,KAGtBE,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAC/B,SAAAC,GAAK,YACAA,EADA,CAEHC,OAAO,EAAD,GACDD,EAAMC,OADL,CAEJC,QAASH,EAAQI,WAAWC,aAC5BC,UAAWN,EAAQI,WAAWC,aAC9BE,UAAWP,EAAQI,WAAWC,aAC9BG,UAAWR,EAAQI,WAAWC,aAC9BI,SAAUT,EAAQI,WAAWD,QAC7BO,SAAUV,EAAQI,WAAWD,QAC7BQ,UAAWX,EAAQI,WAAWD,QAC9BS,UAAWZ,EAAQI,WAAWD,QAC9BU,UAAWb,EAAQI,WAAWD,QAC9BW,UAAWd,EAAQI,WAAWD,QAC9BY,UAAWf,EAAQI,WAAWD,QAC9Ba,UAAWhB,EAAQI,WAAWD,QAC9Bc,UAAWjB,EAAQI,WAAWD,QAC9Be,UAAWlB,EAAQI,WAAWD,QAC9BgB,UAAWnB,EAAQI,WAAWD,cAIvBiB,EAAgB,SAACC,EAAD,OAAclB,EAAd,EAAcA,QAAd,MACb,UAAdkB,EAAwBlB,EAAQmB,KAAOnB,EAAQoB,OCpN3CC,EAAkB,yBAElBC,EAAqB,eAACC,EAAD,uDAAU,GAAV,OACzBA,EAAOC,SAAS,KAAOD,EAAOE,MAAM,GAAI,GAAKF,GAGlCG,EAAU,SAACpE,GAAD,IAAYqE,EAAZ,uDAAwB,OAAxB,OACrB,IAAIC,IACFC,UAAU,GAAD,OAAIP,EAAmBhE,GAAvB,YAAqCqE,IAC9CN,IAISS,EAAW,SACtBxE,GACI,IADOyE,EACR,uDADmB,GAAIJ,EACvB,uDADmC,OAEtC,OAAO,IAAIC,IACTC,UAAU,GAAD,OAAIP,EAAmBhE,GAAvB,YAAqCyE,EAArC,YAAiDJ,IAC1DN,IAyBW,EAZW,SAAC,GAAD,IAAG3D,EAAH,EAAGA,UAAWsE,EAAd,EAAcA,MAAd,OACxBC,MAV0B,SAACvE,GAAD,IAAYiE,EAAZ,uDAAwB,OAAQO,EAAhC,uDAAwC,IAAxC,OAC1B,IAAIN,IACFC,UAAU,MAAD,OACDP,EAAmB5D,GADlB,YACgCiE,EADhC,kBACmDO,IAE5Db,GAKIc,CAAa,GAAD,OAAIzE,EAAJ,YAAiBsE,IAASI,OAW/B,GARU,SAAC,GAAD,IAAG9E,EAAH,EAAGA,UAAH,OACvB2E,MAAMP,EAAQpE,GAAW8E,OAOZ,GAJa,SAAC,EAAeL,GAAhB,IAAGzE,EAAH,EAAGA,UAAH,OAC1B2E,MAAMH,EAASxE,EAAWyE,GAAUK,O,+jCCG/B,I,YAKMC,GAAsB,SAAA3E,GAAS,MAAK,CAC/CjB,KJ1CkC,uBI2ClCiB,cA4CI4E,GAAgB,SAAC7F,GAAD,OAAU,SAAC8F,EAAUC,GAAc,IAAD,EACEA,IAAhDC,EAD8C,EAC9CA,iBAAkBpF,EAD4B,EAC5BA,kBAAmBqF,EADS,EACTA,OACrC/G,EAAqC+G,EAArC/G,WAAYC,EAAyB8G,EAAzB9G,WAAY+G,EAAaD,EAAbC,SAC1BjF,EAAY+E,EAAiBpF,GAC7BnC,EAAK,OAAGwC,QAAH,IAAGA,OAAH,EAAGA,EAAYA,EAAUsE,OACpC,OAAOO,EAAS,CACd9F,KAAMA,EACNvB,MAAOQ,EAAc,CAAER,QAAOS,aAAYC,aAAY+G,iBAI7CC,GAAW,kBAAM,SAACL,GAC7BA,EAASD,GJ/Fc,gBIiGZO,GAAe,kBAAM,SAACN,GACjCA,EAASD,GJjGkB,oBIwGvBQ,GAAa,SAAApF,GAAS,OAAI,SAAC6E,EAAUC,GAAc,IAAD,EAC9CC,EAAqBD,IAArBC,iBACFT,GAAwB,OAAhBS,QAAgB,IAAhBA,OAAA,YAAAA,EAAmB/E,UAAnB,eAA+BsE,QAAS,MAEtD,OADAO,EA7D0B,SAAC7E,GAAD,IAAYsE,EAAZ,uDAAoB,MAApB,MAA+B,CACzDvF,KJxD2B,gBIyD3BiB,YACAsE,SA0DSe,CAAarF,EAAWsE,IAC1BgB,EACO,CAAEtF,YAAWsE,UACxBiB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIX,EA3DM,SAAC7E,EAAWsE,EAAOmB,GAAnB,OAC1B,SAACZ,EAAUC,GAAc,IACfE,EAAWF,IAAXE,OACA9G,EAAqC8G,EAArC9G,WAAYD,EAAyB+G,EAAzB/G,WAAYgH,EAAaD,EAAbC,SAC1BzH,EFvDH,SAAuBiI,GAAO,IAAD,EAC5BC,GAAW,OAACD,QAAD,IAACA,OAAD,YAACA,EAAME,YAAP,aAAC,EAAYD,WAAa,GAC3C,OAA2B,IAApBA,EAASE,OACZ,GACAF,EAASG,QAAO,SAACC,EAAKC,GAItB,OAHA,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOJ,OACTG,EAAIE,KAAKD,EAAMJ,MAEVG,IACN,IE8CWG,CAAaR,GAC3B,OAAOZ,EAAS,CACd9F,KJlEuB,gBImEvBiB,YACAxC,QACA0I,MAAO,KACPC,WAAYC,KAAKC,MACjBnI,aACAD,aACAgH,WACAX,WA6CyBgC,CAAatG,EAAWsE,EAAOkB,OACzDe,OAAM,SAAAL,GAAK,OAAIrB,EA1Ca,SAAC7E,EAAWkG,GAAZ,MAAuB,CACtDnH,KJ9EiC,sBI+EjCiB,YACAkG,SAuC2BM,CAAkBxG,EAAWkG,SAe7CO,GAAqB,SAAAzG,GAAS,OAAI,SAAC6E,EAAUC,GACxD,GAbuB,SAAC,EAAsB4B,GAAc,IACtD1G,EADqD,EAAjC+E,iBACS2B,GAEnC,QADW,OAAG1G,QAAH,IAAGA,OAAH,EAAGA,EAAS,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAWsE,UAIjCtE,EAAU2G,YAGP3G,EAAU4G,cAIbC,CAAiB/B,IAAY9E,GAC/B,OAAO6E,EAASO,GAAWpF,MAclB8G,GAA8B,SAAA9G,GAAS,OAAI,SACtD6E,EACAC,GAEA,IAAMiC,EAAe/G,EAAUC,cAC/B,GAfgC,SAAC,EAA8ByG,GAAc,IAAD,EAAzCM,EAAyC,EAAzCA,OAAQjC,EAAiC,EAAjCA,iBACrClF,EAAQL,EAAgBwH,EAAO1G,SAAShB,UACxCU,EAAY+E,EAAiB2B,GACnC,OACG1G,GACwC,KAAhC,OAATA,QAAS,IAATA,OAAA,YAAAA,EAAYA,EAAUsE,cAAtB,eAA8BsB,UACxB,OAAL/F,QAAK,IAALA,OAAA,EAAAA,EAAOG,aAAc0G,EASpBO,CAA0BnC,IAAYiC,GACxC,OAAOlC,EAASF,GAAoBoC,MAI3BG,GAAgB,SAAAlH,GAAS,OAAI,SAAC6E,GACzCsC,aAAM,WACJtC,EA5H2B,SAAA7E,GAAS,MAAK,CAC3CjB,KJtC8B,mBIuC9BiB,aA0HWoH,CAAgBpH,IACzB6E,EAASiC,GAA4B9G,IACrC6E,EAAS4B,GAAmBzG,SAInBqH,GAAmB,kBAAM,SAACxC,EAAUC,GAAc,IACrDnF,EAAsBmF,IAAtBnF,kBACRwH,aAAM,WACJtC,EAASF,GAAoBhF,IAC7BkF,EAAS4B,GAAmB9G,SAsCnB2H,GAAwB,kBAAM,SAACzC,EAAUC,GAAc,IAAD,EACTA,IAAhDC,EADyD,EACzDA,iBAAkBpF,EADuC,EACvCA,kBAAmBqF,EADoB,EACpBA,OACrC9G,EAAqC8G,EAArC9G,WAAYD,EAAyB+G,EAAzB/G,WAAYgH,EAAaD,EAAbC,SACxBjE,EAAU+D,EAAiBwC,OAA3BvG,MACFhB,EAAY+E,EAAiBpF,GAC7B6H,EAAWxH,EAAUwH,SACrBhK,EAAQwC,EAAUA,EAAUsE,OAE5B7F,EADQT,EAAc,CAAER,QAAOU,aAAYD,aAAYgH,aAC1CjE,IACf,OAACwG,QAAD,IAACA,OAAD,EAACA,EAAQ,OAAG/I,QAAH,IAAGA,OAAH,EAAGA,EAAMyC,MACpB2D,EAxBkB,SAACpG,EAAMkB,GAAP,OAA6B,SAAAkF,GACjD,GAAI,OAACpG,QAAD,IAACA,OAAD,EAACA,EAAMmB,UAEX,OADAiF,EAtBsB,SAACpG,EAAMuB,GAAP,MAAsB,CAC5CjB,KJtK8B,mBIuK9BN,OACAuB,aAmBSyH,CAAgBhJ,EAAMkB,IACxB2F,GACM7G,GACV8G,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1Bc,OAAM,SAAAL,GAAK,OACVrB,EAduB,SAACpG,EAAMuB,EAAWkG,GAAlB,MAA6B,CACxDnH,KJjLoC,yBIkLpCN,OACAuB,YACAkG,SAUawB,CAAqBjJ,EAAMkB,EAAmBuG,OAExDX,MAAK,SAAAC,GAAQ,OACZX,EAxBkB,SAACpG,EAAMuB,EAAWwF,GAAlB,MAAgC,CACtDzG,KJ3K8B,mBI4K9BN,OACAuB,YACAwH,SAAUhC,GAoBGmC,CAAgBlJ,EAAMkB,EAAmB6F,QAc3CoC,CAAcnJ,EAAMkB,MAwCpBkI,GAAuB,SAAC,GAAD,IAAGlC,EAAH,EAAGA,KAAH,OAAc,SAACd,EAAUC,GAAc,IAAD,EAChBA,IAAhDC,EADgE,EAChEA,iBAAkBpF,EAD8C,EAC9CA,kBAAmBqF,EAD2B,EAC3BA,OACrC/G,EAAqC+G,EAArC/G,WAAYC,EAAyB8G,EAAzB9G,WAAY+G,EAAaD,EAAbC,SACxBjE,EAAU+D,EAAiBwC,OAA3BvG,MACFhB,EAAY+E,EAAiBpF,GAC7B6H,EAAWxH,EAAUwH,SACrBM,EAAQ9J,EAAc,CAC1BR,MAAOwC,EAAUA,EAAUsE,OAC3BrG,aAAYC,aAAY+G,aAEpBxG,EAAOqJ,EAAM9G,GACb+G,GAA0B,OAARP,QAAQ,IAARA,OAAA,EAAAA,EAAQ,OAAG/I,QAAH,IAAGA,OAAH,EAAGA,EAAMyC,MAAO,GAC9BmD,EAChB,wCAAwB2D,KAAKrC,EAAKsC,WAD5BC,OAAU7D,SAGdA,IAAa0D,EAAgB1D,IAC/BQ,EA7BiB,SAACpG,EAAMkB,EAAmB0E,GAA1B,OAAuC,SAAAQ,GAE1D,OADAA,EAxBqB,SAACpG,EAAMuB,EAAWqE,GAAlB,MAAgC,CACrDtF,KJlN6B,kBImN7BN,OACAuB,YACAqE,YAoBS8D,CAAe1J,EAAMkB,EAAmB0E,IAC1CiB,GACS7G,EAAM4F,GACnBkB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1Bc,OAAM,SAAAL,GAAK,OACVrB,EAdsB,SAACpG,EAAMuB,EAAWqE,EAAU6B,GAA5B,MAAuC,CACjEnH,KJ/NmC,wBIgOnCN,OACAuB,YACAkG,QACA7B,YASa+D,CAAoB3J,EAAMkB,EAAmB0E,EAAU6B,OAEjEX,MAAK,SAAAC,GAAQ,OACZX,EAzBiB,SAACpG,EAAMuB,EAAWqE,EAAUmB,GAA5B,MAA0C,CAC/DzG,KJxN6B,kBIyN7BN,OACAuB,YACAwH,SAAUhC,EACVnB,YAoBagE,CAAe5J,EAAMkB,EAAmB0E,EAAUmB,QAoBpD8C,CAAaR,EAAM9G,GAAQrB,EAAmB0E,MA+C9CkE,GAAe,SAACC,GAAD,MAAa,CACvCzJ,KJjS4B,iBIkS5B0J,WAAaD,EAAS,KAuBlBE,GAAqB,SAAC3J,GAAD,OAAU,SAAC8F,EAAUC,GAAc,IAAD,EACHA,IAAhDC,EADmD,EACnDA,iBAAkBpF,EADiC,EACjCA,kBAAmBqF,EADc,EACdA,OACrC/G,EAAqC+G,EAArC/G,WAAYC,EAAyB8G,EAAzB9G,WAAY+G,EAAaD,EAAbC,SAC1BjF,EAAY+E,EAAiBpF,GAC7BmI,EAAQ9H,EAAUA,EAAUsE,OAC1B7F,EAASsG,EAAiBwC,OAA1B9I,KAWR,OAAOoG,E,2VAAS,IAVD,CACb9F,OACAN,QAQa,CAAcjB,MANfQ,EAAc,CAC1BR,MAAOsK,EACP7J,WJ7U8B,uBI6UlBc,GAA+Bd,EAAaA,EACxDC,WJ/U8B,uBI+UlBa,GAA+Bb,EAAaA,EACxD+G,kBAKS0D,GAAyB,kBAAM,SAAC9D,GAAD,OAC1CA,EAAS6D,GJtVuB,yBIyVrBE,GAAyB,kBAAM,SAAC/D,GAAD,OAC1CA,EAAS6D,GJzVuB,yBKJnBG,GAxBO,SAAC,GAAgC,IAA9BhE,EAA6B,EAA7BA,SAAUiE,EAAmB,EAAnBA,aAEjCC,qBAAU,WACJC,IAAWC,YACTH,EACFE,IAAWE,UAAU3C,OAAM,eAE3ByC,IAAWG,OAAO5C,OAAM,kBAG3B,CAACuC,IAEJC,qBAAU,WACJC,IAAWC,YACTD,IAAWF,eAAiBA,EAC9BjE,ED+QqC,CAC3C9F,KJ1Q+B,uBKLfiK,IAAWF,cAAgBA,GACrCjE,EDiRsC,CAC5C9F,KJ7QgC,0BKF7B,CAACiK,IAAWF,gB,0ICyBXM,GAAmB,SAAC1C,EAAUjI,EAAM4K,GACxC,OAAI,OAAC5K,QAAD,IAACA,OAAD,EAACA,EAAMyC,MAAM,OAACwF,QAAD,IAACA,OAAD,EAACA,EAAUjI,OAAQiI,EAASjI,KAAKyC,KAAOzC,EAAKyC,GAGtD,GAAN,OAAUmI,EAAQC,KAAlB,YAA0BD,EAAQ3C,UAF3B2C,EAAQC,MAMbC,GAAQ,CACZ9H,OAAQ+H,KACR9H,MNJ6B,KMOzB+H,GAAY,SAAC,GAAwB,IAAtBhL,EAAqB,EAArBA,KAAMwG,EAAe,EAAfA,SACzB,GAAIxG,EAAM,KAEAiL,EAA8BjL,EAA9BiL,UAAWC,EAAmBlL,EAAnBkL,MAAOC,EAAYnL,EAAZmL,QAC1B,MAAkB,KAAdF,EACK,kBAAC,KAAD,CAAsBG,SAAS,QAAQN,MAAOA,KAC9B,SAAdG,EACF,kBAAC,KAAD,CAAsBG,SAAS,QAAQN,MAAOA,KAC9B,UAAdG,EACF,kBAAC,KAAD,CAAsBG,SAAS,QAAQN,MAAOA,KAC9B,YAAdG,EACF,kBAAC,KAAD,CAAsBG,SAAS,QAAQN,MAAOA,KAE3CK,IAAY3E,GAA2B,SAAdyE,EAC5B,kBAAC,KAAD,CAAWG,SAAS,QAAQN,MAAOA,KAEnC,yBAAKO,IAAKJ,EAAWK,IAAKJ,IAIrC,OAAO,kBAACK,GAAA,EAAD,CAAUC,QAAQ,UA6G3B,OArGc,SAAC,GAAsD,IAApDzM,EAAmD,EAAnDA,MAAOkJ,EAA4C,EAA5CA,SAAUzB,EAAkC,EAAlCA,SAAUoE,EAAwB,EAAxBA,QAASxE,EAAe,EAAfA,SAC7CqF,EAAO,GAEPC,EAAe,SAACjF,EAAUlE,EAAOoJ,GACrCA,EAAEC,iBACFxF,EFPsB,SAACpG,EAAMuC,GAAP,MAAkB,CAC1CjC,KJ5EyB,cI6EzBN,OACAuC,SEIWsJ,CAAWpF,EAAUlE,KAGxBuJ,EAAYC,eAAZD,QAERxB,qBAAU,WAAO,IAAD,EACd,UAAIrC,QAAJ,IAAIA,OAAJ,YAAIA,EAAUjI,YAAd,aAAI,EAAgByC,GAAI,CACtB,IAAMuJ,EAAUP,EAAK,QAAUxD,EAASjI,KAAKyC,IAC7C,GAAIuJ,EAAS,CACX,IAAMC,EAAMD,EAAQE,wBACdC,EAAYH,EAAQI,WAAWF,wBAC/BG,EAAOL,EAAQM,aAClBH,EAAUlJ,MAAQ,GAAGsJ,UAAaN,EAAIhJ,MAAQ,GACjD+I,EAAQI,WAAWI,SAAS,CAAEH,OAAMI,SAAU,eAGjD,CAACxE,IAEJ,IAAMyE,EAAmB,kBACvBC,OAAOC,YN3DoB,IM2DYd,EAAQ,KAxBiB,EA2BpCe,mBAASH,KA3B2B,oBA2B3DI,EA3B2D,KA2BlDC,EA3BkD,KA6B5DC,EAAWC,MAAS,WACxBF,EAAWL,OACV,IAEHpC,qBAAU,WAER,OADAqC,OAAOO,iBAAiB,SAAUF,GAC3B,kBAAOL,OAAOQ,oBAAoB,SAAUH,MAClD,IAEH,IAAMI,EAA6B,IAAjBrO,EAAMoI,OACpBkG,MAAMC,KAAK,IAAID,MAAM,KACrBtO,EAEJ,OACE,yBAAKwO,IAAK,SAAAC,GAAI,OAAK/B,EAAK,aAAe+B,IACrC,kBAACC,GAAA,EAAD,CACEC,UAAW9C,EAAQ+C,SACnBC,WNhFwB,IMiFxBC,KAAMf,GAELM,EAAUU,KAAI,SAAC9N,EAAMuC,GACpB,IAAME,EAAKzC,EAAOA,EAAKyC,GAAKF,EAC5B,OAAO,kBAACwL,GAAA,EAAD,CACLC,KAAM,EACNN,UAAW/C,GAAiB1C,EAAUjI,EAAM4K,GAC5CvL,IAAKoD,EACL8K,IAAK,SAAAC,GAAI,OAAKxN,EAAQyL,EAAK,QAAUzL,EAAKyC,IAAM+K,EAAQ,IACxDS,QAASvC,EAAawC,U,EAAWlO,EAAMuC,IAEvC,kBAAC,GAAD,CAAWvC,KAAMA,EAAMwG,SAAUA,IACjC,kBAAC2H,GAAA,EAAD,CACEjD,MAAOlL,GAAQA,EAAKkL,MAChBpJ,EAAiB9B,EAAKkL,OACtB,kBAACK,GAAA,EAAD,MAEJX,QAAS,CACPwD,KAAMxD,EAAQyD,SACdnD,MAAON,EAAQM,gBAmC/B,GAAwBoD,aA9KT,SAAC,GAAD,IAAGxC,EAAH,EAAGA,QAASpI,EAAZ,EAAYA,QAAZ,MAA2B,CACxCiK,SAAU,CACRY,SAAU,SACVC,UAAW,iBAEb3D,KAAM,CACJ4D,QAAS,GACTC,OAAQ5C,EAAQ,GAChB6C,aAAc7C,EAAQ,GACtB8C,UAAU,sBAAD,OAAwBlL,EAAQG,QAAQmB,MACjD6J,QAAQ,eAAD,OAAiBnL,EAAQG,QAAQmB,MACxC,UAAW,CACT6J,QAAQ,gBAAD,OAAkBnL,EAAQG,QAAQmB,QAG7CiD,SAAU,CACR6G,OAAQ,gBAAG/J,EAAH,EAAGA,UAAH,0BACOD,EAAcC,EAAWrB,KAExCmL,QAAS,gBAAG9J,EAAH,EAAGA,UAAH,6BACSD,EAAcC,EAAWrB,KAE3CqL,QAAS,SAEXC,SAAU,CACRD,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBC,cAAe,aAkJKb,CAAxB,IAA8Cc,aAhBtB,SAAA1N,GAAU,IACxB0E,EAA0D1E,EAA1D0E,SAAUlF,EAAgDQ,EAAhDR,kBAAmBoF,EAA6B5E,EAA7B4E,iBAAkBC,EAAW7E,EAAX6E,OAC/CxB,EAAgDwB,EAAhDxB,UAAWvF,EAAqC+G,EAArC/G,WAAYC,EAAyB8G,EAAzB9G,WAAY+G,EAAaD,EAAbC,SACrC6I,EAAe/I,EAAiBwC,QAAU,GAC1CvH,EAAY+E,EAAiBpF,GAC7BnC,GAAiB,OAATwC,QAAS,IAATA,OAAA,EAAAA,EAAS,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAWsE,SAAU,GAC/C,MAAO,CACLO,WACArH,MAAOQ,EAAc,CAAER,QAAOS,aAAYC,eAC1CwI,SAAUoH,EACVC,SAAS,EACTvK,YACAyB,cAI0C4I,CAA9C,K,6DCtLMG,GAAYC,cAAW,gBAAG9L,EAAH,EAAGA,QAAS+L,EAAZ,EAAYA,MAAZ,MAAyB,CACpDrB,KAAM,CACJsB,gBAAiBhM,EAAQI,WAAW6L,MACpCC,aAAcH,EAAMG,cAEtB3H,SAAU,CACRyH,gBAAiBhM,EAAQI,WAAW+L,aAIlCC,GAAS,SAAC,GAQT,IAPL7I,EAOI,EAPJA,SACA8I,EAMI,EANJA,WACAC,EAKI,EALJA,QACA9I,EAII,EAJJA,KACA+I,EAGI,EAHJA,SACA7J,EAEI,EAFJA,SAEI,IADJ8J,iBACI,SACEtF,EAAU2E,KAchB,OAAO,kBAACY,GAAA,EAAD,CACLH,QAASA,EACT/H,SAAU8H,EACVK,UAAU,MACVnC,QAhBc,SAACtC,GAIf,OAHAA,EAAE0E,kBACF1E,EAAEC,iBACFqE,EAAS/I,IACF,GAaP0D,QAASA,GAERsF,GACC,kBAACI,GAAA,EAAD,CAAcrC,QAbD,SAACtC,GAChBA,EAAE0E,kBACFjK,EHcyC,CAC3C9F,KJ9C8B,mBI+C9BiB,UGhB2B2F,EAAKqJ,UAY1B,kBAAC,KAAD,CAAkBzF,MAAO,CAAE0F,MAAO,cAGrCvJ,IAeQwJ,GAAe,SAACnR,GAAD,OAC1B,kBAAC,GAAD,eAAQ4Q,WAAW,GAAW5Q,KAGhC,OAAewQ,GAAUV,cAAzB,K,6jBC7DA,I,4DAAMG,GAAYC,cAAW,kBAAG9L,EAAH,EAAGA,QAASoI,EAAZ,EAAYA,QAAS4E,EAArB,EAAqBA,YAArB,MAAwC,CACnEC,WAAS,mBACND,EAAYE,GAAG,MAAQ,CACtBC,SAAU,MAFL,wBAIE,SAJF,gCAKUnN,EAAQI,WAAW+L,SAL7B,uBAMC/D,EAAQ,IANT,2BAOK,GAPL,4BAQMA,EAAQ,IARd,qBASD,GATC,OAaEgF,GAAmB,SAAC,GAAD,IAAGpN,EAAH,EAAGA,QAAH,MAAkB,CAChDiN,UAAW,SAAAI,GAAM,aACZA,EADY,CAEfrB,gBAAiBhM,EAAQI,WAAW+L,QACpCW,MAAO9M,EAAQsN,KAAKjN,gBAEtBkN,KAAM,SAAAF,GAAM,aACPA,EADO,CAEVrB,gBAAiBhM,EAAQI,WAAW6L,MACpCb,OAAO,aAAD,OAAepL,EAAQI,WAAW6L,YAItCuB,GAAe,SAACC,GAAD,MAAW,CAC9BZ,OAAQY,GAAQ,IAAI3P,cAAe4P,MAAM,KAAD,OAAOD,KAsEjD,OAnEe,SAAC,GAAkC,IAAhCZ,EAA+B,EAA/BA,MAAOc,EAAwB,EAAxBA,QAASjL,EAAe,EAAfA,SAC1BwE,EAAU2E,KACV5L,EAAQoI,eACRwB,EAAM+D,mBAONC,EAAgBC,mBAAQ,kBAC5BH,EAAQvD,IAAIoD,MACX,CAACG,IAEEI,EAAcD,mBAAQ,kBAC1BjB,EAAQW,GAAaX,GAAS,KAC7B,CAACA,IAEEmB,EAAcF,mBAAQ,kBAC1B/N,EAAkBE,KACjB,CAACA,IAEEgO,EAAeH,mBAAQ,kBAC3BV,GAAiBnN,KAChB,CAACA,IAUJ,OACE,yBAAK+J,UAAW9C,EAAQ+F,WACtB,kBAAC,KAAD,CACEpD,IAAKA,EACLqE,aAAa,EACbC,cAAc,SACdtB,MAAOkB,EACPK,SApCkB,SAAC,GAAe,IAAD,EAAZvB,EAAY,EAAZA,MACzBnK,EAASqC,GAAc8H,IACvB,UAAKhD,EAAIwE,eAAT,OAAK,EAAaC,QAmCdX,QAASE,EACT5N,MAAO+N,EACPO,cAAe,IACflB,OAAQY,EACRO,WApBa,WACjB9L,EJuR0C,CAC5C9F,KJ3TuC,+BQuDjC6R,YAjBc,WAClB/L,EJ+QyC,CAC3C9F,KJxTsC,8BQyDhC8R,WAAY,CACVtC,eAkBeV,aALD,SAAC,GAAD,MAAwC,CAC9DmB,MADsB,EAAGrP,kBAEzBmQ,QAFsB,EAAsBgB,cAKrBjD,CAAzB,K,UChGMG,GAAYC,cAAW,kBAAG9L,EAAH,EAAGA,QAASoI,EAAZ,EAAYA,QAAS4E,EAArB,EAAqBA,YAArB,MAAwC,CACnEC,WAAS,mBACND,EAAYE,GAAG,MAAQ,CACtBC,SAAU,MAFL,wBAIE,SAJF,gCAKUnN,EAAQI,WAAW+L,SAL7B,uBAMC/D,EAAQ,IANT,2BAOK,GAPL,4BAQMA,EAAQ,IARd,qBASD,GATC,OAaLoF,GAAe,SAACC,GAAD,MAAW,CAC9BZ,OAAQY,GAAQ,IAAI3P,cAAe4P,MAAOD,IAyE5C,OAtE6B,SAAC,GACuB,IAAnDZ,EAAkD,EAAlDA,MAAOc,EAA2C,EAA3CA,QAASnQ,EAAkC,EAAlCA,kBAAmBkF,EAAe,EAAfA,SAC7BwE,EAAU2E,KACV5L,EAAQoI,eACRwB,EAAM+D,mBAONC,EAAgBC,mBAAQ,kBAC5BH,EAAQvD,IAAIoD,MACX,CAACG,IAEEI,EAAcD,mBAAQ,kBAC1BjB,EAAQW,GAAaX,GAAS,KAC7B,CAACA,IAEEmB,EAAcF,mBAAQ,kBAC1B/N,EAAkBE,KACjB,CAACA,IAEEgO,EAAeH,mBAAQ,kBAC3BV,GAAiBnN,KAChB,CAACA,IAUJ,OACE,yBAAK+J,UAAW9C,EAAQ+F,WACtB,kBAAC,KAAD,CACEpD,IAAKA,EACLqE,aAAa,EACbC,cAAc,SACdtB,MAAOkB,EACPK,SApCuB,SAAC,GAAe,IAAD,ELsVTvQ,EAAWsE,EKtVd0K,EAAY,EAAZA,MAC9BnK,GLqViC7E,EKrVHL,ELqVc2E,EKrVK0K,ELqVK,SAACnK,GACzD,OAAOsC,aAAM,WACXtC,EAAS,CACP9F,KJtXgC,yBIuXhCiB,UAAWA,EACXsE,MAAOA,EAAMrE,gBAEf4E,EAASiC,GAA4B9G,IACrC6E,EAAS4B,GAAmBzG,UK5V5B,UAAKgM,EAAIwE,eAAT,OAAK,EAAaC,QAmCdX,QAASE,EACT5N,MAAO+N,EACPO,cAAe,IACflB,OAAQY,EACRO,WApBa,WACjB9L,ELiS0C,CAC5C9F,KJ3TuC,+BS6CjC6R,YAjBc,WAClB/L,ELyRyC,CAC3C9F,KJxTsC,8BS+ChC8R,WAAY,CACVtC,OAAQW,QAoBqBrB,aANf,SAAC,GAAD,MAAGlO,EAAH,EAAGA,kBAAH,MAA8C,CACpEqP,OAAO,UADe,EAAsBjK,iBACpBpF,UAAjB,eAAqC2E,QAAS,MACrDwL,QAAS,CAAC,MAAO,MAAO,gBAAiB,MAAO,UAChDnQ,uBAGqCkO,CAAvC,K,0RCtEMkD,GAAiBC,aAAOC,KAAPD,CAAiB,CACtC/D,UAAW,gCAGPiE,GAAkBF,aAAOG,KAAPH,CAAyB,CAC/C/D,UAAW,gCAGPe,GAAYC,cAAW,gBAAGkB,EAAH,EAAGA,YAAH,MAAsB,CACjDiC,SAAS,aACP1P,MAAO,OACP8L,QAAS,OACTI,cAAe,MACfD,eAAgB,gBAChB0D,SAAU,OACVjE,aAAc,GACb+B,EAAYE,GAAG,MAAQ,CACtB1B,eAAgB,iBAKT2D,GAAoB,SAAC,GAAD,IAAGrT,EAAH,EAAGA,WAAYyO,EAAf,EAAeA,QAAf,OAC/B,kBAAC6E,GAAA,EAAD,CAAS5H,MAAM,iBACb,kBAAC6H,GAAA,EAAD,CACEC,aAAW,gBACXxC,MAAM,UACNvC,QAASA,GAET,kBAAC,KAAD,CACEnD,MAAO,CAAE2D,QAASjP,EAAa,EAAI,SAW9ByT,GAAoB,SAAC,GAAD,IAAGxT,EAAH,EAAGA,WAAYwO,EAAf,EAAeA,QAAf,OAC/B,kBAAC6E,GAAA,EAAD,CAAS5H,MAAM,iBACb,kBAAC6H,GAAA,EAAD,CACEC,aAAW,gBACXxC,MAAM,UACNvC,QAASA,GAET,kBAAC,KAAD,CACEnD,MAAO,CAAE2D,QAAShP,EAAa,EAAI,SAW9ByT,GAAiB,SAAC,GAAD,IAAGjF,EAAH,EAAGA,QAAH,OAC5B,kBAAC6E,GAAA,EAAD,CAAS5H,MAAM,qBACb,kBAAC6H,GAAA,EAAD,CACEC,aAAW,kBACXxC,MAAM,UACNvC,QAASA,GAET,kBAAC,KAAD,SASOkF,GAAoB,SAAC,GAA4B,IAA1BlF,EAAyB,EAAzBA,QAASmF,EAAgB,EAAhBA,UACrClI,EAAK,UAAMkI,EAAY,OAAS,QAA3B,YACX,OAAO,kBAACN,GAAA,EAAD,CAAS5H,MAAOA,GACrB,kBAAC6H,GAAA,EAAD,CACEC,aAAY9H,EAAOsF,MAAM,UACzBvC,QAASA,GAERmF,EAAY,kBAAC,KAAD,MAAe,kBAAC,KAAD,SAUrBC,GAAkB,SAAC,GAA2B,IAAzBpF,EAAwB,EAAxBA,QAASzH,EAAe,EAAfA,SACnC0E,EAAK,UAAM1E,EAAW,OAAS,OAA1B,qCACX,OAAO,kBAACsM,GAAA,EAAD,CAAS5H,MAAOA,GACrB,kBAAC6H,GAAA,EAAD,CACEC,aAAY9H,EACZsF,MAAM,UACNvC,QAASA,GAET,kBAAC,KAAD,CACEnD,MAAO,CAAE2D,QAASjI,EAAW,GAAM,QAoI3C,OA1HiB,SAAC,GAUX,IATLJ,EASI,EATJA,SAEAiE,GAOI,EARJtL,MAQI,EAPJsL,cACAiJ,EAMI,EANJA,cACAF,EAKI,EALJA,UACArO,EAII,EAJJA,UACAtF,EAGI,EAHJA,WACAD,EAEI,EAFJA,WACAgH,EACI,EADJA,SAEQmM,EAAapD,KAAboD,SAER,OACE,yBAAKjF,UAAWiF,GACd,kBAAC,GAAD,CACEnT,WAAYA,EACZyO,QAAS,kBAAM7H,EAAS+D,SAE1B,kBAAC,GAAD,CACE1K,WAAYA,EACZwO,QAAS,kBAAM7H,EAAS8D,SAE1B,kBAAC,GAAD,CACE1D,SAAUA,EACVyH,QAAS,kBAAM7H,EN6IgB,CACrC9F,KJzRyB,mBU6IrB,kBAAC,GAAD,CAAgB2N,QAAS,kBAAM7H,EAASwC,SACxC,kBAACkK,GAAA,EAAD,CACE5H,MAAK,oBAA6B,SAAdnG,EAAuB,QAAU,OAAhD,WAEL,kBAACgO,GAAA,EAAD,CACEC,aAAA,eAA4BxC,MAAM,UAClCvC,QAAS,kBAAM7H,ENiImB,CAC1C9F,KJtR+B,wBUsJvB,kBAAC,KAAD,QAGJ,kBAACwS,GAAA,EAAD,CAAS5H,MAAK,UAAKb,EAAe,OAAS,QAA7B,gBACZ,kBAAC0I,GAAA,EAAD,CACEC,aAAW,oBACXxC,MAAM,UACNvC,QAAS,kBAAM7H,ENoGoB,CAC3C9F,KJvQ+B,wBUoKtB+J,EAAe,kBAAC,KAAD,MAAyB,kBAAC,KAAD,QAG7C,kBAACyI,GAAA,EAAD,CACE5H,MAAK,UAAKoI,EAAgB,OAAS,QAA9B,2BAEL,kBAACP,GAAA,EAAD,CACEC,aAAW,sBAAsBxC,MAAM,UACvCvC,QAAS,kBAAM7H,ENsGqB,CAC5C9F,KJhRiC,0BU2KxBgT,EAAgB,kBAAChB,GAAD,MAAqB,kBAACG,GAAD,QAG1C,kBAACK,GAAA,EAAD,CAAS5H,MAAM,iBACb,kBAAC6H,GAAA,EAAD,CACEC,aAAW,gBACXxC,MAAM,UACNvC,QAAS,kBAAM7H,EAASM,QAExB,kBAAC,KAAD,QAGJ,kBAAC,GAAD,CACE0M,UAAWA,EACXnF,QAAS,kBAAM7H,EN0FgB,CACrC9F,KJnRyB,mBU0LrB,kBAACwS,GAAA,EAAD,CAAS5H,MAAM,aACb,kBAAC6H,GAAA,EAAD,CACEC,aAAW,YACXxC,MAAM,UACNvC,QAAS,kBAAM7H,EAASK,QAExB,kBAAC,KAAD,UA8CiB2I,aA1BH,SAAA1N,GAAU,IACxBR,EAAgDQ,EAAhDR,kBAAmBoF,EAA6B5E,EAA7B4E,iBAAkBC,EAAW7E,EAAX6E,OACvChF,EAAY+E,EAAiBpF,GAYnC,MAAO,CACLnC,MAZS,OAAGwC,QAAH,IAAGA,OAAH,EAAGA,EAAS,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAWsE,OAanCwE,aAJE9D,EAPF8D,aAYAiJ,cALE/M,EANF+M,cAYAF,UANE7M,EALF6M,UAYArO,UAPEwB,EAJFxB,UAYAtF,WARE8G,EAHF9G,WAYAD,WATE+G,EAFF/G,WAYAgH,SAVED,EADFC,YAeuB4I,CAA3B,KCrQMG,GAAYC,cAAW,kBAAkB,CAC7CpB,KAAM,CACJmF,KAAM,EACNC,aAAc,WACdZ,SAAU,SACVa,WAAY,UAEdvI,MAAO,CACLE,SAAU,GACVsI,eAAgB,OAChB5K,OAAQ,UACR0H,MAXyB,EAAG9M,QAWbsN,KAAKnN,QACpB8P,WAAY,YAyBDC,GArBD,SAAC,GAAc,IAAZ5T,EAAW,EAAXA,KACT4K,EAAU2E,KAChB,OAAKvP,EAGH,yBAAK0N,UAAW9C,EAAQwD,MACrBpO,GAAQ,uBAAG0N,UAAW9C,EAAQM,MAAOjF,KAAMjG,EAAKS,KAC9CT,EAAKkL,MACFpJ,EAAiB9B,EAAKkL,OACtB,kBAACK,GAAA,EAAD,QAPQ,I,qGCkBdsI,GAAY,SAACtR,GACjB,MAAO,CACLE,GAAG,cAAD,OAAgBF,GAClB,gBAAgB,mBAAhB,OAAoCA,KAIlCuR,GAAW,SAACxU,GAAW,IACnB2H,EAAqC3H,EAArC2H,SAAUsJ,EAA2BjR,EAA3BiR,MAAOhO,EAAoBjD,EAApBiD,MAAUwR,EADT,aACmBzU,EADnB,8BAG1B,OACE,kBAAC0U,GAAA,EAAD,eACE5D,UAAU,MACV6D,KAAK,WACLC,OAAQ3D,IAAUhO,EAClBE,GAAE,0BAAqBF,GACvB4R,kBAAA,qBAA+B5R,IAC3BwR,GAEJ,kBAACK,GAAA,EAAD,CAAKC,EAAG,GAAIpN,KAiKlB,OAtJa,SAAC,GAAiB,IAAf2D,EAAc,EAAdA,QAAc,EACIiC,mBAAS,MADb,oBACrByH,EADqB,KACXC,EADW,OAEFC,IAAM3H,SAAS,GAFb,oBAErB0D,EAFqB,KAEdN,EAFc,KAgBtBwE,EAAOC,QAAQJ,GACf7R,EAAKgS,EAAO,oBAAiBE,EACnC,OAAO,oCACL,kBAAC5B,GAAA,EAAD,CACE9E,QAZgB,SAAA2G,GAClBL,EAAYK,EAAMC,gBAYhBC,mBAAkBrS,EAClBuQ,aAAW,OACXxC,MAAM,WAEN,kBAAC,KAAD,OAEF,kBAACuE,GAAA,EAAD,CACEtS,GAAIA,EACJgS,KAAMA,EACNH,SAAUA,EACVU,QAnBgB,WAClBT,EAAY,OAmBVU,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,UAGd,kBAACf,GAAA,EAAD,CAAK1G,UAAW9C,EAAQwD,MACtB,kBAACiH,GAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,GAAA,EAAD,CACEhF,MAAOA,EACPuB,SAzCW,SAAC0D,EAAQC,GAC5BxF,EAASwF,IAyCDzC,aAAW,aAEX,kBAAC0C,GAAA,EAAD,eAAKtE,MAAM,qBAAwByC,GAAU,KAC7C,kBAAC6B,GAAA,EAAD,eAAKtE,MAAM,SAAYyC,GAAU,KACjC,kBAAC6B,GAAA,EAAD,eAAKtE,MAAM,UAAayC,GAAU,OAGtC,kBAAC,GAAD,CAAUtD,MAAOA,EAAOhO,MAAO,GAC7B,kBAACoT,GAAA,EAAD,CAAMhF,WAAS,GACb,kBAACgF,GAAA,EAAD,CAAMC,MAAI,GACR,wBAAInT,GAAG,oBAAP,oBACA,4BACE,4BAAI,mCAAJ,oBACA,4BAAI,mCAAJ,wBACA,4BACE,0CADF,uBAIA,4BAAI,mCAAJ,iBACA,4BAAI,mCAAJ,eACA,4BAAI,qCAAJ,oBACA,4BAAI,wCAAJ,oBACA,4BAAI,wCAAJ,oBACA,4BAAI,wCAAJ,sBACA,4BAAI,wCAAJ,4BAGJ,kBAACkT,GAAA,EAAD,CAAMC,MAAI,GACR,wBAAInT,GAAG,sCAAP,sCAGA,4BACE,4BAAI,mCAAJ,sBACA,4BAAI,mCAAJ,uBACA,4BAAI,mCAAJ,uBACA,4BAAI,mCAAJ,uBACA,4BAAI,mCAAJ,uBACA,4BAAI,mCAAJ,uBACA,4BAAI,mCAAJ,uBACA,4BAAI,mCAAJ,uBACA,4BAAI,mCAAJ,uBACA,4BAAI,mCAAJ,uBACA,4BAAI,qCAAJ,yBAKR,kBAAC,GAAD,CAAU8N,MAAOA,EAAOhO,MAAO,GAC7B,kBAACoT,GAAA,EAAD,CAAMhF,WAAS,GACb,kBAACgF,GAAA,EAAD,CAAMC,MAAI,GACR,kBAAC5B,GAAA,EAAD,mDAIN,kBAAC,GAAD,CAAUzD,MAAOA,EAAOhO,MAAO,GAC7B,kBAACoT,GAAA,EAAD,CAAMhF,WAAS,GACb,kBAACgF,GAAA,EAAD,CAAMC,MAAI,GACR,kBAAC5B,GAAA,EAAD,CAAYxI,QAAQ,MAApB,8CAGA,4BACE,4BAAI,uBAAGvF,KAAK,wDAAR,2BACJ,4BAAI,uBAAGA,KAAK,6CAAR,gBACJ,4BAAI,uBAAGA,KAAK,kDAAR,qBACJ,4BAAI,uBAAGA,KAAK,iDAAR,oBACJ,4BAAI,uBAAGA,KAAK,iDAAR,oBACJ,4BAAI,uBAAGA,KAAK,0CAAR,aACJ,4BAAI,uBAAGA,KAAK,wCAAR,WACJ,4BAAI,uBAAGA,KAAK,4CAAR,eACJ,4BAAI,uBAAGA,KAAK,uCAAR,UACJ,4BAAI,uBAAGA,KAAK,2CAAR,cACJ,4BAAI,uBAAGA,KAAK,mDAAR,sBACJ,4BAAI,uBAAGA,KAAK,8CAAR,iBACJ,4BAAI,uBAAGA,KAAK,6CAAR,gBACJ,4BAAI,uBAAGA,KAAK,kDAAR,qBACJ,4BAAI,uBAAGA,KAAK,+CAAR,kBACJ,4BAAI,uBAAGA,KAAK,8CAAR,iBACJ,4BAAI,uBAAGA,KAAK,2CAAR,cACJ,4BAAI,uBAAGA,KAAK,uCAAR,UACJ,4BAAI,uBAAGA,KAAK,0DAAR,6BACJ,4BAAI,uBAAGA,KAAK,8CAAR,iBACJ,4BAAI,uBAAGA,KAAK,+CAAR,kBACJ,4BAAI,uBAAGA,KAAK,6CAAR,gBACJ,4BAAI,uBAAGA,KAAK,uDAAR,0BACJ,4BAAI,uBAAGA,KAAK,0CAAR,aACJ,4BAAI,uBAAGA,KAAK,4CAAR,iBAGR,kBAAC0P,GAAA,EAAD,CAAMC,MAAI,GACR,yBAAK5S,OAAO,QAAQqI,IAAI,iBACxB,gDAAqB,uBAAGpF,KAAK,2CAA2CiF,MAAM,WAAzD,WAArB,SAAyG,uBAAGjF,KAAK,4BAA4BiF,MAAM,YAA1C,4BAchGoD,aAjNR,SAAC,GAAD,IAAG5K,EAAH,EAAGA,QAASoI,EAAZ,EAAYA,QAAS2D,EAArB,EAAqBA,MAArB,MAAkC,CAC/CrB,KAAM,CACJyH,UAAW,QACXC,SAAU,EACVpG,gBAAiBhM,EAAQI,WAAW6L,MACpC,OAAQ,CACNoG,UAAW,OACXrH,OAAQ5C,EAAQ,GAChBkK,QAASlK,EAAQ,IAEnB,OAAQ,CACNmK,YAAanK,EAAQ,IAEvB,SAAU,CACRV,SAAU,GACV8K,WAAY,EACZpH,OAAO,aAAD,OAAepL,EAAQsN,KAAKnN,SAClC6K,OAAQ5C,EAAQ,GAChBkK,QAASlK,EAAQ,GACjBqK,WAAY,EACZvG,aAAcH,EAAMG,cAEtB,MAAO,CACLY,MAAO9M,EAAQsN,KAAKnN,QACpB6K,OAAQ5C,EAAQ,QAyLCwC,CAAvB,KCzJA,OAvCa,SAAC,GAIP,IAHL1D,EAGI,EAHJA,QACA5K,EAEI,EAFJA,KACAoW,EACI,EADJA,QAEMzS,EAAQoI,eACRsK,EAAcC,aAAc3S,EAAM+M,YAAYE,GAAG,OACvD,OACE,kBAAC2F,EAAA,EAAD,CAAWhJ,IAAK6I,EAASxL,QAASA,EAAS9H,UAAU,GACnD,kBAAC,KAAD,CAAS0T,MAAO,CAAE5D,SAAU,SAC1B,kBAAC,GAAD,MACA,kBAAC,GAAD,MACCyD,EAAc,kBAAC,GAAD,MAAe,IAE/BA,EAAc,GAAK,kBAAC,KAAD,KAAS,kBAAC,GAAD,OAC7B,kBAAC,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAOrW,KAAMA,IACb,kBAAC,GAAD,SAqBR,GAAuBoP,aATC,SAAA1N,GAItB,MAAO,CACL1B,MAJ2B0B,EAArB4E,iBAC8BwC,QAAU,IAG3B9I,QAIAoP,CAAvB,IAAmDd,aAtDpC,SAAC,GAAD,IAAG5K,EAAH,EAAGA,QAASoI,EAAZ,EAAYA,QAAS2D,EAArB,EAAqBA,MAArB,MAAkC,CAC/CrB,KAAM,CACJkH,SAAU,QACVjJ,KAAM,EACNoK,OAAQ,EACRT,QAAS,EACTU,cAAe5K,EAAQ,GACvB7I,MAAO,OACPyM,gBAAiBhM,EAAQI,WAAW+L,QACpC8G,UAAW,kBACX/H,UAAU,sBAAD,OAAwBlL,EAAQG,QAAQmB,MACjD4K,aAAcH,EAAMG,iBA2C2BtB,CAAnD,K,gHCjDesI,GAfG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC5B,OAAKD,GAAYA,EAAQ3P,KAClB2P,EAAQ3P,KAAKD,SAAS6G,KAAI,SAACxG,EAAO/E,GAAR,OAC/B,kBAAC,GAAD,CAASwU,QAASzP,EAAOwP,MAAOA,EAAOzX,IAAKkD,OAFR,ICsClCyU,GAAa,SAAC,GAA2B,IAAzB/P,EAAwB,EAAxBA,SAAUgH,EAAc,EAAdA,QAC9B,OAAO,uBAAGnD,MAAO,CACfiE,QAAS,OACTjG,OAAQ,WACRmF,QAASA,GACRhH,IAwHL,OA/Gc,SAAC,GAAmD,IAAjDgQ,EAAgD,EAAhDA,MAAOH,EAAyC,EAAzCA,MAAO1Q,EAAkC,EAAlCA,SAAU2C,EAAwB,EAAxBA,SAAU6B,EAAc,EAAdA,QACzC1D,EAAS+P,EAAT/P,KADuD,EAEvC2F,oBAAS,GAF8B,oBAExDqK,EAFwD,KAElDC,EAFkD,OAGjCtK,oBAAS,GAHwB,oBAGxDuK,EAHwD,KAG/CC,EAH+C,KA2BzDC,EAAO9F,mBAAQ,kBACnB+F,KAAgBC,aAAStQ,EAAKoQ,KAAM,CAAEG,UAAU,EAAMC,OAAQ,eAC7D,CAACT,IAEJ,OAAQA,EAAMU,MACZ,IAAK,OACH,IAAM/R,EAAWqR,EAAM/P,KAAKsC,UACtBuN,EAAUhO,EAASnD,GACzB,OAAIsR,GAAQH,EACH,oCACL,kBAAC,GAAD,CAAY9I,QAxBA,WAClBoJ,GAAW,GACXF,GAAQ,KAuBA,kBAAC,KAAD,OAEDD,GACC,kBAAC,GAAD,CAAWL,QAASE,EAASD,MAAOA,EAAQ,EAAGzX,IAAKuG,KAE/CwR,EACF,kBAAC,GAAD,KACL,kBAACQ,GAAA,EAAD,CAAkBC,KAAM,GAAIC,UAAW,MAGlC,kBAAC,GAAD,CAAY7J,QA3CL,WAKlB,OAJAkJ,GAAQ,GACRE,GAAW,GACXU,YAAW,WAAQV,GAAW,KAAU,KACxCjR,EAASgD,GAAqB6N,KACvB,IAuCD,kBAAC,KAAD,OAIN,IAAK,KACH,IAAMe,EAAY9Q,EAAK+Q,IAAM/Q,EAAKgR,MAClC,OACE,oCACE,6BACE,uBACExK,UAAW9C,EAAQuN,cACnBlS,KAAMV,EAAQ0R,EAAM/P,KAAK/F,UAAW,SAEnC8V,EAAM/P,KAAKkR,QALhB,IAOIJ,EAAY,EAAZ,WAAoBA,GAAcA,EAPtC,KASA,yBAAKtK,UAAW9C,EAAQyN,aAAcf,IAG5C,IAAK,KACH,OAAO,yBAAK5J,UAAW9C,EAAQ0N,cAC7B,uBACE5K,UAAW9C,EAAQ2N,UACnBtS,KAAMV,EAAQ0R,EAAM/P,KAAK/F,UAAW,SAEpC,4BAAKW,EAAiBoF,EAAKgE,SAnDjCqM,KALKrQ,EAAKsR,cACH1W,EAAiBoF,EAAKsR,eADG,IA2D3BtR,EAAKuR,UAEV,QAEE,MAAO,KA6Bb,GACEnK,aAxJa,SAAC,GAAD,IAAG5K,EAAH,EAAGA,QAASoI,EAAZ,EAAYA,QAAZ,MAA2B,CACxCuM,YAAa,CACX3J,OAAQ5C,EAAQ,GAChB6C,aAAc7C,EAAQ,GACtB4M,aAAc,aACd,MAAO,CACLlI,MAAO9M,EAAQsN,KAAK2H,YAGxBL,aAAc,CACZ5J,OAAQ5C,EAAQ,GAChB,MAAO,CACL0E,MAAO9M,EAAQsN,KAAKnN,UAGxBsU,cAAe,CACbzJ,OAAQ5C,EAAQ,GAChBiD,QAAS,SACTyB,MAAO9M,EAAQsN,KAAKnN,SAEtB0U,UAAW,CACT/H,MAAO9M,EAAQsN,KAAKnN,QACpB6P,eAAgB,WAkIlBpF,CADF,IAEEc,aArB6B,SAAC,GAIzB,IAHL9I,EAGI,EAHJA,iBACApF,EAEI,EAFJA,kBACAqF,EACI,EADJA,OAEQ9G,EAAqC8G,EAArC9G,WAAYD,EAAyB+G,EAAzB/G,WAAYgH,EAAaD,EAAbC,SACxBsC,EAAWxC,EAAXwC,OACFvH,EAAY+E,EAAiBpF,GAC7B6H,EAAWxH,EAAUwH,UAAY,GACjChK,EAAQwC,EAAUA,EAAUsE,OAE5B7F,EADQT,EAAc,CAAER,QAAOU,aAAYD,aAAYgH,aAC1CsC,EAAOvG,OAG1B,MAAO,CACLwG,SAHsBA,EAAQ,OAAC/I,QAAD,IAACA,OAAD,EAACA,EAAMyC,OASvC2M,CAFF,KCjKMwJ,GAAiB,SAAC9B,GAAD,IAAQ+B,EAAR,uDAAe,EAAf,OACrB1V,KAAKC,IAAIyV,EAAMA,EAAO/B,IAkDxB,OAvBgB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASD,EAAqB,EAArBA,MAAOlM,EAAc,EAAdA,QAMjC,OACE,kBAACwJ,GAAA,EAAD,CACExF,UAAWkI,GAAS,EAAI,EAAIA,EAAQ,EACpCpJ,UARkB,SAAAoJ,GAAK,OACzBA,EAAQ,IAAM,EAAd,UACOlM,EAAQmM,QADf,YAC0BnM,EAAQkO,mBADlC,UAEOlO,EAAQmM,QAFf,YAE0BnM,EAAQmO,uBAKrBC,CAAclC,IAEzB,kBAAC,GAAD,CAAOG,MAAOF,EAASD,MAAOA,IAC9B,kBAAC,GAAD,CAAWD,QAASE,EAAQ7P,KAAK2P,QAASC,MAAOA,EAAQ,MAWrCxI,aA/CX,SAAC,GAAD,IAAG5K,EAAH,EAAGA,QAASoI,EAAZ,EAAYA,QAAZ,MAAkC,CAC/CiL,QAAS,CACPnH,aAFW,EAAqBH,MAEZG,aACpBoG,QAASlK,EAAQ,GACjB4C,OAAQ5C,EAAQ,GAChBmN,aAAc,EACdtK,aAAc,gBAAGmI,EAAH,EAAGA,MAAH,OACZhL,EAAQ8M,GAAe9B,EAAO,KAEhCX,WAAY,gBAAGW,EAAH,EAAGA,MAAH,OACVhL,EAAQ8M,GAAe9B,EAAO,OAEhCb,YAAa,gBAAGa,EAAH,EAAGA,MAAH,OACXhL,EAAQ8M,GAAe9B,EAAO,QAGlCgC,kBAAmB,CACjBpJ,gBAAiBhM,EAAQI,WAAW6L,OAEtCoJ,sBAAuB,CACrBrJ,gBAAiBhM,EAAQI,WAAW+L,YA2BdvB,CAA1B,KC7Ce4K,GATK,SAAC,GACnB,OADoC,EAAfnQ,SACL7B,KAAKD,SAAS6G,KAC5B,SAACxG,EAAO/E,GAAR,OAAkB,kBAAC,GAAD,CAASwU,QAASzP,EAAOwP,MAAO,EAAGzX,IAAKkD,QCyK9D,OA9HiB,SAAC,GAOX,IANLwG,EAMI,EANJA,SACAoQ,EAKI,EALJA,mBACAnZ,EAII,EAJJA,KACAoZ,EAGI,EAHJA,aACAhT,EAEI,EAFJA,SACAwE,EACI,EADJA,QACI,EAC0BiC,oBAAS,GADnC,oBACGyC,EADH,KACY+J,EADZ,OAE4BxM,oBAAS,GAFrC,oBAEGyM,EAFH,KAEaC,EAFb,KAIJjP,qBAAU,WACJgF,GACFlJ,EAASyC,QAEV,CAAC7I,EAAMsP,IAEVhF,qBAAU,WACR,GAAoC,qBAAzBkP,qBAAX,CAQE,IAAMC,EAAaL,EACb1B,EAASgC,SAASC,eAAe,iBACjCtI,EAAU,CACdoI,WAAW,GAAD,OAAKA,EAAL,MACVG,UAAW,GAUPC,EAAW,IAAIL,sBARE,SAAAM,GACjBA,EAAS,IAAMA,EAAS,GAAGC,eAC7BV,GAAW,GAEXA,GAAW,KAI2ChI,GAC1D,OAAIqG,GACFmC,EAASG,QAAQtC,GACV,kBAAMmC,EAASI,UAAUvC,UAFlC,EAnBA6B,GAAY,KAwBb,CAACH,IAEJ,IAAMc,EAAe,WACnB,OAAOZ,GAAY,yBAAK5L,UAAW9C,EAAQuP,cACzC,uBAAGlM,QAAS,kBAAMoL,GAAY/J,KAC5B,4BAAKA,EAAU,eAAiB,OAAhC,gBAKN,OAAKvG,GAAYoQ,EAEb,6BACE,yBAAKzL,UAAW9C,EAAQwP,QACtB,yBAAK3X,GAAG,WAAWiL,UAAW9C,EAAQwM,SACpC,kBAAChD,GAAA,EAAD,CAAK1G,UAAW9C,EAAQ0N,aAAc1J,UAAW,GAC9CuK,EACG,kBAACkB,GAAA,EAAD,MACA,kBAACH,EAAD,SAKV,yBAAKxM,UAAW9C,EAAQ0P,gBAM5B,6BACE,yBAAK5M,UAAW9C,EAAQ7B,UACtB,yBACEtG,GAAG,WACHiL,UAAS,UAAK9C,EAAQkO,kBAAb,YAAkClO,EAAQwD,OAElDkL,GAAY,kBAACY,EAAD,MACZnR,EAASqF,KAAKN,KAAI,SAACiJ,EAASxU,GAAV,OACjB,kBAAC,GAAD,CAAawG,SAAUgO,EAAS1X,IAAKkD,SAI3C,yBAAKmL,UAAW9C,EAAQ0P,iBAuC9B,GACEhM,aAnKa,SAAC,GAAD,IAAGxC,EAAH,EAAGA,QAASpI,EAAZ,EAAYA,QAAS+L,EAArB,EAAqBA,MAArB,MAAkC,CAC/CrB,KAAM,CACJwB,aAAcH,EAAMG,cAEtB7G,SAAU,CACR6G,aAAcH,EAAMG,aACpBiG,UAAW,qBAAGuD,eAEhBhC,QAAS,CACPxH,aAAcH,EAAMG,aACpBF,gBAAiBhM,EAAQI,WAAW+L,QACpCgG,UAAW,qBAAGuD,eAEhBmB,WAAY,CACVtE,YAAanK,EAAQ,IAEvBZ,MAAO,CACLsF,MAAO9M,EAAQsN,KAAKjN,cAEtBuW,aAAc,CACZzE,UAAW,qBAAG2E,WAA+B1O,EAAQ,IACrD4K,cAAe,GAEjByD,aAAc,CACZpL,QAAS,OACT9L,MAAO,OACP,MAAO,CACLsQ,KAAM,EACNkH,UAAW,SACXjK,MAAO9M,EAAQsN,KAAKnN,QACpB6P,eAAgB,OAChB5K,OAAQ,eAoIZwF,CADF,IAEEc,aA1BsB,SAAC,GAAqD,IAAnD9I,EAAkD,EAAlDA,iBAAkBpF,EAAgC,EAAhCA,kBAAmBqF,EAAa,EAAbA,OACtD9G,EAAqC8G,EAArC9G,WAAYD,EAAyB+G,EAAzB/G,WAAYgH,EAAaD,EAAbC,SACxBsC,EAAWxC,EAAXwC,OACFvH,EAAY+E,EAAiBpF,GAHwC,EAQvEK,GAAa,CACfwH,SAAU,IAJVA,EALyE,EAKzEA,SACAoQ,EANyE,EAMzEA,mBACAtT,EAPyE,EAOzEA,MAKI9G,GAAiB,OAATwC,QAAS,IAATA,OAAA,EAAAA,EAAYsE,KAAU,GAE9B7F,EADQT,EAAc,CAAER,QAAOU,aAAYD,aAAYgH,aAC1CsC,EAAOvG,OAG1B,MAAO,CACLvC,OACAmZ,qBACApQ,SALmB,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAQ,OAAG/I,QAAH,IAAGA,OAAH,EAAGA,EAAMyC,OAWzC2M,CAFF,KCNA,OAzIoB,SAAC,GAWd,IAVLxE,EAUI,EAVJA,QACA5K,EASI,EATJA,KACAoG,EAQI,EARJA,SACAsU,EAOI,EAPJA,gBACA1X,EAMI,EANJA,OACAsQ,EAKI,EALJA,cACAF,EAII,EAJJA,UACA9P,EAGI,EAHJA,OACAqX,EAEI,EAFJA,KACAC,EACI,EADJA,KAEMC,EAAYvJ,mBADd,EAEoCzE,mBAAS7J,GAF7C,oBAEGoW,EAFH,KAEiB0B,EAFjB,OAGkCjO,mBAASF,OAAOC,YAHlD,oBAGGmO,EAHH,KAGgBC,EAHhB,KAKEC,EAAe,WACf3H,GAAelN,EAASK,OAGxByU,EAAe,SAACzT,GACpBrB,Ef2DgC,CAClC9F,KJnG4B,oBmB8D5BgK,qBAAU,WACR,GAAa,IAATqQ,EAAJ,CACA,IAAMQ,EAASN,EAAU9I,QACzB,GAAIoJ,EAAQ,CACV,IAAMC,EAAcD,EAAOE,iBAC3BR,EAAU9I,QAAQuJ,OAAOF,EAAcT,EAAM,WAE/CvU,EfiPgC,CAClC9F,KJ9R6B,uBmB6C1B,CAACqa,IAEJrQ,qBAAU,YACM,IAAVsQ,IACAC,EAAU9I,SACZ8I,EAAU9I,QAAQuJ,OAAOV,EAAM,YAEjCxU,EfkPgC,CAClC9F,KJrS6B,uBmBmD1B,CAACsa,IAEJ,IAAMna,EAAM+Q,mBAAQ,2BAEjB,UAAAxR,EAAKG,oBAAL,yBAAmBob,oBAAnB,eAAiCC,eAAgBxb,EAAKS,KACpDgb,QAAQ,SAAU,UACpB,CAACzb,IAEJsK,oBAAUoR,MAAS,WACjB,IACM9Y,EjB4EwB,SAAC+Y,EAAQ3Y,EAAQC,GACjD,IAAK0Y,EAAU,MAAO,CAAE1Y,MAAO,OAAQD,OAAQA,GAC/C,IAAM4Y,EAAW5Y,GAAU2Y,EAAO1Y,MAAQ0Y,EAAO3Y,QACjD,MAAO,CAAEA,SAAQC,MAAO2Y,GAAY3Y,EAAQ2Y,EAAW,QiB/EzCC,CADG7b,EAAK8b,oBAAsB9b,EAAK+b,YACR/Y,EAAQ2J,OAAOC,YACtDoO,EAAepY,EAAIK,OACnB6X,EAAgBlY,EAAII,UACnB,KAAM,CAAChD,EAAMgD,EAAQ2J,OAAOC,aAqB/B,OAAI8N,GjB5D2B,SAAC1a,GAAU,IAAD,IAEnCmR,EAAI,OAAGnR,QAAH,IAAGA,OAAH,YAAGA,EAAMG,oBAAT,uBAAG,EAAoBE,cAAvB,aAAG,EAA4B2b,cACzC,QAAI7K,GACKvS,EAA+Bqd,QAAQ9K,IAAS,EiBwDlC+K,CAAkBlc,GAtEhB,WACvB,GAAIA,GAAQJ,EAAQI,GAAO,CACzB,IAOMmc,EAAUra,EAAiB9B,EAAK+b,YAAYI,SAClD,OACE,yBAAKzO,UAAW9C,EAAQwR,eACrB7E,KAAgB4E,EAAS,CAAE3N,UAVd,SAAChB,EAAM6O,GACL,QAAd7O,EAAKlN,MAAgC,WAAdkN,EAAK2D,OAC9B3D,EAAK8O,QAAQtZ,OAASoW,GAAgBpW,EACtCwK,EAAK8O,QAAQrZ,MAAQ8X,GAAe,YAWxC,OAAO,8BAuDFwB,GAnBA,yBAAK7O,UAAW9C,EAAQwR,eAC7B,kBAAC,IAAD,CACE7O,IAAKsN,EACL2B,QAASpJ,EACT9P,OAAQA,EACRmZ,QAAQ,OACRhc,IAAKA,EACLiN,UAAW9C,EAAQ8R,YACnB1Z,OAAQoW,EACRnW,MAAO8X,EACP4B,QAAS1B,EACT2B,QAAS1B,EACTvI,UAAU,EACVkK,MAAM,MAgDd,GAA8BzN,aAtBN,SAAA1N,GAAU,IACxB0E,EAA0D1E,EAA1D0E,SAAUlF,EAAgDQ,EAAhDR,kBAAmBoF,EAA6B5E,EAA7B4E,iBAAkBC,EAAW7E,EAAX6E,OAC/CuW,EAA8DvW,EAA9DuW,YAAaxJ,EAAiD/M,EAAjD+M,cAAeF,EAAkC7M,EAAlC6M,UAAW9P,EAAuBiD,EAAvBjD,OAAQqX,EAAepU,EAAfoU,KAAMC,EAASrU,EAATqU,KACvDvL,EAAe/I,EAAiBwC,QAAU,GAKhD,MAAO,CACL1C,WACA8B,YANqB5B,EAAiBpF,IAAsB,CAC5DgH,YAAY,IADNA,WAONlI,KAAMqP,EAAarP,KACnB0a,gBAAiBrL,EAAa0N,eAC9BD,cACAxJ,gBACAF,YACA9P,SACAqX,OACAC,UAI0BxL,CAA9B,IAA0Dd,aA1J3C,iBAAO,CACpBoO,YAAa,CACXhN,gBAAiB,QACjBsN,OAAQ,IAEVZ,cAAe,CACba,UAAW,UACXvN,gBAAiB,QACjBX,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACfX,UAAW,uBACX0O,WAAY,gCA6I0C5O,CAA1D,KCjBA,OA5GoB,SAAC,GAOd,IANLtL,EAMI,EANJA,OACAhD,EAKI,EALJA,KACAsT,EAII,EAJJA,cACAoH,EAGI,EAHJA,gBACAtU,EAEI,EAFJA,SACAwE,EACI,EADJA,QACI,EAE0BiC,oBAAS,GAFnC,oBAEGuK,EAFH,KAEYC,EAFZ,OAGkBxK,mBAAS7M,EAAKiL,WAHhC,oBAGGxK,EAHH,KAGQ0c,EAHR,OAIwBtQ,mBAAS,MAJjC,oBAIG8O,EAJH,KAIWyB,EAJX,OAKgCvQ,mBAAS,MALzC,oBAKGwQ,EALH,KAKeC,EALf,OAMkCzQ,mBAAS7J,GAN3C,oBAMGua,EANH,KAMgBC,EANhB,KAqBEC,EAAU,WACd,IAAMC,ElBiFkB,SAAC1d,EAAMgD,GAAY,IAAD,EAC5C,aAAIhD,EAAKU,eAAT,aAAI,EAAcC,QAAS,CACzB,IAAMgd,EAAS,IAAI1b,UACb2b,EAAS5d,EAAKU,QAAQkd,OAAO,GAAGC,YAChCC,EAAgBF,EAAOG,MAAK,SAACL,GAAD,OAAWA,EAAM1a,QAAUA,MAC3D4a,EAAOA,EAAOzW,OAAS,GACzB,GAAI2W,GAAiBA,EAAcrd,IAGjC,OAAO,EAAP,GACKqd,EADL,CAEErd,IAJUkd,EAAOzb,gBAAgB4b,EAAcrd,IAAK,aACnD6W,KAAKlV,ekBzFI4b,CAAahe,EAAMgD,GACjCma,EAAOO,EAAMjd,KAAOT,EAAKS,KAVL,WAAmB,IAAlB8M,EAAiB,uDAAXoO,EACrB+B,EACJ/a,EAAmB4K,EAAKvK,EAAQ2J,OAAOC,YAEzC0Q,EAAcI,EAAMza,OACpBua,EAAeE,EAAM1a,QAMrBib,CAActC,GAAU+B,IAqB1B,OAlBApT,qBAAU,WACR,IAAM4T,EAAUnG,YAAW,WACrBzE,GAAelN,EAASK,QAC3B,KAEH,OAAO,kBAAM0X,aAAaD,MACzB,CAACle,EAAMsT,IAEVhJ,qBAAU,WACR+M,GAAW,GACX+F,EAAU,MACVK,MACC,CAACzd,IAEJoe,2BAAgB,WACdX,MACC,CAACza,EAAQ2J,OAAOC,aAEf8N,EACK,yBAAKhN,UAAW9C,EAAQnD,OAC7B,wDACA,uBAAGiG,UAAW9C,EAAQyT,aAAcpY,KAAMjG,EAAKS,KAA/C,eAGA,mCAAUT,EAAKse,SAIZ,yBAAK5Q,UAAW9C,EAAQwR,eAC7B,yBACE7O,IAAK6P,EACL/R,IAAK5K,EACLuC,OAAQoU,EAAU,EAAImG,EACtBta,MAAOmU,EAAU,EAAIiG,EACrBT,QArDY,SAACnV,GACf4P,GAAW,GACXjR,EhBmDgC,CAClC9F,KJnG4B,oBoBmGxBie,OAAQ,kBAAMlH,GAAW,MAE3B,kBAAC9L,GAAA,EAAD,CACEC,QAAQ,OACRxI,OAAQoU,EAAUmG,GAAeva,EAAS,EAC1CC,MAAOmU,EAAUiG,GAAc1Q,OAAOC,WAAa,MAkCzD,GAA8BwC,aAlBN,SAAA1N,GAAU,IACxB0E,EAA0D1E,EAA1D0E,SAAUlF,EAAgDQ,EAAhDR,kBAAmBoF,EAA6B5E,EAA7B4E,iBAAkBC,EAAW7E,EAAX6E,OAC/CuW,EAA+BvW,EAA/BuW,YAAaxJ,EAAkB/M,EAAlB+M,cACfjE,EAAe/I,EAAiBwC,QAAU,GAKhD,MAAO,CACL1C,WACA8B,YANqB5B,EAAiBpF,IAAsB,CAC5DgH,YAAY,IADNA,WAONlI,KAAMqP,EAAarP,KACnB0a,gBAAiBrL,EAAa0N,eAC9BD,cACAxJ,mBAI0BlE,CAA9B,IAA0Dd,aAhJ3C,SAAC,GAAD,IAAG5K,EAAH,EAAGA,QAAH,MAAkB,CAC/B0Y,cAAe,CACba,UAAW,UACXvN,gBAAiB,QACjB1M,OAAQ,qBAAGA,QAGX+L,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACfqP,IAAK,EACLnS,KAAM,EACNmC,UAAW,uBACX0O,WAAY,6BAEdzV,MAAO,CACLzE,OAAQ,qBAAGA,QAGX0M,gBAAiBhM,EAAQI,WAAW+L,QACpC2O,IAAK,EACLC,OAAQ,EACR1P,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACf6N,OAAQ,IAEVqB,aAAc,CACZ7N,MAAO9M,EAAQsN,KAAKnN,QACpBuH,SAAU,GACVsI,eAAgB,WAgHsCpF,CAA1D,KC/BA,OAzEsB,SAAC,GAOhB,IANLtL,EAMI,EANJA,OACAhD,EAKI,EALJA,KACAsT,EAII,EAJJA,cACAF,EAGI,EAHJA,UACAhN,EAEI,EAFJA,SACAwE,EACI,EADJA,QAUA,OARAN,qBAAU,WACR,IAAM4T,EAAUnG,YAAW,WACrBzE,GAAelN,EAASK,QAC3B,KAEH,OAAO,kBAAM0X,aAAaD,MACzB,CAACle,EAAMsT,IAELF,EAkBE,yBAAK1F,UAAW9C,EAAQwR,eAC7B,4BACE/Q,IAAKrL,EAAKS,IACVuC,OAAQA,EACRC,MAAO0J,OAAOC,WACd8R,QAAQ,mBAtBH,yBAAKhR,UAAW9C,EAAQ+T,MAC7B,kDACA,uBAAG1Y,KAAMjG,EAAKS,KAAd,eAGA,mCAAUT,EAAKse,QACf,yBAAK5Q,UAAW9C,EAAQ+H,UACtB,kBAAC,GAAD,CACES,UAAWA,EACXnF,QAAS,WACP7H,EjBmO2B,CACrC9F,KJnRyB,sBqB6F3B,GAAgC8O,aAlBR,SAAA1N,GAAU,IACxB0E,EAA0D1E,EAA1D0E,SAAUlF,EAAgDQ,EAAhDR,kBAAmBoF,EAA6B5E,EAA7B4E,iBAAkBC,EAAW7E,EAAX6E,OAC/CuW,EAA0CvW,EAA1CuW,YAAaxJ,EAA6B/M,EAA7B+M,cAAeF,EAAc7M,EAAd6M,UAC9B/D,EAAe/I,EAAiBwC,QAAU,GAKhD,MAAO,CACL1C,WACA8B,YANqB5B,EAAiBpF,IAAsB,CAC5DgH,YAAY,IADNA,WAONkL,YACApT,KAAMqP,EAAarP,KACnB8c,cACAxJ,mBAI4BlE,CAAhC,IAA4Dd,aAlH7C,SAAC,GAAD,IAAG5K,EAAH,EAAGA,QAASoI,EAAZ,EAAYA,QAAZ,MAA2B,CACxCsQ,cAAe,CACbrN,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACfyD,SAAU,SACV4L,IAAK,EACLnS,KAAM,EACN6Q,WAAY,4BACZ1O,UAAW,uBACX,WAAY,CACVM,OAAQ,IAGZ6P,KAAM,CACJ3b,OAAQ,qBAAGA,QAGX0M,gBAAiBhM,EAAQI,WAAW+L,QACpC2O,IAAK,EACLC,OAAQ,EACR1P,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACf6N,OAAQ,GACR,MAAO,CACLxM,MAAO9M,EAAQsN,KAAKnN,QACpBuH,SAAU,GACVsI,eAAgB,SAGpBf,SAAU,CACR5D,QAAS,OACTI,cAAe,MACfZ,SAAU,OACVqQ,YAAa9S,EAAQ,OA6EmCwC,CAA5D,KC7FMuQ,GAAkB,kBACtB1b,KAAKC,IAAI,IAA0B,IAArBuJ,OAAOC,aA+MvB,OAlKa,SAAC,GAYP,IAXLhC,EAWI,EAXJA,QACAnD,EAUI,EAVJA,MACAS,EASI,EATJA,WACAlI,EAQI,EARJA,KACAoZ,EAOI,EAPJA,aACAoB,EAMI,EANJA,WACAhb,EAKI,EALJA,WACAC,EAII,EAJJA,WACA2T,EAGI,EAHJA,UACA5M,EAEI,EAFJA,SACAJ,EACI,EADJA,SACI,EAEwCyG,oBAAS,GAFjD,oBAEGiS,EAFH,KAEmBC,EAFnB,KAgEEC,EAASxN,mBAAQ,yBAErBxR,QAFqB,IAErBA,OAFqB,EAErBA,EAAMmL,UACL,CAACnL,IAEEif,EAAyBvD,MAAS,WACjCtI,EAGHxT,EAAQI,IACR2M,OAAOuS,YAAc,GAAK9F,EAAe,GACzCzM,OAAOuS,aAAe9F,EAEtB2F,GAAkBC,GAASxY,IAEJ,IAAvBmG,OAAOuS,aACPvS,OAAOuS,YAAe9F,IAEtB2F,GAAkB,GAXlBA,GAAkB,KAanB,KAUH,GARAzU,qBAAU,WAGR,OAFA2U,IACAtS,OAAOO,iBAAiB,SAAU+R,GAC3B,kBACLtS,OAAOQ,oBAAoB,SAAU8R,MAEtC,CAAC7F,EAAc5S,EAAUwY,EAAQ5L,IAEhClL,EACF,OA3EO,yBAAKwF,UAAW9C,EAAQwM,SAC7B,kBAAC7L,GAAA,EAAD,CAAUtI,MAAM,OAAOD,OAAO,UA2E3B,GAAIyE,EACT,OAtCO,yBAAKiG,UAAW9C,EAAQwM,SAC7B,+DAsCG,GAAKpX,GAASA,EAAKS,IAEnB,CACL,IAAMiN,EAAYoR,EACdlU,EAAQuU,WAAavU,EAAQwD,KACjC,OAAO,yBAAKtD,MAAO,CAAE2D,QAASvG,EAAa,GAAM,IAC/C,yBACEwF,UAAW9C,EAAQwM,QACnBtM,MAAO,CAAEiE,QAAS+P,EAAiB,QAAU,SAE7C,qDAEF,kBAACvI,EAAA,EAAD,CAAWzT,UAAU,EAAO4K,UAAWA,GACnC1N,EAAKmL,UAAY3E,EAjEhB,yBAAKkH,UAAW9C,EAAQwM,SAC7B,6CACA,2EACA,yBAAK1J,UAAW9C,EAAQ+H,UACtB,kBAAC,GAAD,CACEnM,SAAUA,EACVyH,QAAS,kBAAM7H,ElB4Kc,CACrC9F,KJzRyB,qBsB4DL,WAClB,IAAM0C,EAAS8b,EA3DjBD,MAAqB,EAAI,IA6DnBzF,EACJ,OAAIxZ,EAAQI,GACH,kBAAC,GAAD,CAAagD,OAAQA,IACnBlD,EAAQE,GACV,kBAAC,GAAD,CAAagD,OAAQA,IACnBhD,EAAKof,QACP,GAEA,kBAAC,GAAD,CAAepc,OAAQA,IAgGkBqc,IAEhD,kBAAC,GAAD,CAAUjG,aAAcA,EAAcoB,WAAYA,KAdpD,OAzEO,yBAAK9M,UAAW9C,EAAQwM,SAC7B,4CACA,yDACA,yBAAK1J,UAAW9C,EAAQ+H,UACtB,kBAAC,GAAD,CACEnT,WAAYA,EACZyO,QAAS,kBAAM7H,EAAS+D,SAE1B,kBAAC,GAAD,CACE1K,WAAYA,EACZwO,QAAS,kBAAM7H,EAAS8D,UAG5B,yBAAKwD,UAAW9C,EAAQ+H,UACtB,kBAAC,GAAD,CAAgB1E,QAAS,kBAAM7H,EAASwC,YA8GhD,GAAuBwG,aAlBC,SAAA1N,GAAU,IACxBR,EAAgDQ,EAAhDR,kBAAmBoF,EAA6B5E,EAA7B4E,iBAAkBC,EAAW7E,EAAX6E,OACrC/G,EAAgD+G,EAAhD/G,WAAYC,EAAoC8G,EAApC9G,WAAY+G,EAAwBD,EAAxBC,SAAU4M,EAAc7M,EAAd6M,UACpC/D,EAAe/I,EAAiBwC,QAAU,GAKhD,MAAO,CACLZ,YALqB5B,EAAiBpF,IAAsB,CAC5DgH,YAAY,IADNA,WAMNlI,KAAMqP,EAAarP,KACnBR,aACAC,aACA+G,WACA4M,eAImBhE,CAAvB,IAAmDd,aA1MpC,SAAC,GAAD,IAAG5K,EAAH,EAAGA,QAASoI,EAAZ,EAAYA,QAAS4E,EAArB,EAAqBA,YAArB,MAAwC,CACrDtC,KAAM,CACJpL,OAAQ,qBAAGoW,cAGX1K,OAAQ,EACRsH,QAAS,EACTpD,SAAU,SACV0M,QAAS,WACT5P,gBAAiB,SAEnByP,WAAW,aACT7J,SAAU,QACVmB,OAAQ,qBAAG+D,YACX+E,MAAO,EACPtc,MAAO4b,GACPnP,gBAAiB,cACjBjB,QAAS,IACRiC,EAAY8O,KAAK,MAAQ,CACxBzQ,QAAS,SAGbqI,QAAS,CACP1H,gBAAiBhM,EAAQI,WAAW+L,QACpC7M,OAAQ,qBAAGoW,cAGXrK,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBC,cAAe,UAEjBwD,SAAU,CACR5D,QAAS,OACTI,cAAe,MACfZ,SAAU,OACVqQ,YAAa9S,EAAQ,OAsK0BwC,CAAnD,KCpJemR,GAbe,SAAC,GAAkB,IAAhBrZ,EAAe,EAAfA,SACzBsZ,EAAgB,SAAC9K,GACrBxO,EA7DgC,SAAAwO,GAAK,OAAI,SAACxO,EAAUC,GAEtD,GADmBA,IAAXE,OACIoZ,mBACR/K,EAAMgL,QACV,OAAQhL,EAAMvV,KACZ,IAAK,IACL,IAAK,IACH,OAAO+G,EAASK,MAClB,IAAK,IACL,IAAK,IACH,OAAOmO,EAAMiL,SAAWzZ,EAASK,WAAc,EACjD,IAAK,IACL,IAAK,IACH,OAAOL,EAASM,MAClB,IAAK,IACL,IAAK,IACH,OAAOkO,EAAMiL,SAAWzZ,EAASM,WAAkB,EACrD,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,IAEH,OADKkO,EAAMiL,UAAUjL,EAAMhJ,iBACpBxF,EnBwQ0B,CACrC9F,KJnRyB,gBuBWvB,IAAK,IACH,OAAO8F,EnBkQiC,CAC5C9F,KJhRiC,wBuBc/B,IAAK,IACH,OAAO8F,EnBwPgC,CAC3C9F,KJ1Q+B,sBuBkB7B,IAAK,SACH,OAAO8F,EnB0PiC,CAC5C9F,KJ7QgC,uBuBmB9B,IAAK,YACH,OAAO8F,EnBiRkC,CAC7C9F,KJ1RmC,wBI2RnCwf,QmBnRwC,IACtC,IAAK,aACH,OAAO1Z,EnB0QqB,SAAA0Z,GAAO,MAAK,CAC5Cxf,KJtRkC,uBIuRlCwf,WmB5QoBC,CAAmB,KACrC,IAAK,UAEH,OADKnL,EAAMiL,UAAUjL,EAAMhJ,iBACpBxF,EnBkSwB,CACnC9F,KJ5S8B,qBuBU5B,IAAK,YAEH,OADKsU,EAAMiL,UAAUjL,EAAMhJ,iBACpBxF,EnB2R0B,CACrC9F,KJvSgC,uBuBY9B,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,IAAM0f,EAASC,SAASrL,EAAMvV,IAAK,IACnC,OAAO+G,EAAS0D,GAAakW,IAC/B,IAAK,MAEH,OAAO5Z,EAAS0D,GAAa,KAC/B,QACE,SAMOoW,CAAqBtL,KAGhCtK,qBAAU,WAER,OADAoP,SAASpC,KAAKpK,iBAAiB,UAAWwS,GACnC,WACLhG,SAASpC,KAAKnK,oBAAoB,UAAWuS,MAE9C,KChBUS,GAnEmB,SAAC,GAAkC,IAAhC9V,EAA+B,EAA/BA,aAAcnC,EAAiB,EAAjBA,WAC3CkO,EAAU9E,mBADkD,EAG1BzE,mBAAS,GAHiB,oBAG3DuM,EAH2D,KAG7C0B,EAH6C,OAI9BjO,mBAAS,GAJqB,oBAI3D2N,EAJ2D,KAI/C4F,EAJ+C,OAKlBvT,mBAAS,GALS,oBAK3DwT,EAL2D,KAKzCC,EALyC,OAM5BzT,mBAAS,GANmB,oBAM3D0T,EAN2D,KAM9CC,EAN8C,OAO1B3T,mBAASF,OAAO8T,aAPU,oBAO3DC,EAP2D,KAO7CC,EAP6C,KAS5DC,EAAsB,WAAO,IACzB7O,EAAYqE,EAAZrE,QACR,OAAIA,EACUA,EAAQ7F,wBACTlJ,OAEJwX,GAILqG,EAAkB,kBACtBlU,OAAO8T,YAAcJ,GAGjBrT,EAAWC,MAAS,WACxB0T,EAAgBE,KAChBT,EAAcQ,OACb,KAEGE,EAAsB,WACQ,qBAAvBnU,OAAO4T,aAChBC,EAAe7T,OAAO4T,cAkC1B,OA/BAjW,qBAAU,WACR8V,EAAcQ,OACb,CAACxK,IAEJ9L,qBAAU,WACRwQ,EAAgB+F,OACf,CAACH,EAAcrW,EAAcgW,IAEhC/V,qBAAU,WACR,IAAMyW,EAA2B,KAAbvG,EAAoB7N,OAAO8T,YAC/CH,EAAoBjW,GAAgB0W,EAAc,EAAIvG,KACrD,CAACnQ,EAAcqW,EAAclG,EAAY+F,IAE5CjW,qBAAU,WACRqW,EAAgBhU,OAAOqU,cACvBZ,EAAcQ,KACd9F,EAAgB+F,OACf,CAACxW,EAAcnC,EAAYqY,IAE9BjW,qBAAU,WAER,OADAqC,OAAOO,iBAAiB,SAAUF,GAC3B,kBAAOL,OAAOQ,oBAAoB,SAAUH,MAClD,IAEH1C,qBAAU,WAER,OADAqC,OAAOO,iBAAiB,oBAAqB4T,GACtC,kBACLnU,OAAOQ,oBAAoB,oBAAqB2T,MAEjD,IAEI,CAAE1H,eAAcoB,aAAYpE,Y,SCxCtB6K,GArBS,SAAC,GAKlB,IAJL7a,EAII,EAJJA,SACAE,EAGI,EAHJA,iBACApF,EAEI,EAFJA,kBACAqH,EACI,EADJA,OAEA+B,qBAAU,WACRlE,EAASqC,GAAcvH,MACtB,CAACA,IAEJoJ,qBAAU,WACR,GAAIhE,EAAiBwC,QAAUxC,EAAiBwC,OAAO9I,KAAM,CAC3D,IACMkhB,EvB+FsB,SAAC/f,EAAWD,GAC5C,IAAME,EAAQR,EAAcO,GAC5B,OAAIC,GAA+B,QAAtBF,EACJC,EAAUsa,QAAQra,EAAME,OAAOC,UAAW,OAE1CJ,EuBpGgBggB,CADH7a,EAAiBwC,OAAO9I,KAAKmB,UACID,GAC/CggB,GAAgBA,IAAiB3Y,EAAO1G,SAAShB,UACnDuF,EAASmB,aAAK2Z,OAGjB,CAAC5a,EAAkBiC,K,+BCDT6Y,GAhBK,SAAC,GAAmB,IAAjBrc,EAAgB,EAAhBA,UACfsc,EAAmB/K,aAAc,iCAEvC,OAAO9E,mBAAQ,kBACb8P,aAAe,CACb5d,QAAS,CACPpD,KAAMyE,IAAcsc,EAAmB,QAAU,QACjDxd,QAAS0d,MAEXC,WAAY,CACVC,WAAY,sCAGf,CAAC1c,EAAWsc,KCgEjB,OA5DY,SAAC,GASN,IARLngB,EAQI,EARJA,kBACAoF,EAOI,EAPJA,iBACAvB,EAMI,EANJA,UACAsF,EAKI,EALJA,aACAnC,EAII,EAJJA,WACA9B,EAGI,EAHJA,SACAwE,EAEI,EAFJA,QACArC,EACI,EADJA,OAGM5E,EAAQyd,GAAY,CAAErc,cAFxB,EAIFob,GAA0B,CAAE9V,eAAcnC,eADpCkR,EAHJ,EAGIA,aAAcoB,EAHlB,EAGkBA,WAAYpE,EAH9B,EAG8BA,QAOlC,OCxCa,WAEb,IAAMsL,EAAmB,SAAC9M,GAMxB,OALIA,EAAMC,gBAAkBD,EAAM8C,SAChC/K,OAAOgV,QACP5J,WAAWpL,OAAOgV,MAAO,MAGpB,GAGTrX,qBAAU,WAER,OADAqC,OAAOO,iBAAiB,OAAQwU,GACzB,kBAAM/U,OAAOQ,oBAAoB,OAAQuU,ODsBlDE,GACAnC,GAAsB,CAAErZ,aACxB6a,GAAgB,CAAE7a,WAAUE,mBAAkBpF,oBAAmBqH,WACjE6B,GAAc,CAAEhE,WAAUiE,iBAGxB,kBAAC,IAAD,CAAkB1G,MAAOA,GACvB,kBAAC4S,EAAA,EAAD,CAAW3L,QAASA,EAAS9H,UAAU,GACrC,kBAAC+e,EAAA,EAAD,MACA,kBAAC,GAAD,CAAMzL,QAASA,IACf,kBAAC,GAAD,CAAMgD,aAAcA,EAAcoB,WAAYA,OAoCtD,GAAsBlM,aAnEP,iBAAO,CACpBF,KAAM,CACJwQ,YAAa,EACb3F,aAAc,MAgEI3K,CAAtB,IAA4Cc,aAnBpB,SAAC,GAKlB,IAJLlO,EAII,EAJJA,kBACAoF,EAGI,EAHJA,iBACAiC,EAEI,EAFJA,OACAhC,EACI,EADJA,OAEQ2B,GAAe5B,EAAiBpF,IAAsB,CAC5DgH,YAAY,IADNA,WAGR,MAAO,CACLhH,oBACAoF,mBACAiC,SACAxD,UAAWwB,EAAOxB,UAClBsF,aAAc9D,EAAO8D,aACrBnC,gBAIwCkH,CAA5C,K,ioBEhCO,IAAMlO,GAAoB,WAAwC,IAAvCQ,EAAsC,uDAA9B/C,EAAmBgD,EAAW,uCACtE,OAAQA,EAAOrB,MACb,I7B/C4B,mB6BgD1B,OAAOqB,EAAOJ,UAChB,KAAKugB,KACH,OAAO7gB,EAAwBS,EAAOC,EAAOC,QAAQC,SAAShB,UAChE,QACE,OAAOa,IAIPqgB,GAAgB,WAahB,IAAD,IAZHrgB,EAYG,uDAZK,CACNwG,YAAY,EACZC,eAAe,EACfY,SAAU,GACVlD,MAAO,MACPmc,IAAK,GACLC,IAAK,GACLC,cAAe,GACf1D,IAAK,GACL2D,OAAQ,IAEVxgB,EACG,uCACH,OAAQA,EAAOrB,MACb,I7BtEgC,uB6BuE9B,OAAO,MACFoB,EADL,CAEEyG,eAAe,IAEnB,I7BzEkC,yB6B0EhC,OAAO,MACFzG,EADL,CAEEmE,MAAOlE,EAAOkE,QAElB,I7BpFyB,gB6BqFvB,OAAO,MACFnE,EADL,CAEEwG,YAAY,EACZC,eAAe,EACfV,MAAO,OAEX,I7B1FyB,gB6B2FvB,IAAM4B,EAAQ1H,EAAO5C,MACrB,OAAO,MACF2C,GADL,GAEEwG,YAAY,EACZC,eAAe,GAHjB,cAIGxG,EAAOkE,MAAQwD,GAJlB,yBAKY3H,EAAMqH,UALlB,4BAMepH,EAAO+F,YANtB,IAQF,I7BnG+B,sB6BoG7B,OAAO,MACFhG,GADL,GAEEwG,YAAY,EACZC,eAAe,GAHjB,cAIGxG,EAAOkE,MAAQ,IAJlB,sBAKSlE,EAAO8F,OALhB,IAOF,KAAKqa,KACH,IAAM3Z,EAAgB1G,EACpBE,EAAOJ,UACPI,GAGF,OAAO,MACFD,EADL,CAEEyG,gBACAD,YAAY,EACZrC,MAAOnE,EAAMmE,OAAS,MACtB4B,MAAO,OAEX,I7B7G4B,mB6B8G1B,OAAO,MACF/F,EADL,CAEEyX,oBAAoB,EACpB1R,MAAO,OAEX,I7BlH4B,mB6BmH1B,IAAMsB,EAAQ,MAAQrH,EAAMqH,SAAd,eAAyBpH,EAAO3B,KAAKyC,GAAK,CACtD2L,KAAMzM,EAAOoH,YAEf,OAAO,MACFrH,EADL,CAEEyX,oBAAoB,EACpBpQ,aAEJ,I7B1HkC,yB6B2HhC,OAAO,MACFrH,EADL,CAEEyX,oBAAoB,EACpB1R,MAAO9F,EAAO8F,QAElB,I7B9H2B,kB6B+HzB,OAAO,MACF/F,EADL,CAEE+F,MAAO,OAEX,I7BlI2B,kB6BmIH,IAAD,UAArB,OAAI9F,EAAOoH,SACF,MACFrH,EADL,CAEEqH,SAAS,MACJrH,EAAMqH,SADH,eAELpH,EAAO3B,KAAKyC,GAFP,MAGDf,EAAMqH,SAASpH,EAAO3B,KAAKyC,IAH1B,4BAIGd,EAAOiE,WACZ,UAAAjE,EAAOoH,SAAS,UAAhB,yBAAoB7B,YAApB,yBAA0BD,gBAA1B,yBAAqC,UAArC,yBAAyCC,YAAzC,eAA+C2P,UAAW,SAM3DnV,EAEX,I7BlJiC,wB6BmJ/B,OAAO,MACFA,EADL,CAEE+F,MAAO9F,EAAO8F,QAGlB,QAEE,OAAO/F,IAIA2N,GAAe,WAAyB,IAAD,EAAvB3N,EAAuB,uDAAf,GAAIC,EAAW,uCAClD,OAAQA,EAAOrB,MACb,I7BlLyB,gB6BwLzB,I7B/KuB,c6BgLrB,OAAO,MACFoB,EADL,GAEKgB,EAAYhB,EAAOC,GAFxB,CAGEob,gBAAgB,IAEpB,I7BvLqB,Y6BwLnB,IAAMqF,EAAY1gB,EAAMa,MAAQ,EAC1BkE,EAAW9E,EAAO5C,MAAMqjB,GAC9B,OAAO,MACF1gB,EADL,CAEEa,MAAOkE,EAAW2b,EAAY,EAC9BpiB,KAAMyG,GAAY9E,EAAO5C,MAAM,GAC/Bge,gBAAgB,IAEpB,I7B/LyB,gB6BgMvB,IAAMsF,EACJ3gB,EAAMa,MAAQ,GAAK,EAAIb,EAAMa,MAAQ,EAAIZ,EAAO5C,MAAMoI,OAAS,EACjE,OAAO,MACFzF,EADL,CAEEa,MAAO8f,EACPriB,KAAM2B,EAAO5C,MAAMsjB,GACnBtF,gBAAgB,IAEpB,I7BtM0B,iB6BuMxB,OAAO,MACFrb,EADL,CAEEqb,gBAAgB,IAEpB,KAAK+E,KACH,IAAM1gB,EAAQL,EAAgBY,EAAOC,QAAQC,SAAShB,UACtD,OAAIO,GAAWM,EAAM1B,MAAQoB,EAAME,OAAOgB,SAAWZ,EAAM1B,KAAKyC,GAOvDf,EANA,MACFA,EADL,GAEKW,EAAajB,EAAME,OAAOgB,OAAQX,EAAO5C,QAMlD,I7B7NgC,uB6B8N9B,OAAO,MACF2C,EADL,CAEE1B,KAAM,CAAEyC,GAAIf,EAAM1B,KAAO0B,EAAM1B,KAAKyC,GAAK,QAE7C,I7B1M8B,qB6B2M9B,I7B1M8B,qB6B2M5B,OAAO,MACFf,EADL,GAEKW,EAAY,UAACV,EAAO3B,YAAR,aAAC,EAAayC,GAAId,EAAO5C,QAE5C,I7BtOkC,yB6BuOhC,OAAO,MACF2C,GAEP,QACE,OAAOA,IAIA4E,GAAmB,WAAqC,IAAD,EAAnC5E,EAAmC,uDAA3B,CAAEoH,OAAQ,IAAMnH,EAAW,uCAClE,OAAQA,EAAOrB,MACb,I7BnPgC,uB6BoPhC,I7BxPyB,gB6ByPzB,I7BxPyB,gB6ByPzB,I7BxP+B,sB6ByP/B,I7B9O4B,mB6B+O5B,I7B9O4B,mB6B+O5B,I7B9OkC,yB6B+OlC,I7B7O2B,kB6B8O3B,I7B7O2B,kB6B8O3B,I7B7OiC,wB6B8OjC,I7BrO8B,qB6BsO9B,I7BrO8B,qB6BsO9B,I7B7PkC,yB6B8PhC,OAAO,MACFoB,GADL,mBAEGC,EAAOJ,UAAYwgB,GAAcrgB,EAAMC,EAAOJ,WAAYI,IAF7D,uBAGU0N,GAAa3N,EAAMoH,OAAQnH,IAHrC,IAKF,I7B/PuB,c6BgQvB,I7BlQqB,Y6BmQrB,I7BlQyB,gB6BmQzB,I7BjQ0B,iB6BkQxB,OAAO,MACFD,EADL,CAEEoH,OAAQuG,GAAa3N,EAAMoH,QAAU,GAAInH,KAE7C,KAAKmgB,KACH,IAKe,EALTvgB,EAAYN,EAChB,KAAMU,EAAOC,QAAQC,SAAShB,UAE1BgF,EAAQnE,EAAMmE,OAAS,MACvB9G,EAAQ2C,EAAMH,GAAaG,EAAMH,GAAWsE,GAAS,GAC3D,OAAItE,EACK,MACFG,GADL,mBAEGH,EAAYwgB,GAAcrgB,EAAMH,GAAP,MACrBI,EADqB,CAExB5C,QACAwC,gBALJ,uBAOU8N,GAAa3N,EAAMoH,OAAP,MACfnH,EADe,CAElB5C,QACAwC,gBAVJ,IAeOG,EAEX,I7BpS4B,mB6BqS1B,OAAO,MACFA,EADL,eAEGC,EAAOJ,UAAY,OAExB,QACE,OAAOG,IAIP2Q,GAAa,WAAyC,IAAxC3Q,EAAuC,uDAA/BhD,EAAoBiD,EAAW,uCACzD,OAAQA,EAAOrB,MACb,I7BjTgC,uB6BkT9B,IAAMgiB,EAAS,IAAIC,IAAI7gB,GAEvB,OADA4gB,EAAOE,IAAI7gB,EAAOJ,WACX8L,MAAMC,KAAKgV,GACpB,I7BpT4B,mB6BqT1B,IAAMG,EAAY,IAAIF,IAAI7gB,GAE1B,OADA+gB,EAAUC,OAAO/gB,EAAOJ,WACjB8L,MAAMC,KAAKmV,GACpB,QACE,OAAO/gB,IAIPihB,GAAiB,CACrBtY,cAAc,EACdiJ,eAAe,EACfvO,UAAW,OACXyB,UAAU,EACVmZ,kBAAkB,EAClBngB,YAAY,EACZC,YAAY,EACZ6D,OAAQ,EACRqX,KAAM,EACNC,MAAO,GAGHrU,GAAS,WAAqC,IAApC7E,EAAmC,uDAA3BihB,GAAgBhhB,EAAW,uCACjD,OAAQA,EAAOrB,MACb,I7B3T6B,oB6B4T3B,OAAO,MACFoB,EADL,CAEE2I,cAAc,IAElB,I7B/T8B,qB6BgU5B,OAAO,MACF3I,EADL,CAEE2I,cAAc,IAElB,I7BtU6B,oB6BuU3B,OAAO,MACF3I,EADL,CAEE2I,cAAe3I,EAAM2I,eAEzB,I7BxU+B,sB6ByU7B,OAAO,MACF3I,EADL,CAEE4R,eAAgB5R,EAAM4R,gBAE1B,I7B5UuB,c6B6UrB,OAAO,MACF5R,EADL,CAEE0R,WAAY1R,EAAM0R,YAEtB,I7BhV6B,oB6BiV3B,OAAO,MACF1R,EADL,CAEEqD,UAA+B,SAApBrD,EAAMqD,UAAuB,QAAU,SAEtD,I7BpVuB,c6BqVrB,OAAO,MACFrD,EADL,CAEE8E,UAAW9E,EAAM8E,WAErB,I7BvV8B,qB6BwV5B,OAAO,MACF9E,EADL,CAEElC,YAAakC,EAAMlC,aAEvB,I7B7V8B,qB6B8V5B,OAAO,MACFkC,EADL,CAEEjC,YAAaiC,EAAMjC,aAEvB,I7BvV4B,mB6BwV1B,OAAO,MACFiC,EADL,CAEE4B,OAAQD,EAAgB3B,EAAM4B,OAAQ,MAE1C,I7B3V8B,qB6B4V5B,OAAO,MACF5B,EADL,CAEE4B,OAAQD,EAAgB3B,EAAM4B,QAAS,MAE3C,I7BtWgC,uB6BuW9B,OAAO,MACF5B,EADL,CAEEiZ,KAAMhZ,EAAOme,UAEjB,I7B1WiC,wB6B2W/B,OAAO,MACFpe,EADL,CAEEiZ,MAAOhZ,EAAOme,UAElB,I7B9W2B,kB6B+WzB,OAAO,MACFpe,EADL,CAEEiZ,KAAM,IAEV,I7BlX0B,iB6BmXxB,OAAO,MACFjZ,EADL,CAEEkZ,KAAMjZ,EAAOqI,aAEjB,I7BtX2B,kB6BuXzB,OAAO,MACFtI,EADL,CAEEkZ,MAAO,IAEX,I7BlYoC,2B6BmYlC,OAAO,MACFlZ,EADL,CAEEie,kBAAkB,IAEtB,I7BtYqC,4B6BuYnC,OAAO,MACFje,EADL,CAEEie,kBAAkB,IAEtB,QACE,OAAOje,IAcEkhB,GAVW,SAAAC,GACxB,OAAOC,aAAgB,CACrBxc,oBACApF,qBACAmR,cACA9L,UACAgC,OAAQwa,YAAcF,MCjbbA,GAAUG,eACjBC,GAAa,CAACC,KAAOC,aAAiBN,KACtCO,GAAWzW,OAAO0W,6BACpB1W,OAAO0W,6BAA6B,CAAEC,OAAO,EAAMC,WAAY,KAC/D,SAAAC,GAAI,OAAIA,GAENC,GAAgB,CACpBpkB,IAAK,MACLqkB,aACAC,UAAW,CAAC,aAAc,WAGtBC,GAAchB,GAAkBC,IAChCgB,GAAmBC,aAAeL,GAAeG,I,GAEhC,WACrB,IAAMG,EAAQC,aACZH,GACAI,aACEC,KAAe,WAAf,EAAmBjB,IACnBG,KAKJ,MAAO,CAAEW,QAAOI,UADEC,aAAaL,ICtBJM,GAArBN,G,GAAAA,MAAOI,G,GAAAA,UAEfG,iBACE,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,IAAD,CAAa3M,QAAS,KAAM+M,UAAWA,IACrC,kBAAC,IAAD,CAAiBtB,QAASA,GAAS0B,SAAS,WAC1C,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAK,uCACLrU,UAAWsU,KAEb,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,wBAAwBrU,UAAWsU,KACrD,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,gBAAgBrU,UAAWsU,KAC7C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,IAAIrU,UAAWsU,QAIvChL,SAASC,eAAe,W","file":"static/js/main.03f071b0.chunk.js","sourcesContent":["export const MEDIA_VIDEO = 'MEDIA_VIDEO'\nexport const MEDIA_IMAGE = 'MEDIA_IMAGE'\nexport const MEDIA_IMAGE_VIDEO = 'MEDIA_IMAGE_VIDEO'\n\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\nexport const RECEIVE_POSTS_ERROR = 'RECEIVE_POSTS_ERROR'\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT'\nexport const INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT'\nexport const REMOVE_SUBREDDIT = 'REMOVE_SUBREDDIT'\nexport const SELECT_SUBREDDIT_SCOPE = 'SELECT_SUBREDDIT_SCOPE'\n\nexport const NEXT_POST = 'NEXT_POST'\nexport const PREVIOUS_POST = 'PREVIOUS_POST'\nexport const SELECT_POST = 'SELECT_POST'\nexport const MEDIA_FALLBACK = 'MEDIA_FALLBACK'\n\nexport const REQUEST_COMMENTS = 'REQUEST_COMMENTS'\nexport const RECEIVE_COMMENTS = 'RECEIVE_COMMENTS'\nexport const RECEIVE_COMMENTS_ERROR = 'RECEIVE_COMMENTS_ERROR'\n\nexport const REQUEST_REPLIES = 'REQUEST_REPLIES'\nexport const RECEIVE_REPLIES = 'RECEIVE_REPLIES'\nexport const RECEIVE_REPLIES_ERROR = 'RECEIVE_REPLIES_ERROR'\n\nexport const TOGGLE_FULLSCREEN = 'TOGGLE_FULLSCREEN'\nexport const ENABLE_FULLSCREEN = 'ENABLE_FULLSCREEN'\nexport const DISABLE_FULLSCREEN = 'DISABLE_FULLSCREEN'\nexport const TOGGLE_AUTO_ADVANCE = 'TOGGLE_AUTO_ADVANCE'\nexport const TOGGLE_PLAY = 'TOGGLE_PLAY'\nexport const TOGGLE_THEME_MODE = 'TOGGLE_THEME_MODE'\nexport const TOGGLE_NSFW = 'TOGGLE_NSFW'\nexport const TOGGLE_SHOW_VIDEOS = 'TOGGLE_SHOW_VIDEOS'\nexport const TOGGLE_SHOW_IMAGES = 'TOGGLE_SHOW_IMAGES'\n\nexport const ENABLE_KEYBORAD_CONTROLS = 'ENABLE_KEYBORAD_CONTROLS'\nexport const DISABLE_KEYBORAD_CONTROLS = 'DISABLE_KEYBORAD_CONTROLS'\n\nexport const PLAYER_SCAN_FORWARDS = 'PLAYER_SCAN_FORWARDS'\nexport const PLAYER_SCAN_BACKWARDS = 'PLAYER_SCAN_BACKWARDS'\nexport const PLAYER_SCAN_ACK = 'PLAYER_SCAN_ACK'\nexport const PLAYER_JUMP_TO = 'PLAYER_JUMP_TO'\nexport const PLAYER_JUMP_ACK = 'PLAYER_JUMP_ACK'\nexport const PLAYER_VOLUME_UP = 'PLAYER_VOLUME_UP'\nexport const PLAYER_VOLUME_DOWN = 'PLAYER_VOLUME_DOWN'\n\nexport const DEFAULT_SUBREDDITS = [\n  'videos',\n  'documentaries',\n  'politicalvideos',\n  'artisanvideos',\n  'all',\n]\n\nexport const DEFAULT_SUBREDDIT = DEFAULT_SUBREDDITS[0]\n\nexport const THUMBNAIL_WIDTH = 140\nexport const THUMBNAIL_HEIGHT = 105\n\nexport const KNOWN_EMBED_REQUIRED_PROVIDERS = [\n  'Gyfcat',\n]\n","import { createSelector } from 'reselect'\n\nimport { filterPosts } from '../helpers'\nimport { MEDIA_IMAGE, MEDIA_VIDEO } from '../constants'\n\nexport const allPostsSelector = createSelector(\n  ({ posts }) => posts,\n  posts => posts\n)\n\nexport const allMediaSelector = createSelector(\n  ({ posts }) => filterPosts(posts),\n  posts => posts\n)\n\nexport const videoMediaSelector = createSelector(\n  ({ posts }) => filterPosts(allMediaSelector({ posts }), MEDIA_VIDEO),\n  posts => posts\n)\n\nexport const imageMediaSelector = createSelector(\n  ({ posts }) => filterPosts(allMediaSelector({ posts }), MEDIA_IMAGE),\n  posts => posts\n)\n\nconst get = (key) => (props) => props[key]\n\nexport const mediaSelector = createSelector(\n  [allPostsSelector, get('showImages'), get('showVideos')],\n  (posts, showImages, showVideos) => {\n    if (showImages && showVideos) {\n      return allMediaSelector({ posts })\n    } else if (showImages && !showVideos) {\n      return imageMediaSelector({ posts })\n    } else if (showVideos && !showImages) {\n      return videoMediaSelector({ posts })\n    } else if (!showVideos && !showImages) {\n      return posts\n    }\n  },\n)\n","import { matchPath } from 'react-router-dom'\nimport ReactPlayer from 'react-player'\n\nimport {\n  MEDIA_VIDEO,\n  MEDIA_IMAGE,\n  KNOWN_EMBED_REQUIRED_PROVIDERS,\n} from '../constants'\n\nimport { mediaSelector } from '../selectors'\n\nexport const SUPPORTED_VIDEO_MEDIA = []\nexport const SUPPORTED_IMAGE_MEDIA = []\n\nexport function extractPosts (json) {\n  const children = (json?.data?.children) || []\n  return children.length === 0\n    ? []\n    : children.reduce((acc, child) => {\n      if (child?.data) {\n        acc.push(child.data)\n      }\n      return acc\n    }, [])\n}\n\nexport function filterPosts (posts, mediaType) {\n  switch (mediaType) {\n    case MEDIA_VIDEO:\n      return filterVideo(posts)\n    case MEDIA_IMAGE:\n      return filterImage(posts)\n    default:\n      return filterVideoImage(posts)\n  }\n}\n\nexport function filterVideo (posts) {\n  return posts?.filter(isVideo)\n}\n\nexport function filterImage (posts) {\n  return posts?.filter(isImage)\n}\n\nexport function filterVideoImage (posts) {\n  return posts?.filter((post) => {\n    return (isVideo(post) || isImage(post))\n  })\n}\n\nexport function isVideo (post) {\n  if (!post) return false\n  const media = post.secure_media || post.media\n  return (\n    post.is_video ||\n    media?.oembed?.type === 'video' ||\n    ReactPlayer.canPlay(post.url)\n  )\n}\nexport function isImage (post) {\n  if (!post) return false\n  return !!(\n    !isVideo(post) && !post.is_video && post.preview?.enabled\n  )\n}\n\nexport const isKnownMediaEmbed = (post) => {\n  // eslint-disable-next-line camelcase\n  const name = post?.secure_media?.oembed?.provider_name\n  if (name) {\n    return KNOWN_EMBED_REQUIRED_PROVIDERS.indexOf(name) >= 0\n  } else {\n    return false\n  }\n}\n\nexport const urlToPathname = url => (\n  new URL(url).pathname\n)\n\nconst matchSubredditPath = pathname => matchPath(pathname, '/r/:subreddit')\n\nconst matchPostPath = pathname =>\n  matchPath(pathname, '/r/:subreddit/comments/:postId/:slug')\n\nexport const matchRedditPath = pathname =>\n  matchPostPath(pathname) || matchSubredditPath(pathname)\n\nconst matchTwitterTimelinePath = pathname =>\n  matchPath(pathname, '/:name')\n\nconst matchTwitterStatusPath = pathname =>\n  matchPath(pathname, '/:name/status/:id')\n\nexport const matchTwitterPath = pathname =>\n  matchTwitterStatusPath(pathname) ||\n    matchTwitterTimelinePath(pathname)\n\nexport const getNewSubredditFromPath = (selectedSubreddit, permalink) => {\n  const match = matchRedditPath(permalink)\n\n  return match?.isExact && selectedSubreddit !== match.params.subreddit\n    ? match.params.subreddit.toLowerCase()\n    : selectedSubreddit\n}\n\nexport const didInvalidateSubredditFromPath = (state, action) => {\n  const match = matchRedditPath(action.payload.location.pathname)\n\n  return match?.isExact &&\n    state !== match.params.subreddit.toLowerCase()\n}\n\nexport const translatePermalink = (permalink, selectedSubreddit) => {\n  const match = matchPostPath(permalink)\n  if (match && selectedSubreddit === 'all') {\n    return permalink.replace(match.params.subreddit, 'all')\n  } else {\n    return permalink\n  }\n}\n\nexport const decodeHTMLEntity = (html, mime = 'text/html') => (\n  new DOMParser().parseFromString(html, mime)\n    .documentElement.textContent\n)\n\nexport const findPostById = (postId, posts) => {\n  const index = posts.findIndex(post => post.id === postId)\n\n  if (index >= 0) {\n    return { index, post: posts[index] }\n  } else if (posts[0]) {\n    return { index: 0, post: posts[0] }\n  } else {\n    return { index: -1, post: { id: postId } }\n  }\n}\n\nexport const extractPost = (state, action) => {\n  if (action.index >= 0) {\n    return { index: action.index, post: action.post }\n  } else if (action.posts && state.post && state.post.id) {\n    return findPostById(\n      state.post.id,\n      mediaSelector(action)\n    )\n  } else if (action.posts) {\n    return { index: 0, post: action.posts[0] }\n  } else {\n    return { index: -1, post: null }\n  }\n}\n\nexport const getPostImage = (post, height) => {\n  if (post.preview?.enabled) {\n    const parser = new DOMParser()\n    const images = post.preview.images[0].resolutions\n    const selectedImage = images.find((image) => image.height >= height) ||\n      images[images.length - 1]\n    if (selectedImage && selectedImage.url) {\n      const url = parser.parseFromString(selectedImage.url, 'text/html')\n        .body.textContent\n      return {\n        ...selectedImage,\n        url,\n      }\n    }\n  }\n}\n\nexport const getImageDimensions = (img, maxHeight, maxWidth, minRatio = 1) => {\n  if (!img) return { height: null, width: null }\n  const { width, height } = img\n  const ratio = Math.min(minRatio, maxWidth / width, maxHeight / height)\n  return { width: width * ratio, height: height * ratio }\n}\n\nexport const getVideoDimensions = (imgRef, height, width) => {\n  if (!imgRef) { return { width: '100%', height: height } }\n  const newWidth = height * (imgRef.width / imgRef.height)\n  return { height, width: newWidth <= width ? newWidth : '100%' }\n}\n\nexport const translateVolume = (volume, change) => (\n  Math.min(1, Math.max(0, volume + change))\n)\n\nexport const muiThemeToRSTheme = ({ palette }) =>\n  theme => ({\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primary: palette.background.contrastText,\n      primary25: palette.background.contrastText,\n      primary50: palette.background.contrastText,\n      primary75: palette.background.contrastText,\n      neutral0: palette.background.primary,\n      neutral5: palette.background.primary,\n      neutral10: palette.background.primary,\n      neutral20: palette.background.primary,\n      neutral30: palette.background.primary,\n      neutral40: palette.background.primary,\n      neutral50: palette.background.primary,\n      neutral60: palette.background.primary,\n      neutral70: palette.background.primary,\n      neutral80: palette.background.primary,\n      neutral90: palette.background.primary,\n    },\n  })\n\nexport const contrastColor = (themeMode, { primary }) => (\n  themeMode === 'light' ? primary.dark : primary.light\n)\n","\nconst REDDIT_API_HOST = 'https://www.reddit.com'\n\nconst chompTrailingSlash = (string = '') => (\n  string.endsWith('/') ? string.slice(0, -1) : string\n)\n\nexport const postURL = (permalink, extention = 'json') => (\n  new URL(\n    encodeURI(`${chompTrailingSlash(permalink)}.${extention}`),\n    REDDIT_API_HOST\n  )\n)\n\nexport const replyURL = (\n  permalink, parentId = '', extention = 'json'\n) => {\n  return new URL(\n    encodeURI(`${chompTrailingSlash(permalink)}/${parentId}.${extention}`),\n    REDDIT_API_HOST\n  )\n}\n\nexport const subredditURL = (subreddit, extention = 'json', limit = 100) => (\n  new URL(\n    encodeURI(\n      `/r/${chompTrailingSlash(subreddit)}.${extention}?limit=${limit}`\n    ),\n    REDDIT_API_HOST\n  )\n)\n\nexport const fetchPosts = ({ subreddit, scope }) => (\n  fetch(subredditURL(`${subreddit}/${scope}`).href)\n)\n\nexport const fetchPost = ({ permalink }) => (\n  fetch(postURL(permalink).href)\n)\n\nexport const fetchReplies = ({ permalink }, parentId) => (\n  fetch(replyURL(permalink, parentId).href)\n)\n\nexport default { fetchPosts, fetchPost, fetchReplies, postURL, replyURL }\n\n","import { batch } from 'react-redux'\n\nimport { extractPosts, matchRedditPath } from '../helpers'\nimport reddit from '../helpers/reddit'\nimport { mediaSelector } from '../selectors'\n\nimport {\n  SELECT_SUBREDDIT,\n  INVALIDATE_SUBREDDIT,\n  REMOVE_SUBREDDIT,\n  SELECT_SUBREDDIT_SCOPE,\n  REQUEST_POSTS,\n  RECEIVE_POSTS,\n  RECEIVE_POSTS_ERROR,\n  SELECT_POST,\n  NEXT_POST,\n  PREVIOUS_POST,\n  MEDIA_FALLBACK,\n  REQUEST_COMMENTS,\n  RECEIVE_COMMENTS,\n  RECEIVE_COMMENTS_ERROR,\n  REQUEST_REPLIES,\n  RECEIVE_REPLIES,\n  RECEIVE_REPLIES_ERROR,\n  ENABLE_FULLSCREEN,\n  DISABLE_FULLSCREEN,\n  TOGGLE_FULLSCREEN,\n  TOGGLE_PLAY,\n  TOGGLE_AUTO_ADVANCE,\n  TOGGLE_THEME_MODE,\n  TOGGLE_NSFW,\n  TOGGLE_SHOW_IMAGES,\n  TOGGLE_SHOW_VIDEOS,\n  ENABLE_KEYBORAD_CONTROLS,\n  DISABLE_KEYBORAD_CONTROLS,\n  PLAYER_VOLUME_UP,\n  PLAYER_VOLUME_DOWN,\n  PLAYER_SCAN_FORWARDS,\n  PLAYER_SCAN_BACKWARDS,\n  PLAYER_SCAN_ACK,\n  PLAYER_JUMP_TO,\n  PLAYER_JUMP_ACK,\n} from '../constants'\n\nexport const selectSubreddit = subreddit => ({\n  type: SELECT_SUBREDDIT,\n  subreddit,\n})\n\nexport const invalidateSubreddit = subreddit => ({\n  type: INVALIDATE_SUBREDDIT,\n  subreddit,\n})\n\nexport const removeSubreddit = subreddit => ({\n  type: REMOVE_SUBREDDIT,\n  subreddit,\n})\n\nexport const requestPosts = (subreddit, scope = 'hot') => ({\n  type: REQUEST_POSTS,\n  subreddit,\n  scope,\n})\n\nexport const receivePosts = (subreddit, scope, json) =>\n  (dispatch, getState) => {\n    const { config } = getState()\n    const { showVideos, showImages, showNSFW } = config\n    const posts = extractPosts(json)\n    return dispatch({\n      type: RECEIVE_POSTS,\n      subreddit,\n      posts,\n      error: null,\n      receivedAt: Date.now(),\n      showVideos,\n      showImages,\n      showNSFW,\n      scope,\n    })\n  }\n\nexport const receivePostsError = (subreddit, error) => ({\n  type: RECEIVE_POSTS_ERROR,\n  subreddit,\n  error,\n})\n\nexport const selectPost = (post, index) => ({\n  type: SELECT_POST,\n  post,\n  index,\n})\n\nconst translatePost = (type) => (dispatch, getState) => {\n  const { postsBySubreddit, selectedSubreddit, config } = getState()\n  const { showImages, showVideos, showNSFW } = config\n  const subreddit = postsBySubreddit[selectedSubreddit]\n  const posts = subreddit?.[subreddit.scope]\n  return dispatch({\n    type: type,\n    posts: mediaSelector({ posts, showImages, showVideos, showNSFW }),\n  })\n}\n\nexport const nextPost = () => (dispatch) => {\n  dispatch(translatePost(NEXT_POST))\n}\nexport const previousPost = () => (dispatch) => {\n  dispatch(translatePost(PREVIOUS_POST))\n}\n\nexport const mediaFallback = () => ({\n  type: MEDIA_FALLBACK,\n})\n\nconst fetchPosts = subreddit => (dispatch, getState) => {\n  const { postsBySubreddit } = getState()\n  const scope = postsBySubreddit?.[subreddit]?.scope || 'hot'\n  dispatch(requestPosts(subreddit, scope))\n  return reddit\n    .fetchPosts({ subreddit, scope })\n    .then(response => response.json())\n    .then(response => dispatch(receivePosts(subreddit, scope, response)))\n    .catch(error => dispatch(receivePostsError(subreddit, error)))\n}\n\nconst shouldFetchPosts = ({ postsBySubreddit }, selected) => {\n  const subreddit = postsBySubreddit[selected]\n  const posts = subreddit?.[subreddit?.scope]\n  if (!posts) {\n    return true\n  }\n  if (subreddit.isFetching) {\n    return false\n  }\n  return subreddit.didInvalidate\n}\n\nexport const fetchPostsIfNeeded = subreddit => (dispatch, getState) => {\n  if (shouldFetchPosts(getState(), subreddit)) {\n    return dispatch(fetchPosts(subreddit))\n  }\n}\n\nconst shouldInvalidateSubreddit = ({ router, postsBySubreddit }, selected) => {\n  const match = matchRedditPath(router.location.pathname)\n  const subreddit = postsBySubreddit[selected]\n  return (\n    !subreddit ||\n    subreddit?.[subreddit.scope]?.length === 0 ||\n    (match?.subreddit === selected)\n  )\n}\n\nexport const invalidateSubredditIfNeeded = subreddit => (\n  dispatch,\n  getState,\n) => {\n  const newSubreddit = subreddit.toLowerCase()\n  if (shouldInvalidateSubreddit(getState(), newSubreddit)) {\n    return dispatch(invalidateSubreddit(newSubreddit))\n  }\n}\n\nexport const loadSubreddit = subreddit => (dispatch) => {\n  batch(() => {\n    dispatch(selectSubreddit(subreddit))\n    dispatch(invalidateSubredditIfNeeded(subreddit))\n    dispatch(fetchPostsIfNeeded(subreddit))\n  })\n}\n\nexport const refreshSubreddit = () => (dispatch, getState) => {\n  const { selectedSubreddit } = getState()\n  batch(() => {\n    dispatch(invalidateSubreddit(selectedSubreddit))\n    dispatch(fetchPostsIfNeeded(selectedSubreddit))\n  })\n}\n\nconst requestComments = (post, subreddit) => ({\n  type: REQUEST_COMMENTS,\n  post,\n  subreddit,\n})\n\nconst receiveComments = (post, subreddit, response) => ({\n  type: RECEIVE_COMMENTS,\n  post,\n  subreddit,\n  comments: response,\n})\n\nconst receiveCommentsError = (post, subreddit, error) => ({\n  type: RECEIVE_COMMENTS_ERROR,\n  post,\n  subreddit,\n  error,\n})\n\nconst fetchComments = (post, selectedSubreddit) => dispatch => {\n  if (!post?.permalink) return\n  dispatch(requestComments(post, selectedSubreddit))\n  return reddit\n    .fetchPost(post)\n    .then(response => response.json())\n    .catch(error =>\n      dispatch(receiveCommentsError(post, selectedSubreddit, error)),\n    )\n    .then(response =>\n      dispatch(receiveComments(post, selectedSubreddit, response)),\n    )\n}\n\nexport const fetchCommentsIfNeeded = () => (dispatch, getState) => {\n  const { postsBySubreddit, selectedSubreddit, config } = getState()\n  const { showVideos, showImages, showNSFW } = config\n  const { index } = postsBySubreddit.cursor\n  const subreddit = postsBySubreddit[selectedSubreddit]\n  const comments = subreddit.comments\n  const posts = subreddit[subreddit.scope]\n  const items = mediaSelector({ posts, showVideos, showImages, showNSFW })\n  const post = items[index]\n  if (!comments?.[post?.id]) {\n    dispatch(fetchComments(post, selectedSubreddit))\n  }\n}\n\nconst requestReplies = (post, subreddit, parentId) => ({\n  type: REQUEST_REPLIES,\n  post,\n  subreddit,\n  parentId,\n})\n\nconst receiveReplies = (post, subreddit, parentId, response) => ({\n  type: RECEIVE_REPLIES,\n  post,\n  subreddit,\n  comments: response,\n  parentId,\n})\n\nconst receiveRepliesError = (post, subreddit, parentId, error) => ({\n  type: RECEIVE_REPLIES_ERROR,\n  post,\n  subreddit,\n  error,\n  parentId,\n})\n\nconst fetchReplies = (post, selectedSubreddit, parentId) => dispatch => {\n  dispatch(requestReplies(post, selectedSubreddit, parentId))\n  return reddit\n    .fetchReplies(post, parentId)\n    .then(response => response.json())\n    .catch(error =>\n      dispatch(receiveRepliesError(post, selectedSubreddit, parentId, error)),\n    )\n    .then(response =>\n      dispatch(receiveReplies(post, selectedSubreddit, parentId, response)),\n    )\n}\n\nexport const fetchRepliesIfNeeded = ({ data }) => (dispatch, getState) => {\n  const { postsBySubreddit, selectedSubreddit, config } = getState()\n  const { showImages, showVideos, showNSFW } = config\n  const { index } = postsBySubreddit.cursor\n  const subreddit = postsBySubreddit[selectedSubreddit]\n  const comments = subreddit.comments\n  const items = mediaSelector({\n    posts: subreddit[subreddit.scope],\n    showImages, showVideos, showNSFW,\n  })\n  const post = items[index]\n  const commentsForPost = comments?.[post?.id] || {}\n  const { groups: { parentId } } =\n    /^t1_(?<parentId>\\w+)$/.exec(data.parent_id)\n\n  if (parentId && !commentsForPost[parentId]) {\n    dispatch(fetchReplies(items[index], selectedSubreddit, parentId))\n  }\n}\n\n\nexport const configToggleFullscreen = () => ({\n  type: TOGGLE_FULLSCREEN,\n})\n\nexport const configEnableFullscreen = () => ({\n  type: ENABLE_FULLSCREEN,\n})\n\nexport const configDisableFullscreen = () => ({\n  type: DISABLE_FULLSCREEN,\n})\n\nexport const configToggleAutoAdvance = () => ({\n  type: TOGGLE_AUTO_ADVANCE,\n})\n\nexport const configTogglePlay = () => ({\n  type: TOGGLE_PLAY,\n})\n\nexport const configToggleThemeMode = () => ({\n  type: TOGGLE_THEME_MODE,\n})\n\nexport const configToggleNSFW = () => ({\n  type: TOGGLE_NSFW,\n})\n\nexport const playerScanForwards = seconds => ({\n  type: PLAYER_SCAN_FORWARDS,\n  seconds,\n})\n\nexport const playerScanBackwards = seconds => ({\n  type: PLAYER_SCAN_BACKWARDS,\n  seconds,\n})\n\nexport const playerScanAck = () => ({\n  type: PLAYER_SCAN_ACK,\n})\n\nexport const playerJumpTo = (number) => ({\n  type: PLAYER_JUMP_TO,\n  percentage: (number / 10),\n})\n\nexport const playerJumpAck = () => ({\n  type: PLAYER_JUMP_ACK,\n})\n\nexport const playerVolumeDown = () => ({\n  type: PLAYER_VOLUME_DOWN,\n})\n\nexport const playerVolumeUp = () => ({\n  type: PLAYER_VOLUME_UP,\n})\n\nexport const enableKeyboardControls = () => ({\n  type: ENABLE_KEYBORAD_CONTROLS,\n})\n\nexport const disableKeyboardControls = () => ({\n  type: DISABLE_KEYBORAD_CONTROLS,\n})\n\nconst configToggleFilter = (type) => (dispatch, getState) => {\n  const { postsBySubreddit, selectedSubreddit, config } = getState()\n  const { showImages, showVideos, showNSFW } = config\n  const subreddit = postsBySubreddit[selectedSubreddit]\n  const items = subreddit[subreddit.scope]\n  const { post } = postsBySubreddit.cursor\n  const action = {\n    type,\n    post,\n  }\n  const posts = mediaSelector({\n    posts: items,\n    showImages: type === TOGGLE_SHOW_IMAGES ? !showImages : showImages,\n    showVideos: type === TOGGLE_SHOW_VIDEOS ? !showVideos : showVideos,\n    showNSFW,\n  })\n  return dispatch({ ...action, posts })\n}\n\nexport const configToggleShowVideos = () => (dispatch) => (\n  dispatch(configToggleFilter(TOGGLE_SHOW_VIDEOS))\n)\n\nexport const configToggleShowImages = () => (dispatch) => (\n  dispatch(configToggleFilter(TOGGLE_SHOW_IMAGES))\n)\n\nexport const selectSubredditScope = (subreddit, scope) => (dispatch) => {\n  return batch(() => {\n    dispatch({\n      type: SELECT_SUBREDDIT_SCOPE,\n      subreddit: subreddit,\n      scope: scope.toLowerCase(),\n    })\n    dispatch(invalidateSubredditIfNeeded(subreddit))\n    dispatch(fetchPostsIfNeeded(subreddit))\n  })\n}\n\n","import { useEffect } from 'react'\nimport screenfull from 'screenfull'\n\nimport { configEnableFullscreen, configDisableFullscreen } from '../actions'\n\nconst useFullscreen = ({ dispatch, isFullscreen }) => {\n\n  useEffect(() => {\n    if (screenfull.isEnabled) {\n      if (isFullscreen) {\n        screenfull.request().catch(() => {})\n      } else {\n        screenfull.exit().catch(() => {})\n      }\n    }\n  }, [isFullscreen])\n\n  useEffect(() => {\n    if (screenfull.isEnabled) {\n      if (screenfull.isFullscreen && !isFullscreen) {\n        dispatch(configEnableFullscreen())\n      } else if (!screenfull.isFullscreen && isFullscreen) {\n        dispatch(configDisableFullscreen())\n      }\n    }\n  }, [screenfull.isFullscreen])\n\n}\n\nexport default useFullscreen\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles, useTheme } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport debounce from 'lodash.debounce'\nimport ChromeReaderModeIcon from '@material-ui/icons/ChromeReaderMode'\nimport BlockIcon from '@material-ui/icons/Block'\n\nimport { selectPost } from '../actions'\nimport { contrastColor, decodeHTMLEntity } from '../helpers'\nimport { mediaSelector } from '../selectors'\n\nimport { THUMBNAIL_HEIGHT, THUMBNAIL_WIDTH } from '../constants'\n\nconst styles = ({ spacing, palette }) => ({\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n  },\n  tile: {\n    opacity: 0.8,\n    margin: spacing(1),\n    marginBottom: spacing(2),\n    boxShadow: `-1px -4px 4px -4px ${palette.primary.dark}`,\n    outline: `thin double ${palette.primary.dark}`,\n    '&:hover': {\n      outline: `thick double ${palette.primary.dark}`,\n    },\n  },\n  selected: {\n    border: ({ themeMode }) => (\n      `2px solid ${contrastColor(themeMode, palette)}`\n    ),\n    outline: ({ themeMode }) => (\n      `thick double ${contrastColor(themeMode, palette)}`\n    ),\n    display: 'block',\n  },\n  postText: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n})\n\nconst classNameForTile = (selected, post, classes) => {\n  if (!post?.id || !selected?.post || selected.post.id !== post.id) {\n    return classes.tile\n  } else {\n    return `${classes.tile} ${classes.selected}`\n  }\n}\n\nconst style = {\n  height: THUMBNAIL_HEIGHT / 2,\n  width: THUMBNAIL_WIDTH,\n}\n\nconst Thumbnail = ({ post, showNSFW }) => {\n  if (post) {\n    // eslint-disable-next-line camelcase\n    const { thumbnail, title, over_18 } = post\n    if (thumbnail === '') {\n      return <ChromeReaderModeIcon fontSize=\"large\" style={style} />\n    } else if (thumbnail === 'self') {\n      return <ChromeReaderModeIcon fontSize=\"large\" style={style} />\n    } else if (thumbnail === 'image') {\n      return <ChromeReaderModeIcon fontSize=\"large\" style={style} />\n    } else if (thumbnail === 'default') {\n      return <ChromeReaderModeIcon fontSize=\"large\" style={style} />\n    // eslint-disable-next-line camelcase\n    } else if ((over_18 && !showNSFW) || thumbnail === 'nsfw') {\n      return <BlockIcon fontSize=\"large\" style={style} />\n    } else {\n      return <img src={thumbnail} alt={title} />\n    }\n  }\n\n  return <Skeleton variant=\"rect\" />\n}\n\nThumbnail.propTypes = {\n  post: PropTypes.object,\n  showNSFW: PropTypes.bool,\n}\n\nconst Posts = ({ posts, selected, showNSFW, classes, dispatch }) => {\n  const refs = {}\n\n  const onSelectPost = (nextPost, index, e) => {\n    e.preventDefault()\n    dispatch(selectPost(nextPost, index))\n  }\n\n  const { spacing } = useTheme()\n\n  useEffect(() => {\n    if (selected?.post?.id) {\n      const element = refs['post-' + selected.post.id]\n      if (element) {\n        const box = element.getBoundingClientRect()\n        const parentBox = element.parentNode.getBoundingClientRect()\n        const left = element.offsetLeft - (\n          (parentBox.width / 2).toFixed() - (box.width / 2))\n        element.parentNode.scrollTo({ left, behavior: 'smooth' })\n      }\n    }\n  }, [selected])\n\n  const calculateColumns = () => (\n    window.innerWidth / (THUMBNAIL_WIDTH + spacing(2))\n  )\n\n  const [columns, setColumns] = useState(calculateColumns())\n\n  const onResize = debounce(() => {\n    setColumns(calculateColumns())\n  }, 10)\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize)\n    return () => (window.removeEventListener('resize', onResize))\n  }, [])\n\n  const postsIter = posts.length === 0\n    ? Array.from(new Array(14))\n    : posts\n\n  return (\n    <div ref={node => (refs['posts-ref'] = node)}>\n      <GridList\n        className={classes.gridList}\n        cellHeight={THUMBNAIL_HEIGHT}\n        cols={columns}\n      >\n        {postsIter.map((post, index) => {\n          const id = post ? post.id : index\n          return <GridListTile\n            rows={1}\n            className={classNameForTile(selected, post, classes)}\n            key={id}\n            ref={node => (post ? (refs['post-' + post.id] = node) : '')}\n            onClick={onSelectPost.bind(this, post, index)}\n          >\n            <Thumbnail post={post} showNSFW={showNSFW}/>\n            <GridListTileBar\n              title={post && post.title\n                ? decodeHTMLEntity(post.title)\n                : <Skeleton />\n              }\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n            />\n          </GridListTile>\n        })}\n      </GridList>\n    </div>\n  )\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  selected: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  themeMode: PropTypes.string,\n  showNSFW: PropTypes.bool,\n}\n\nconst mapStateToProps = state => {\n  const { dispatch, selectedSubreddit, postsBySubreddit, config } = state\n  const { themeMode, showImages, showVideos, showNSFW } = config\n  const selectedPost = postsBySubreddit.cursor || {}\n  const subreddit = postsBySubreddit[selectedSubreddit]\n  const posts = subreddit?.[subreddit?.scope] || []\n  return {\n    dispatch,\n    posts: mediaSelector({ posts, showImages, showVideos }),\n    selected: selectedPost,\n    visible: true,\n    themeMode,\n    showNSFW,\n  }\n}\n\nexport default Posts |> withStyles(styles) |> connect(mapStateToProps)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { MenuItem, ListItemIcon } from '@material-ui/core'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { removeSubreddit } from '../actions'\n\n\nconst useStyles = makeStyles(({ palette, shape }) => ({\n  root: {\n    backgroundColor: palette.background.paper,\n    borderRadius: shape.borderRadius,\n  },\n  selected: {\n    backgroundColor: palette.background.default,\n  },\n}))\n\nconst Option = ({\n  children,\n  isSelected,\n  onFocus,\n  data,\n  setValue,\n  dispatch,\n  removable = true,\n}) => {\n  const classes = useStyles()\n\n  const onClick = (e) => {\n    e.stopPropagation()\n    e.preventDefault()\n    setValue(data)\n    return false\n  }\n\n  const onRemove = (e) => {\n    e.stopPropagation()\n    dispatch(removeSubreddit(data.value))\n  }\n\n  return <MenuItem\n    onFocus={onFocus}\n    selected={isSelected}\n    component=\"div\"\n    onClick={onClick}\n    classes={classes}\n  >\n    {removable &&\n      <ListItemIcon onClick={onRemove}>\n        <RemoveCircleIcon style={{ color: 'inherit' }} />\n      </ListItemIcon>\n    }\n    {children}\n  </MenuItem>\n}\n\nOption.propTypes = {\n  children: PropTypes.string,\n  isFocused: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onFocus: PropTypes.func,\n  removable: PropTypes.bool,\n  data: PropTypes.object,\n  setValue: PropTypes.func,\n  dispatch: PropTypes.func,\n}\n\nexport const StaticOption = (props) => (\n  <Option removable={false} {...props} />\n)\n\nexport default Option |> connect()\n","import React, { useMemo, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport CreatableSelect from 'react-select/creatable'\nimport { connect } from 'react-redux'\nimport Option from './Option'\nimport { muiThemeToRSTheme } from '../helpers'\nimport {\n  enableKeyboardControls,\n  disableKeyboardControls,\n  loadSubreddit,\n} from '../actions'\n\nconst useStyles = makeStyles(({ palette, spacing, breakpoints }) => ({\n  container: {\n    [breakpoints.up('md')]: {\n      minWidth: 250,\n    },\n    display: 'block',\n    backgroundColor: palette.background.default,\n    margin: spacing(1),\n    marginLeft: 0,\n    marginRight: spacing(1),\n    flex: 3,\n  },\n}))\n\nexport const makeSelectStyles = ({ palette }) => ({\n  container: styles => ({\n    ...styles,\n    backgroundColor: palette.background.default,\n    color: palette.text.contrastText,\n  }),\n  menu: styles => ({\n    ...styles,\n    backgroundColor: palette.background.paper,\n    border: `4px solid ${palette.background.paper}`,\n  }),\n})\n\nconst nameToOption = (name) => ({\n  value: (name || '').toLowerCase(), label: `r/${name}`,\n})\n\nconst Picker = ({ value, options, dispatch }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const ref = useRef()\n\n  const changeSubreddit = ({ value }) => {\n    dispatch(loadSubreddit(value))\n    void ref.current?.blur()\n  }\n\n  const mappedOptions = useMemo(() => (\n    options.map(nameToOption)\n  ), [options])\n\n  const mappedValue = useMemo(() => (\n    value ? nameToOption(value) : ''\n  ), [value])\n\n  const selectTheme = useMemo(() => (\n    muiThemeToRSTheme(theme)\n  ), [theme])\n\n  const selectStyles = useMemo(() => (\n    makeSelectStyles(theme)\n  ), [theme])\n\n  const onMenuOpen = () => {\n    dispatch(disableKeyboardControls())\n  }\n\n  const onMenuClose = () => {\n    dispatch(enableKeyboardControls())\n  }\n\n  return (\n    <div className={classes.container}>\n      <CreatableSelect\n        ref={ref}\n        isClearable={false}\n        menuPlacement=\"bottom\"\n        value={mappedValue}\n        onChange={changeSubreddit}\n        options={mappedOptions}\n        theme={selectTheme}\n        maxMenuHeight={200}\n        styles={selectStyles}\n        onMenuOpen={onMenuOpen}\n        onMenuClose={onMenuClose}\n        components={{\n          Option,\n        }}\n      />\n    </div>\n  )\n}\n\nPicker.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.string,\n  dispatch: PropTypes.func,\n}\n\nconst mapStateToProps = ({ selectedSubreddit, subreddits }) => ({\n  value: selectedSubreddit,\n  options: subreddits,\n})\n\nexport default Picker |> connect(mapStateToProps)\n","import React, { useMemo, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Select from 'react-select'\nimport { connect } from 'react-redux'\nimport { StaticOption } from './Option'\nimport { muiThemeToRSTheme } from '../helpers'\nimport {\n  enableKeyboardControls,\n  disableKeyboardControls,\n  selectSubredditScope,\n} from '../actions'\n\nimport { makeSelectStyles } from './Picker'\n\nconst useStyles = makeStyles(({ palette, spacing, breakpoints }) => ({\n  container: {\n    [breakpoints.up('md')]: {\n      minWidth: 150,\n    },\n    display: 'block',\n    backgroundColor: palette.background.default,\n    margin: spacing(1),\n    marginLeft: 0,\n    marginRight: spacing(1),\n    flex: 2,\n  },\n}))\n\nconst nameToOption = (name) => ({\n  value: (name || '').toLowerCase(), label: name,\n})\n\nconst SubredditScopePicker = ({\n  value, options, selectedSubreddit, dispatch }) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const ref = useRef()\n\n  const changeSubredditScope = ({ value }) => {\n    dispatch(selectSubredditScope(selectedSubreddit, value))\n    void ref.current?.blur()\n  }\n\n  const mappedOptions = useMemo(() => (\n    options.map(nameToOption)\n  ), [options])\n\n  const mappedValue = useMemo(() => (\n    value ? nameToOption(value) : ''\n  ), [value])\n\n  const selectTheme = useMemo(() => (\n    muiThemeToRSTheme(theme)\n  ), [theme])\n\n  const selectStyles = useMemo(() => (\n    makeSelectStyles(theme)\n  ), [theme])\n\n  const onMenuOpen = () => {\n    dispatch(disableKeyboardControls())\n  }\n\n  const onMenuClose = () => {\n    dispatch(enableKeyboardControls())\n  }\n\n  return (\n    <div className={classes.container}>\n      <Select\n        ref={ref}\n        isClearable={false}\n        menuPlacement=\"bottom\"\n        value={mappedValue}\n        onChange={changeSubredditScope}\n        options={mappedOptions}\n        theme={selectTheme}\n        maxMenuHeight={200}\n        styles={selectStyles}\n        onMenuOpen={onMenuOpen}\n        onMenuClose={onMenuClose}\n        components={{\n          Option: StaticOption,\n        }}\n      />\n    </div>\n  )\n}\n\nSubredditScopePicker.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  value: PropTypes.string,\n  dispatch: PropTypes.func,\n  selectedSubreddit: PropTypes.string,\n}\n\nconst mapStateToProps = ({ selectedSubreddit, postsBySubreddit }) => ({\n  value: postsBySubreddit[selectedSubreddit]?.scope || 'hot',\n  options: ['hot', 'new', 'controversial', 'top', 'rising'],\n  selectedSubreddit,\n})\n\nexport default SubredditScopePicker |> connect(mapStateToProps)\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, styled } from '@material-ui/core/styles'\nimport { IconButton, Tooltip } from '@material-ui/core'\nimport { connect } from 'react-redux'\n\nimport SkipNextIcon from '@material-ui/icons/SkipNext'\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport FullscreenIcon from '@material-ui/icons/Fullscreen'\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit'\nimport SettingsBrightnessIcon from '@material-ui/icons/SettingsBrightness'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport StopIcon from '@material-ui/icons/Stop'\nimport SyncIcon from '@material-ui/icons/Sync'\nimport SyncDisabledIcon from '@material-ui/icons/SyncDisabled'\nimport PhotoSizeSelectActualIcon from '@material-ui/icons/PhotoSizeSelectActual'\nimport MovieIcon from '@material-ui/icons/Movie'\nimport BlockIcon from '@material-ui/icons/Block'\n\nimport {\n  nextPost,\n  previousPost,\n  configToggleFullscreen,\n  configToggleAutoAdvance,\n  configTogglePlay,\n  configToggleThemeMode,\n  configToggleShowVideos,\n  configToggleShowImages,\n  refreshSubreddit,\n  configToggleNSFW,\n} from '../actions'\n\nconst AutoPlayOnIcon = styled(SyncIcon)({\n  transform: 'scale(-1, 1) rotate(135deg)',\n})\n\nconst AutoPlayOffIcon = styled(SyncDisabledIcon)({\n  transform: 'scale(-1, 1) rotate(-90deg)',\n})\n\nconst useStyles = makeStyles(({ breakpoints }) => ({\n  controls: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    overflow: 'auto',\n    marginBottom: 0,\n    [breakpoints.up('md')]: {\n      justifyContent: 'flex-end',\n    },\n  },\n}))\n\nexport const ShowImagesControl = ({ showImages, onClick }) => (\n  <Tooltip title=\"Filter Images\">\n    <IconButton\n      aria-label=\"Filter Images\"\n      color=\"inherit\"\n      onClick={onClick}\n    >\n      <PhotoSizeSelectActualIcon\n        style={{ opacity: showImages ? 1 : 0.5 }}\n      />\n    </IconButton>\n  </Tooltip>\n)\n\nShowImagesControl.propTypes = {\n  showImages: PropTypes.bool,\n  onClick: PropTypes.func,\n}\n\nexport const ShowVideosControl = ({ showVideos, onClick }) => (\n  <Tooltip title=\"Filter Videos\">\n    <IconButton\n      aria-label=\"Filter Videos\"\n      color=\"inherit\"\n      onClick={onClick}\n    >\n      <MovieIcon\n        style={{ opacity: showVideos ? 1 : 0.5 }}\n      />\n    </IconButton>\n  </Tooltip>\n)\n\nShowVideosControl.propTypes = {\n  showVideos: PropTypes.bool,\n  onClick: PropTypes.func,\n}\n\nexport const RefreshControl = ({ onClick }) => (\n  <Tooltip title=\"Refresh Subreddit\">\n    <IconButton\n      aria-label=\"refresh content\"\n      color=\"inherit\"\n      onClick={onClick}\n    >\n      <RefreshIcon />\n    </IconButton>\n  </Tooltip>\n)\n\nRefreshControl.propTypes = {\n  onClick: PropTypes.func,\n}\n\nexport const TogglePlayControl = ({ onClick, isPlaying }) => {\n  const title = `${isPlaying ? 'Stop' : 'Start'} Playing`\n  return <Tooltip title={title}>\n    <IconButton\n      aria-label={title} color=\"inherit\"\n      onClick={onClick}\n    >\n      {isPlaying ? <StopIcon /> : <PlayArrowIcon />}\n    </IconButton>\n  </Tooltip>\n}\n\nTogglePlayControl.propTypes = {\n  isPlaying: PropTypes.bool,\n  onClick: PropTypes.func,\n}\n\nexport const ShowNSFWControl = ({ onClick, showNSFW }) => {\n  const title = `${showNSFW ? 'HIDE' : 'SHOW'} Not Safe For Work (NSFW) Content`\n  return <Tooltip title={title}>\n    <IconButton\n      aria-label={title}\n      color=\"inherit\"\n      onClick={onClick}\n    >\n      <BlockIcon\n        style={{ opacity: showNSFW ? 0.5 : 1 }}\n      />\n    </IconButton>\n  </Tooltip>\n}\n\nShowNSFWControl.propTypes = {\n  onClick: PropTypes.func,\n  showNSFW: PropTypes.bool,\n}\nconst Controls = ({\n  dispatch,\n  posts,\n  isFullscreen,\n  isAutoAdvance,\n  isPlaying,\n  themeMode,\n  showVideos,\n  showImages,\n  showNSFW,\n}) => {\n  const { controls } = useStyles()\n\n  return (\n    <div className={controls}>\n      <ShowImagesControl\n        showImages={showImages}\n        onClick={() => dispatch(configToggleShowImages())}\n      />\n      <ShowVideosControl\n        showVideos={showVideos}\n        onClick={() => dispatch(configToggleShowVideos())}\n      />\n      <ShowNSFWControl\n        showNSFW={showNSFW}\n        onClick={() => dispatch(configToggleNSFW())}\n      />\n      <RefreshControl onClick={() => dispatch(refreshSubreddit())} />\n      <Tooltip\n        title={`Switch to ${themeMode === 'dark' ? 'Light' : 'Dark'} theme`}\n      >\n        <IconButton\n          aria-label={`toggle theme`} color=\"inherit\"\n          onClick={() => dispatch(configToggleThemeMode())}\n        >\n          <SettingsBrightnessIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={`${isFullscreen ? 'Exit' : 'Enter'} Fullscreen`}>\n        <IconButton\n          aria-label=\"toggle fullscreen\"\n          color=\"inherit\"\n          onClick={() => dispatch(configToggleFullscreen())}\n        >\n          {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\n        </IconButton>\n      </Tooltip>\n      <Tooltip\n        title={`${isAutoAdvance ? 'Stop' : 'Start'} Auto Advancing Videos`}\n      >\n        <IconButton\n          aria-label=\"toggle auto advance\" color=\"inherit\"\n          onClick={() => dispatch(configToggleAutoAdvance())}\n        >\n          {isAutoAdvance ? <AutoPlayOnIcon /> : <AutoPlayOffIcon />}\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Play Previous\">\n        <IconButton\n          aria-label=\"play previous\"\n          color=\"inherit\"\n          onClick={() => dispatch(previousPost(posts))}\n        >\n          <SkipPreviousIcon />\n        </IconButton>\n      </Tooltip>\n      <TogglePlayControl\n        isPlaying={isPlaying}\n        onClick={() => dispatch(configTogglePlay())}\n      />\n      <Tooltip title=\"Play Next\">\n        <IconButton\n          aria-label=\"play next\"\n          color=\"inherit\"\n          onClick={() => dispatch(nextPost(posts))}\n        >\n          <SkipNextIcon />\n        </IconButton>\n      </Tooltip>\n    </div>\n  )\n}\n\nControls.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  posts: PropTypes.array,\n  selectedSubreddit: PropTypes.string,\n  isFullscreen: PropTypes.bool,\n  isAutoAdvance: PropTypes.bool,\n  isPlaying: PropTypes.bool,\n  themeMode: PropTypes.string,\n  showVideos: PropTypes.bool,\n  showImages: PropTypes.bool,\n  showNSFW: PropTypes.bool,\n}\n\nconst mapStateToProps = state => {\n  const { selectedSubreddit, postsBySubreddit, config } = state\n  const subreddit = postsBySubreddit[selectedSubreddit]\n  const posts = subreddit?.[subreddit?.scope]\n  const {\n    isFullscreen,\n    isAutoAdvance,\n    isPlaying,\n    themeMode,\n    showVideos,\n    showImages,\n    showNSFW,\n  } = config\n\n  return {\n    posts,\n    isFullscreen,\n    isAutoAdvance,\n    isPlaying,\n    themeMode,\n    showVideos,\n    showImages,\n    showNSFW,\n  }\n}\n\nexport default Controls |> connect(mapStateToProps)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport { decodeHTMLEntity } from '../helpers'\n\nconst useStyles = makeStyles(({ palette }) => ({\n  root: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n  title: {\n    fontSize: 22,\n    textDecoration: 'none',\n    cursor: 'pointer',\n    color: palette.text.primary,\n    fontWeight: 'bold',\n  },\n}))\n\nconst Title = ({ post }) => {\n  const classes = useStyles()\n  if (!post) return ''\n\n  return (\n    <div className={classes.root}>\n      {post && <a className={classes.title} href={post.url}>\n        {post.title\n          ? decodeHTMLEntity(post.title)\n          : <Skeleton />\n        }\n      </a>\n      }\n    </div>\n  )\n}\n\nTitle.propTypes = {\n  post: PropTypes.object,\n}\n\nexport default Title\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpIcon from '@material-ui/icons/Help'\nimport Popover from '@material-ui/core/Popover'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nconst styles = ({ palette, spacing, shape }) => ({\n  root: {\n    minHeight: '100vh',\n    flexGrow: 1,\n    backgroundColor: palette.background.paper,\n    '& ul': {\n      listStyle: 'none',\n      margin: spacing(0),\n      padding: spacing(0),\n    },\n    '& li': {\n      marginRight: spacing(2),\n    },\n    '& code': {\n      fontSize: 16,\n      lineHeight: 3,\n      border: `1px solid ${palette.text.primary}`,\n      margin: spacing(1),\n      padding: spacing(1),\n      marginLeft: 0,\n      borderRadius: shape.borderRadius,\n    },\n    '& a': {\n      color: palette.text.primary,\n      margin: spacing(1),\n    },\n  },\n})\n\nconst a11yProps = (index) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.any,\n  value: PropTypes.number,\n  index: PropTypes.number,\n}\n\nconst Help = ({ classes }) => {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [value, setValue] = React.useState(0)\n\n  const handleChange = (_event, newValue) => {\n    setValue(newValue)\n  }\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'help-popover' : undefined\n  return <>\n    <IconButton\n      onClick={handleClick}\n      aria-describedby={id}\n      aria-label=\"Help\"\n      color=\"inherit\"\n    >\n      <HelpIcon />\n    </IconButton>\n    <Popover\n      id={id}\n      open={open}\n      anchorEl={anchorEl}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n    >\n      <Box className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Help Tabs\"\n          >\n            <Tab label=\"Keyboard Controls\" {...a11yProps(0)} />\n            <Tab label=\"About\" {...a11yProps(1)} />\n            <Tab label=\"Thanks\" {...a11yProps(2)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <Grid container>\n            <Grid item>\n              <h4 id=\"common-shortcuts\">Common Shortcuts</h4>\n              <ul>\n                <li><code>&gt;</code> plays next post</li>\n                <li><code>&lt;</code> plays previous post</li>\n                <li>\n                  <code>\n                    SpaceBar</code> toggles play/pause\n                </li>\n                <li><code>a</code> Auto Advance</li>\n                <li><code>f</code> Fullscreen</li>\n                <li><code>Esc</code> Exit Fullscreen</li>\n                <li><code>↑</code> Increase Volume</li>\n                <li><code>↓</code> Decrease Volume</li>\n                <li><code>←</code> Go back 5 seconds</li>\n                <li><code>→</code> Go forward 10 seconds</li>\n              </ul>\n            </Grid>\n            <Grid item>\n              <h4 id=\"skip-to-certain-parts-of-the-video\">\n                Skip to certain parts of the video\n              </h4>\n              <ul>\n                <li><code>0</code> Go to the 0% mark</li>\n                <li><code>1</code> Go to the 10% mark</li>\n                <li><code>2</code> Go to the 20% mark</li>\n                <li><code>3</code> Go to the 30% mark</li>\n                <li><code>4</code> Go to the 40% mark</li>\n                <li><code>5</code> Go to the 50% mark</li>\n                <li><code>6</code> Go to the 60% mark</li>\n                <li><code>7</code> Go to the 70% mark</li>\n                <li><code>8</code> Go to the 80% mark</li>\n                <li><code>9</code> Go to the 90% mark</li>\n                <li><code>End</code>    Go to the End</li>\n              </ul>\n            </Grid>\n          </Grid>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <Grid container>\n            <Grid item>\n              <Typography>Hello! This will be more helpful later.</Typography>\n            </Grid>\n          </Grid>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <Grid container>\n            <Grid item>\n              <Typography variant=\"h7\">\n              This app relies on the following packages:\n              </Typography>\n              <ul>\n                <li><a href=\"https://www.npmjs.com/package/connected-react-router\">connected-react-router</a></li>\n                <li><a href=\"https://www.npmjs.com/package/es6-promise\">es6-promise</a></li>\n                <li><a href=\"https://www.npmjs.com/package/isomorphic-fetch\">isomorphic-fetch</a></li>\n                <li><a href=\"https://www.npmjs.com/package/lodash.debounce\">lodash.debounce</a></li>\n                <li><a href=\"https://www.npmjs.com/package/lodash.throttle\">lodash.throttle</a></li>\n                <li><a href=\"https://www.npmjs.com/package/loglevel\">loglevel</a></li>\n                <li><a href=\"https://www.npmjs.com/package/pretty\">pretty</a></li>\n                <li><a href=\"https://www.npmjs.com/package/prop-types\">prop-types</a></li>\n                <li><a href=\"https://www.npmjs.com/package/react\">react</a></li>\n                <li><a href=\"https://www.npmjs.com/package/react-dom\">react-dom</a></li>\n                <li><a href=\"https://www.npmjs.com/package/react-html-parser\">react-html-parser</a></li>\n                <li><a href=\"https://www.npmjs.com/package/react-player\">react-player</a></li>\n                <li><a href=\"https://www.npmjs.com/package/react-redux\">react-redux</a></li>\n                <li><a href=\"https://www.npmjs.com/package/react-router-dom\">react-router-dom</a></li>\n                <li><a href=\"https://www.npmjs.com/package/react-scripts\">react-scripts</a></li>\n                <li><a href=\"https://www.npmjs.com/package/react-select\">react-select</a></li>\n                <li><a href=\"https://www.npmjs.com/package/recompose\">recompose</a></li>\n                <li><a href=\"https://www.npmjs.com/package/redux\">redux</a></li>\n                <li><a href=\"https://www.npmjs.com/package/redux-devtools-extension\">redux-devtools-extension</a></li>\n                <li><a href=\"https://www.npmjs.com/package/redux-logger\">redux-logger</a></li>\n                <li><a href=\"https://www.npmjs.com/package/redux-persist\">redux-persist</a></li>\n                <li><a href=\"https://www.npmjs.com/package/redux-thunk\">redux-thunk</a></li>\n                <li><a href=\"https://www.npmjs.com/package/remote-redux-devtools\">remote-redux-devtools</a></li>\n                <li><a href=\"https://www.npmjs.com/package/reselect\">reselect</a></li>\n                <li><a href=\"https://www.npmjs.com/package/snudown-js\">snudown-js</a></li>\n              </ul>\n            </Grid>\n            <Grid item>\n              <img height=\"192px\" src=\"/logo192.png\" />\n              <div>TV Icon made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n            </Grid>\n          </Grid>\n        </TabPanel>\n      </Box>\n    </Popover>\n  </>\n\n}\n\nHelp.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default Help |> withStyles(styles)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withStyles, useTheme } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport ToolBar from '@material-ui/core/ToolBar'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Posts from './Posts'\nimport SubredditPicker from './Picker'\nimport SubredditScopePicker from './SubredditScopePicker'\nimport Controls from './Controls'\nimport Title from './Title'\nimport Help from './Help'\n\nconst styles = ({ palette, spacing, shape }) => ({\n  root: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    padding: 0,\n    paddingBottom: spacing(2),\n    width: '100%',\n    backgroundColor: palette.background.default,\n    borderTop: '1px soild black',\n    boxShadow: `-1px -4px 4px -4px ${palette.primary.dark}`,\n    borderRadius: shape.borderRadius,\n  },\n})\n\nconst Menu = ({\n  classes,\n  post,\n  menuRef,\n}) => {\n  const theme = useTheme()\n  const largeScreen = useMediaQuery(theme.breakpoints.up('md'))\n  return (\n    <Container ref={menuRef} classes={classes} maxWidth={false}>\n      <ToolBar stype={{ overflow: 'auto' }}>\n        <SubredditPicker />\n        <SubredditScopePicker />\n        {largeScreen ? <Controls /> : ''}\n      </ToolBar>\n      {largeScreen ? '' : <ToolBar><Controls /></ToolBar>}\n      <Posts />\n      <ToolBar>\n        <Title post={post} />\n        <Help />\n      </ToolBar>\n    </Container>\n  )\n}\n\nMenu.propTypes = {\n  post: PropTypes.object,\n  classes: PropTypes.object.isRequired,\n  menuRef: PropTypes.object,\n}\n\nconst mapStateToProps = state => {\n  const { postsBySubreddit } = state\n  const selectedPost = postsBySubreddit.cursor || {}\n\n  return {\n    post: selectedPost.post,\n  }\n}\n\nexport default Menu |> connect(mapStateToProps) |> withStyles(styles)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Comment from './Comment'\n\nconst ReplyTree = ({ replies, depth }) => {\n  if (!replies || !replies.data) return []\n  return replies.data.children.map((child, index) => (\n    <Comment comment={child} depth={depth} key={index} />\n  ))\n}\n\nReplyTree.propTypes = {\n  replies: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n  ]),\n  depth: PropTypes.number,\n}\n\nexport default ReplyTree\n","import React, { useState, useMemo } from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\n\nimport { fetchRepliesIfNeeded } from '../actions'\nimport { postURL } from '../helpers/reddit'\nimport { markdown } from 'snudown-js'\n\nimport { decodeHTMLEntity } from '../helpers'\nimport { mediaSelector } from '../selectors'\n\nimport ReplyTree from './ReplyTree'\n\nconst styles = ({ palette, spacing }) => ({\n  commentBody: {\n    margin: spacing(1),\n    marginBottom: spacing(2),\n    overflowWrap: 'break-word',\n    '& a': {\n      color: palette.text.secondary,\n    },\n  },\n  selfPostBody: {\n    margin: spacing(1),\n    '& a': {\n      color: palette.text.primary,\n    },\n  },\n  commentAuthor: {\n    margin: spacing(1),\n    display: 'inline',\n    color: palette.text.primary,\n  },\n  postTitle: {\n    color: palette.text.primary,\n    textDecoration: 'none',\n  },\n})\n\nconst MoreButton = ({ children, onClick }) => {\n  return <a style={{\n    display: 'flex',\n    cursor: 'pointer' }\n  } onClick={onClick}>\n    {children}\n  </a>\n}\n\nMoreButton.propTypes = {\n  children: PropTypes.object,\n  onClick: PropTypes.func,\n}\n\nconst Reply = ({ reply, depth, dispatch, comments, classes }) => {\n  const { data } = reply\n  const [show, setShow] = useState(true)\n  const [loading, setLoading] = useState(false)\n\n  const loadReplies = () => {\n    setShow(true)\n    setLoading(true)\n    setTimeout(() => { setLoading(false) }, 5000)\n    dispatch(fetchRepliesIfNeeded(reply))\n    return false\n  }\n\n  const hideReplies = () => {\n    setLoading(false)\n    setShow(false)\n  }\n\n  const selfTextContent = () => {\n    if (!data.selftext_html) return ''\n    return decodeHTMLEntity(data.selftext_html)\n  }\n\n  const renderSelfText = () => (\n    ReactHtmlParser(selfTextContent())\n  )\n\n  const body = useMemo(() => (\n    ReactHtmlParser(markdown(data.body, { nofollow: true, target: 'TVRLINK' }))\n  ), [reply])\n\n  switch (reply.kind) {\n    case 'more':\n      const parentId = reply.data.parent_id\n      const comment = comments[parentId]\n      if (show && comment) {\n        return <>\n          <MoreButton onClick={hideReplies}>\n            <RemoveIcon />\n          </MoreButton>\n          {show &&\n            <ReplyTree replies={comment} depth={depth + 1} key={parentId} />}\n        </>\n      } else if (loading) {\n        return <MoreButton>\n          <CircularProgress size={24} thuckness={10} />\n        </MoreButton>\n      } else {\n        return <MoreButton onClick={loadReplies}>\n          <AddIcon />\n        </MoreButton>\n      }\n\n    case 't1':\n      const voteTotal = data.ups - data.downs\n      return (\n        <>\n          <div>\n            <a\n              className={classes.commentAuthor}\n              href={postURL(reply.data.permalink, 'html')}\n            >\n              {reply.data.author}\n            </a>\n            ({voteTotal > 0 ? `+${voteTotal}` : voteTotal})\n          </div>\n          <div className={classes.commentBody}>{body}</div>\n        </>\n      )\n    case 't3':\n      return <div className={classes.selfPostBody}>\n        <a\n          className={classes.postTitle}\n          href={postURL(reply.data.permalink, 'html')}\n        >\n          <h2>{decodeHTMLEntity(data.title)}</h2>\n        </a>\n        {renderSelfText()}\n        {data.selfText}\n      </div>\n    default:\n      // istanbul ignore next //\n      return ''\n  }\n}\n\nReply.propTypes = {\n  reply: PropTypes.object,\n  depth: PropTypes.number,\n  dispatch: PropTypes.func,\n}\n\nexport const mapStateToProps = ({\n  postsBySubreddit,\n  selectedSubreddit,\n  config,\n}) => {\n  const { showVideos, showImages, showNSFW } = config\n  const { cursor } = postsBySubreddit\n  const subreddit = postsBySubreddit[selectedSubreddit]\n  const comments = subreddit.comments || {}\n  const posts = subreddit[subreddit.scope]\n  const items = mediaSelector({ posts, showVideos, showImages, showNSFW })\n  const post = items[cursor.index]\n  const commentsForPost = comments[post?.id]\n\n  return {\n    comments: commentsForPost,\n  }\n}\n\nexport default Reply |>\n  withStyles(styles) |>\n  connect(mapStateToProps)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\n\nimport Reply from './Reply'\nimport ReplyTree from './ReplyTree'\n\nconst commentSpacing = (depth, base = 1) => (\n  Math.min(base, base / depth)\n)\n\nconst styles = ({ palette, spacing, shape }) => ({\n  comment: {\n    borderRadius: shape.borderRadius,\n    padding: spacing(1),\n    margin: spacing(1),\n    paddingRight: 0,\n    marginBottom: ({ depth }) => (\n      spacing(commentSpacing(depth, 1))\n    ),\n    marginLeft: ({ depth }) => (\n      spacing(commentSpacing(depth, 0.61))\n    ),\n    marginRight: ({ depth }) => (\n      spacing(commentSpacing(depth, 0.61))\n    ),\n  },\n  comment_container: {\n    backgroundColor: palette.background.paper,\n  },\n  comment_container_alt: {\n    backgroundColor: palette.background.default,\n  },\n})\n\nconst Comment = ({ comment, depth, classes }) => {\n  const classForDepth = depth =>\n    depth % 2 === 0\n      ? `${classes.comment} ${classes.comment_container}`\n      : `${classes.comment} ${classes.comment_container_alt}`\n\n  return (\n    <Box\n      boxShadow={depth >= 5 ? 5 : depth + 1}\n      className={classForDepth(depth)}\n    >\n      <Reply reply={comment} depth={depth} />\n      <ReplyTree replies={comment.data.replies} depth={depth + 1} />\n    </Box>\n  )\n}\n\nComment.propTypes = {\n  comment: PropTypes.object,\n  depth: PropTypes.number,\n  classes: PropTypes.object,\n}\n\nexport default Comment |> withStyles(styles)\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Comment from './Comment'\n\nconst CommentTree = ({ comments }) => {\n  return comments.data.children.map(\n    (child, index) => <Comment comment={child} depth={0} key={index} />)\n}\n\nCommentTree.propTypes = {\n  comments: PropTypes.object,\n}\n\nexport default CommentTree\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { mediaSelector } from '../selectors'\n\nimport {\n  fetchCommentsIfNeeded,\n} from '../actions'\n\nimport CommentTree from './CommentTree'\n\nconst styles = ({ spacing, palette, shape }) => ({\n  root: {\n    borderRadius: shape.borderRadius,\n  },\n  comments: {\n    borderRadius: shape.borderRadius,\n    minHeight: ({ playerHeight }) => (playerHeight),\n  },\n  loading: {\n    borderRadius: shape.borderRadius,\n    backgroundColor: palette.background.default,\n    minHeight: ({ playerHeight }) => (playerHeight),\n  },\n  menuButton: {\n    marginRight: spacing(2),\n  },\n  title: {\n    color: palette.text.contrastText,\n  },\n  spacerBottom: {\n    minHeight: ({ menuHeight }) => (menuHeight + spacing(1)),\n    paddingBottom: 1,\n  },\n  loadComments: {\n    display: 'flex',\n    width: '100%',\n    '& a': {\n      flex: 1,\n      textAlign: 'center',\n      color: palette.text.primary,\n      textDecoration: 'none',\n      cursor: 'pointer',\n    },\n  },\n})\n\nconst Comments = ({\n  comments,\n  isFetchingComments,\n  post,\n  playerHeight,\n  dispatch,\n  classes,\n}) => {\n  const [visible, setVisible] = useState(false)\n  const [fallback, setFallback] = useState(false)\n\n  useEffect(() => {\n    if (visible) {\n      dispatch(fetchCommentsIfNeeded())\n    }\n  }, [post, visible])\n\n  useEffect(() => {\n    if (typeof IntersectionObserver === 'undefined') {\n      // IntersectionObserver not supported (ie, node),\n      // default to always visible and always loading\n      // https://caniuse.com/#feat=intersectionobserver\n      setFallback(true)\n      return\n    } else {\n      /* istanbul ignore next */\n      const rootMargin = playerHeight\n      const target = document.getElementById('scroll_beacon')\n      const options = {\n        rootMargin: `${rootMargin}px`,\n        threshold: 1,\n      }\n      const onIntersection = elements => {\n        if (elements[0] && elements[0].isIntersecting) {\n          setVisible(true)\n        } else {\n          setVisible(false)\n        }\n      }\n\n      const observer = new IntersectionObserver(onIntersection, options)\n      if (target) {\n        observer.observe(target)\n        return () => observer.unobserve(target)\n      }\n    }\n  }, [playerHeight])\n\n  const LoadComments = () => {\n    return fallback && <div className={classes.loadComments}>\n      <a onClick={() => setVisible(!visible)}>\n        <h2>{visible ? 'Stop Loading' : 'Load'} Comments</h2>\n      </a>\n    </div>\n  }\n\n  if (!comments || isFetchingComments) {\n    return (\n      <div>\n        <div className={classes.spacer}>\n          <div id=\"comments\" className={classes.loading}>\n            <Box className={classes.selfPostBody} boxShadow={5}>\n              {isFetchingComments\n                ? <LinearProgress />\n                : <LoadComments />\n              }\n            </Box>\n          </div>\n        </div>\n        <div className={classes.spacerBottom}></div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className={classes.comments}>\n        <div\n          id=\"comments\"\n          className={`${classes.comment_container} ${classes.root}`}\n        >\n          {fallback && <LoadComments />}\n          {comments.root.map((comment, index) => (\n            <CommentTree comments={comment} key={index} />\n          ))}\n        </div>\n      </div>\n      <div className={classes.spacerBottom}></div>\n    </div>\n  )\n}\n\nComments.propTypes = {\n  dispatch: PropTypes.func,\n  classes: PropTypes.object,\n  playerHeight: PropTypes.number,\n  menuHeight: PropTypes.number,\n  isFetchingComments: PropTypes.bool,\n  comments: PropTypes.object,\n  post: PropTypes.object,\n}\n\nconst mapStateToProps = ({ postsBySubreddit, selectedSubreddit, config }) => {\n  const { showVideos, showImages, showNSFW } = config\n  const { cursor } = postsBySubreddit\n  const subreddit = postsBySubreddit[selectedSubreddit]\n  const {\n    comments,\n    isFetchingComments,\n    scope,\n  } = subreddit || {\n    comments: {},\n  }\n\n  const posts = subreddit?.[scope] || []\n  const items = mediaSelector({ posts, showVideos, showImages, showNSFW })\n  const post = items[cursor.index]\n  const commentsForPost = comments?.[post?.id]\n\n  return {\n    post,\n    isFetchingComments,\n    comments: commentsForPost,\n  }\n}\n\nexport default Comments |>\n  withStyles(styles) |>\n  connect(mapStateToProps)\n","import React, { useEffect, useRef, useMemo, useState } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport ReactHtmlParser from 'react-html-parser'\nimport ReactPlayer from 'react-player'\nimport throttle from 'lodash.throttle'\n\nimport {\n  isVideo,\n  isKnownMediaEmbed,\n  getVideoDimensions,\n  decodeHTMLEntity,\n} from '../helpers'\nimport { nextPost, mediaFallback, playerScanAck, playerJumpAck } from '../actions'\n\nconst styles = () => ({\n  reactPlayer: {\n    backgroundColor: 'black',\n    zIndex: 40,\n  },\n  playerWrapper: {\n    objectFit: 'contain',\n    backgroundColor: 'black',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    transform: 'translate3d(0,0,1px)',\n    transition: 'height 0.39s, width 0.39s',\n  },\n})\n\nconst VideoPlayer = ({\n  classes,\n  post,\n  dispatch,\n  isMediaFallback,\n  height,\n  isAutoAdvance,\n  isPlaying,\n  volume,\n  scan,\n  jump,\n}) => {\n  const playerRef = useRef()\n  const [playerHeight, setPlayerHeight] = useState(height)\n  const [playerWidth, setPlayerWidth] = useState(window.innerWidth)\n\n  const onMediaEnded = () => {\n    if (isAutoAdvance) dispatch(nextPost())\n  }\n\n  const onMediaError = (error) => {\n    dispatch(mediaFallback(error))\n  }\n\n  const renderMediaEmbed = () => {\n    if (post && isVideo(post)) {\n      const transform = (node, _index) => {\n        if (node.type === 'tag' && node.name === 'iframe') {\n          node.attribs.height = playerHeight || height\n          node.attribs.width = playerWidth || '100%'\n        }\n      }\n\n      const content = decodeHTMLEntity(post.media_embed.content)\n      return (\n        <div className={classes.playerWrapper}>\n          {ReactHtmlParser(content, { transform })}\n        </div>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n\n  useEffect(() => {\n    if (scan === 0) return\n    const player = playerRef.current\n    if (player) {\n      const currentTime = player.getCurrentTime()\n      playerRef.current.seekTo(currentTime + scan, 'seconds')\n    }\n    dispatch(playerScanAck())\n  }, [scan])\n\n  useEffect(() => {\n    if (jump === -1) return\n    if (playerRef.current) {\n      playerRef.current.seekTo(jump, 'fraction')\n    }\n    dispatch(playerJumpAck())\n  }, [jump])\n\n  const url = useMemo(() => (\n    // eslint-disable-next-line camelcase\n    (post.secure_media?.reddit_video?.fallback_url || post.url)\n      .replace(/\\.gifv/, '.mp4')\n  ), [post])\n\n  useEffect(throttle(() => {\n    const oEmbed = post.secure_media_embed || post.media_embed\n    const img = getVideoDimensions(oEmbed, height, window.innerWidth)\n    setPlayerWidth(img.width)\n    setPlayerHeight(img.height)\n  }, 100), [post, height, window.innerWidth])\n\n  const renderMediaPlayer = () => {\n    return <div className={classes.playerWrapper}>\n      <ReactPlayer\n        ref={playerRef}\n        playing={isPlaying}\n        volume={volume}\n        preload=\"true\"\n        url={url}\n        className={classes.reactPlayer}\n        height={playerHeight}\n        width={playerWidth}\n        onEnded={onMediaEnded}\n        onError={onMediaError}\n        controls={true}\n        loop={false}\n      />\n    </div>\n  }\n\n  if (isMediaFallback || isKnownMediaEmbed(post)) {\n    return renderMediaEmbed()\n  } else {\n    return renderMediaPlayer()\n  }\n\n}\n\nVideoPlayer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  isMediaFallback: PropTypes.bool,\n  dispatch: PropTypes.func,\n  error: PropTypes.object,\n  isFetching: PropTypes.bool,\n  isAutoAdvance: PropTypes.bool,\n  isPlaying: PropTypes.bool,\n  isFullsceen: PropTypes.bool,\n  volume: PropTypes.number,\n  height: PropTypes.number,\n}\n\nconst mapStateToProps = state => {\n  const { dispatch, selectedSubreddit, postsBySubreddit, config } = state\n  const { isFullsceen, isAutoAdvance, isPlaying, volume, scan, jump } = config\n  const selectedPost = postsBySubreddit.cursor || {}\n  const { isFetching } = postsBySubreddit[selectedSubreddit] || {\n    isFetching: false,\n  }\n\n  return {\n    dispatch,\n    isFetching,\n    post: selectedPost.post,\n    isMediaFallback: selectedPost.media_fallback,\n    isFullsceen,\n    isAutoAdvance,\n    isPlaying,\n    volume,\n    scan,\n    jump,\n  }\n}\n\nexport default VideoPlayer |> connect(mapStateToProps) |> withStyles(styles)\n\n","import React, { useEffect, useState, useLayoutEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Skeleton from '@material-ui/lab/Skeleton'\n\nimport { nextPost, mediaFallback } from '../actions'\nimport { getPostImage, getImageDimensions } from '../helpers'\n\nconst styles = ({ palette }) => ({\n  playerWrapper: {\n    objectFit: 'contain',\n    backgroundColor: 'black',\n    height: ({ height }) => (\n      height\n    ),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    top: 0,\n    left: 0,\n    transform: 'translate3d(0,0,1px)',\n    transition: 'height 0.39s, width 0.39s',\n  },\n  error: {\n    height: ({ height }) => (\n      height\n    ),\n    backgroundColor: palette.background.default,\n    top: 0,\n    botton: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    zIndex: 40,\n  },\n  fallbackLink: {\n    color: palette.text.primary,\n    fontSize: 30,\n    textDecoration: 'none',\n  },\n})\n\nconst ImagePlayer = ({\n  height,\n  post,\n  isAutoAdvance,\n  isMediaFallback,\n  dispatch,\n  classes,\n}) => {\n\n  const [loading, setLoading] = useState(true)\n  const [url, setUrl] = useState(post.thumbnail)\n  const [imgRef, setImgRef] = useState(null)\n  const [imageWidth, setImageWidth] = useState(null)\n  const [imageHeight, setImageHeight] = useState(height)\n\n  const onError = (error) => {\n    setLoading(false)\n    dispatch(mediaFallback(error))\n  }\n\n  const onImageChange = (ref = imgRef) => {\n    const image =\n      getImageDimensions(ref, height, window.innerWidth)\n\n    setImageWidth(image.width)\n    setImageHeight(image.height)\n  }\n\n  const enhance = () => {\n    const image = getPostImage(post, height)\n    setUrl(image.url || post.url)\n    onImageChange(imgRef || image)\n  }\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (isAutoAdvance) dispatch(nextPost())\n    }, 5000)\n\n    return () => clearTimeout(timeout)\n  }, [post, isAutoAdvance])\n\n  useEffect(() => {\n    setLoading(true)\n    setImgRef(null)\n    enhance()\n  }, [post])\n\n  useLayoutEffect(() => {\n    enhance()\n  }, [height, window.innerWidth])\n\n  if (isMediaFallback) {\n    return <div className={classes.error}>\n      <h2> Loading Embedded Image </h2>\n      <a className={classes.fallbackLink} href={post.url}>\n        Direct Link\n      </a>\n      <h5>via { post.domain }</h5>\n    </div>\n  }\n\n  return <div className={classes.playerWrapper}>\n    <img\n      ref={setImgRef}\n      src={url}\n      height={loading ? 0 : imageHeight}\n      width={loading ? 0 : imageWidth}\n      onError={onError}\n      onLoad={() => setLoading(false)}\n    />\n    <Skeleton\n      variant=\"rect\"\n      height={loading ? imageHeight || height : 0 }\n      width={loading ? imageWidth || window.innerWidth : 0}\n    />\n  </div>\n}\n\nImagePlayer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  dispatch: PropTypes.func,\n  error: PropTypes.object,\n  isFetching: PropTypes.bool,\n  isMediaFallback: PropTypes.bool,\n  isAutoAdvance: PropTypes.bool,\n  height: PropTypes.number,\n  post: PropTypes.object,\n}\n\nconst mapStateToProps = state => {\n  const { dispatch, selectedSubreddit, postsBySubreddit, config } = state\n  const { isFullsceen, isAutoAdvance } = config\n  const selectedPost = postsBySubreddit.cursor || {}\n  const { isFetching } = postsBySubreddit[selectedSubreddit] || {\n    isFetching: false,\n  }\n\n  return {\n    dispatch,\n    isFetching,\n    post: selectedPost.post,\n    isMediaFallback: selectedPost.media_fallback,\n    isFullsceen,\n    isAutoAdvance,\n  }\n}\n\nexport default ImagePlayer |> connect(mapStateToProps) |> withStyles(styles)\n\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { TogglePlayControl } from './Controls'\nimport { nextPost, configTogglePlay } from '../actions'\n\nconst styles = ({ palette, spacing }) => ({\n  playerWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    top: 0,\n    left: 0,\n    transition: 'height 0.39s, width 0.39s',\n    transform: 'translate3d(0,0,1px)',\n    '& iframe': {\n      border: 0,\n    },\n  },\n  load: {\n    height: ({ height }) => (\n      height\n    ),\n    backgroundColor: palette.background.default,\n    top: 0,\n    botton: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    zIndex: 40,\n    '& a': {\n      color: palette.text.primary,\n      fontSize: 30,\n      textDecoration: 'none',\n    },\n  },\n  controls: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingLeft: spacing(1),\n  },\n})\n\nconst WebPagePlayer = ({\n  height,\n  post,\n  isAutoAdvance,\n  isPlaying,\n  dispatch,\n  classes,\n}) => {\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (isAutoAdvance) dispatch(nextPost())\n    }, 5000)\n\n    return () => clearTimeout(timeout)\n  }, [post, isAutoAdvance])\n\n  if (!isPlaying) {\n    return <div className={classes.load}>\n      <h2> Embedded WebPage </h2>\n      <a href={post.url}>\n        Direct Link\n      </a>\n      <h5>via { post.domain }</h5>\n      <div className={classes.controls}>\n        <TogglePlayControl\n          isPlaying={isPlaying}\n          onClick={() => {\n            dispatch(configTogglePlay())\n          }}\n        />\n      </div>\n    </div>\n  }\n\n  return <div className={classes.playerWrapper}>\n    <iframe\n      src={post.url}\n      height={height}\n      width={window.innerWidth}\n      sandbox=\"allow-scripts\"\n    />\n  </div>\n}\n\nWebPagePlayer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  dispatch: PropTypes.func,\n  error: PropTypes.object,\n  isFetching: PropTypes.bool,\n  isAutoAdvance: PropTypes.bool,\n  isPlaying: PropTypes.bool,\n  height: PropTypes.number,\n  post: PropTypes.object,\n}\n\nconst mapStateToProps = state => {\n  const { dispatch, selectedSubreddit, postsBySubreddit, config } = state\n  const { isFullsceen, isAutoAdvance, isPlaying } = config\n  const selectedPost = postsBySubreddit.cursor || {}\n  const { isFetching } = postsBySubreddit[selectedSubreddit] || {\n    isFetching: false,\n  }\n\n  return {\n    dispatch,\n    isFetching,\n    isPlaying,\n    post: selectedPost.post,\n    isFullsceen,\n    isAutoAdvance,\n  }\n}\n\nexport default WebPagePlayer |> connect(mapStateToProps) |> withStyles(styles)\n\n\n","import React, { useEffect, useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport throttle from 'lodash.throttle'\n\nimport { isVideo, isImage } from '../helpers'\n\nimport Comments from './Comments'\nimport VideoPlayer from './VideoPlayer'\nimport ImagePlayer from './ImagePlayer'\nimport WebPagePlayer from './WebPagePlayer'\n\nimport {\n  ShowVideosControl,\n  ShowImagesControl,\n  ShowNSFWControl,\n  RefreshControl,\n} from './Controls'\n\nimport {\n  configToggleShowVideos,\n  configToggleShowImages,\n  refreshSubreddit,\n  configToggleNSFW,\n} from '../actions'\n\nconst miniPlayerWidth = () =>\n  Math.min(480, window.innerWidth * (0.39))\n\nconst miniPlayerHeight = () =>\n  miniPlayerWidth() * (9 / 16)\n\nconst styles = ({ palette, spacing, breakpoints }) => ({\n  root: {\n    height: ({ playerHeight }) => (\n      playerHeight\n    ),\n    margin: 0,\n    padding: 0,\n    overflow: 'hidden',\n    scrollY: 'disabled',\n    backgroundColor: 'black',\n  },\n  miniPlayer: {\n    position: 'fixed',\n    bottom: ({ menuHeight }) => menuHeight,\n    right: 0,\n    width: miniPlayerWidth,\n    backgroundColor: 'transparent',\n    opacity: 0.9,\n    [breakpoints.down('xs')]: {\n      display: 'none',\n    },\n  },\n  loading: {\n    backgroundColor: palette.background.default,\n    height: ({ playerHeight }) => (\n      playerHeight\n    ),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  controls: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingLeft: spacing(1),\n  },\n})\n\nconst Post = ({\n  classes,\n  error,\n  isFetching,\n  post,\n  playerHeight,\n  menuHeight,\n  showImages,\n  showVideos,\n  isPlaying,\n  showNSFW,\n  dispatch,\n}) => {\n\n  const [showMiniPlayer, setShowMiniPlayer] = useState(false)\n\n  const renderMedia = () => {\n    const height = showMiniPlayer\n      ? miniPlayerHeight()\n      : playerHeight\n    if (isVideo(post)) {\n      return <VideoPlayer height={height} />\n    } else if (isImage(post)) {\n      return <ImagePlayer height={height} />\n    } else if (post.is_self) {\n      return '' // show comments section if is_self\n    } else {\n      return <WebPagePlayer height={height} />\n    }\n  }\n\n  const renderLoading = () => {\n    return <div className={classes.loading}>\n      <Skeleton width=\"100%\" height=\"100%\"/>\n    </div>\n  }\n\n  const renderEmpty = () => {\n    return <div className={classes.loading}>\n      <h2>No TV Found.</h2>\n      <h5>Try changing some filters</h5>\n      <div className={classes.controls}>\n        <ShowImagesControl\n          showImages={showImages}\n          onClick={() => dispatch(configToggleShowImages())}\n        />\n        <ShowVideosControl\n          showVideos={showVideos}\n          onClick={() => dispatch(configToggleShowVideos())}\n        />\n      </div>\n      <div className={classes.controls}>\n        <RefreshControl onClick={() => dispatch(refreshSubreddit())} />\n      </div>\n    </div>\n  }\n\n  const renderNSFW = () => {\n    return <div className={classes.loading}>\n      <h2>NSFW Content.</h2>\n      <h5>You must remove the NSFW filter to proceed.</h5>\n      <div className={classes.controls}>\n        <ShowNSFWControl\n          showNSFW={showNSFW}\n          onClick={() => dispatch(configToggleNSFW())}\n        />\n      </div>\n    </div>\n  }\n\n  const renderLoadingError = () => {\n    return <div className={classes.loading}>\n      <h2>Failed to load TV; try again..</h2>\n    </div>\n  }\n\n  const isNSFW = useMemo(() => (\n    // eslint-disable-next-line camelcase\n    post?.over_18\n  ), [post])\n\n  const showMiniPlayerIfNeeded = throttle(() => {\n    if (!isPlaying) {\n      setShowMiniPlayer(false)\n    } else if (\n      isVideo(post) &&\n      window.pageYOffset > 0 && playerHeight > 0 &&\n      window.pageYOffset >= playerHeight\n    ) {\n      setShowMiniPlayer(isNSFW ? showNSFW : true)\n    } else if (\n      window.pageYOffset === 0 ||\n      window.pageYOffset < (playerHeight)\n    ) {\n      setShowMiniPlayer(false)\n    }\n  }, 100)\n\n  useEffect(() => {\n    showMiniPlayerIfNeeded()\n    window.addEventListener('scroll', showMiniPlayerIfNeeded)\n    return () => (\n      window.removeEventListener('scroll', showMiniPlayerIfNeeded)\n    )\n  }, [playerHeight, showNSFW, isNSFW, isPlaying])\n\n  if (isFetching) {\n    return renderLoading()\n  } else if (error) {\n    return renderLoadingError()\n  } else if (!post || !post.url) {\n    return renderEmpty()\n  } else {\n    const className = showMiniPlayer\n      ? classes.miniPlayer : classes.root\n    return <div style={{ opacity: isFetching ? 0.5 : 1 }}>\n      <div\n        className={classes.loading}\n        style={{ display: showMiniPlayer ? 'block' : 'none' }}\n      >\n        <h2>Using Mini Player...</h2>\n      </div>\n      <Container maxWidth={false} className={className}>\n        {(post.over_18 && !showNSFW) ? renderNSFW() : renderMedia()}\n      </Container>\n      <Comments playerHeight={playerHeight} menuHeight={menuHeight} />\n    </div>\n  }\n\n}\n\nPost.propTypes = {\n  isFetching: PropTypes.bool,\n  post: PropTypes.object,\n  playerHeight: PropTypes.number,\n  menuHeight: PropTypes.number,\n  showImages: PropTypes.bool,\n  showVideos: PropTypes.bool,\n  showNSFW: PropTypes.bool,\n  error: PropTypes.object,\n  classes: PropTypes.object,\n  dispatch: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => {\n  const { selectedSubreddit, postsBySubreddit, config } = state\n  const { showImages, showVideos, showNSFW, isPlaying } = config\n  const selectedPost = postsBySubreddit.cursor || {}\n  const { isFetching } = postsBySubreddit[selectedSubreddit] || {\n    isFetching: false,\n  }\n\n  return {\n    isFetching,\n    post: selectedPost.post,\n    showImages,\n    showVideos,\n    showNSFW,\n    isPlaying,\n  }\n}\n\nexport default Post |> connect(mapStateToProps) |> withStyles(styles)\n\n\n","import { useEffect } from 'react'\n\nimport {\n  nextPost,\n  previousPost,\n  configTogglePlay,\n  configToggleAutoAdvance,\n  configEnableFullscreen,\n  configDisableFullscreen,\n  playerScanBackwards,\n  playerScanForwards,\n  playerVolumeUp,\n  playerVolumeDown,\n  playerJumpTo,\n} from '../actions'\n\n\nexport const handleKeyboardAction = event => (dispatch, getState) => {\n  const { config } = getState()\n  if (!config.keyboardControls) return\n  if (event.metaKey) return\n  switch (event.key) {\n    case '.':\n    case '>':\n      return dispatch(nextPost())\n    case 'N':\n    case 'n':\n      return event.shiftKey ? dispatch(nextPost()) : void (0)\n    case ',':\n    case '<':\n      return dispatch(previousPost())\n    case 'P':\n    case 'p':\n      return event.shiftKey ? dispatch(previousPost()) : void (0)\n    case ' ':\n    case 'Space':\n    case 'Enter':\n    case 'k':\n      if (!event.shiftKey) event.preventDefault()\n      return dispatch(configTogglePlay())\n    case 'a':\n      return dispatch(configToggleAutoAdvance())\n    case 'f':\n      return dispatch(configEnableFullscreen())\n    case 'Escape':\n      return dispatch(configDisableFullscreen())\n    case 'ArrowLeft':\n      return dispatch(playerScanBackwards(5))\n    case 'ArrowRight':\n      return dispatch(playerScanForwards(10))\n    case 'ArrowUp':\n      if (!event.shiftKey) event.preventDefault()\n      return dispatch(playerVolumeUp())\n    case 'ArrowDown':\n      if (!event.shiftKey) event.preventDefault()\n      return dispatch(playerVolumeDown())\n    case '0':\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n      const jumpTo = parseInt(event.key, 10)\n      return dispatch(playerJumpTo(jumpTo))\n    case 'End':\n      // if (!event.shiftKey) event.preventDefault()\n      return dispatch(playerJumpTo(10))\n    default:\n      return\n  }\n}\n\nconst useKeyboardController = ({ dispatch }) => {\n  const handleKeyDown = (event) => {\n    dispatch(handleKeyboardAction(event))\n  }\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', handleKeyDown)\n    return () => {\n      document.body.removeEventListener('keydown', handleKeyDown)\n    }\n  }, [])\n}\n\nexport default useKeyboardController\n","import { useState, useEffect, useRef } from 'react'\nimport debounce from 'lodash.debounce'\n\nconst useLayoutDimensionTracker = ({ isFullscreen, isFetching }) => {\n  const menuRef = useRef()\n\n  const [playerHeight, setPlayerHeight] = useState(0)\n  const [menuHeight, setMenuHeight] = useState(0)\n  const [menuOffsetHeight, setMenuOffsetHeight] = useState(0)\n  const [orientation, setOrientation] = useState(0)\n  const [screenHeight, setScreenHeight] = useState(window.innerHeight)\n\n  const calculateMenuHeight = () => {\n    const { current } = menuRef\n    if (current) {\n      const box = current.getBoundingClientRect()\n      return box.height\n    } else {\n      return menuHeight\n    }\n  }\n\n  const calculateHeight = () => (\n    window.innerHeight - menuOffsetHeight\n  )\n\n  const onResize = debounce(() => {\n    setScreenHeight(calculateHeight())\n    setMenuHeight(calculateMenuHeight())\n  }, 610)\n\n  const onOrientationChange = () => {\n    if (typeof window.orientation !== 'undefined') {\n      setOrientation(window.orientation)\n    }\n  }\n  useEffect(() => {\n    setMenuHeight(calculateMenuHeight())\n  }, [menuRef])\n\n  useEffect(() => {\n    setPlayerHeight(calculateHeight())\n  }, [screenHeight, isFullscreen, menuOffsetHeight])\n\n  useEffect(() => {\n    const constrained = menuHeight * 1.39 > window.innerHeight\n    setMenuOffsetHeight(isFullscreen || constrained ? 0 : menuHeight)\n  }, [isFullscreen, screenHeight, menuHeight, orientation])\n\n  useEffect(() => {\n    setScreenHeight(window.innnerHeight)\n    setMenuHeight(calculateMenuHeight())\n    setPlayerHeight(calculateHeight())\n  }, [isFullscreen, isFetching, orientation])\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize)\n    return () => (window.removeEventListener('resize', onResize))\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener('orientationchange', onOrientationChange)\n    return () => (\n      window.removeEventListener('orientationchange', onOrientationChange)\n    )\n  }, [])\n\n  return { playerHeight, menuHeight, menuRef }\n}\n\nexport default useLayoutDimensionTracker\n","import { useEffect } from 'react'\nimport { push } from 'connected-react-router'\n\nimport { loadSubreddit } from '../actions'\nimport { translatePermalink } from '../helpers'\n\nconst useRouteTracker = ({\n  dispatch,\n  postsBySubreddit,\n  selectedSubreddit,\n  router,\n}) => {\n  useEffect(() => {\n    dispatch(loadSubreddit(selectedSubreddit))\n  }, [selectedSubreddit])\n\n  useEffect(() => {\n    if (postsBySubreddit.cursor && postsBySubreddit.cursor.post) {\n      const permalink = postsBySubreddit.cursor.post.permalink\n      const newPermalink = translatePermalink(permalink, selectedSubreddit)\n      if (newPermalink && newPermalink !== router.location.pathname) {\n        dispatch(push(newPermalink))\n      }\n    }\n  }, [postsBySubreddit, router])\n}\n\nexport default useRouteTracker\n","import { useMemo } from 'react'\nimport {\n  createMuiTheme,\n} from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport grey from '@material-ui/core/colors/grey'\n\nconst useAppTheme = ({ themeMode }) => {\n  const prefersLightMode = useMediaQuery('(prefers-color-scheme: light)')\n\n  return useMemo(() => (\n    createMuiTheme({\n      palette: {\n        type: themeMode || (prefersLightMode ? 'light' : 'dark'),\n        primary: grey,\n      },\n      typography: {\n        fontFamily: '\"Noto Sans\", Arial, sans-serif',\n      },\n    })\n  ), [themeMode, prefersLightMode])\n}\n\nexport default useAppTheme\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { connect } from 'react-redux'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport useFullscreen from './hooks/useFullscreen'\n\nimport Menu from './components/Menu'\nimport Post from './components/Post'\n\nimport useKeyboardController from './hooks/useKeyboardController'\nimport useLayoutDimensionTracker from './hooks/useLayoutDimensionTracker'\nimport useForceWindowFocus from './hooks/useForceWindowFocus'\nimport useRouteTracker from './hooks/useRouteTracker'\nimport useAppTheme from './hooks/useAppTheme'\n\nconst styles = () => ({\n  root: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n})\n\nconst App = ({\n  selectedSubreddit,\n  postsBySubreddit,\n  themeMode,\n  isFullscreen,\n  isFetching,\n  dispatch,\n  classes,\n  router,\n}) => {\n\n  const theme = useAppTheme({ themeMode })\n  const { playerHeight, menuHeight, menuRef } =\n    useLayoutDimensionTracker({ isFullscreen, isFetching })\n  useForceWindowFocus()\n  useKeyboardController({ dispatch })\n  useRouteTracker({ dispatch, postsBySubreddit, selectedSubreddit, router })\n  useFullscreen({ dispatch, isFullscreen })\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Container classes={classes} maxWidth={false}>\n        <CssBaseline />\n        <Menu menuRef={menuRef} />\n        <Post playerHeight={playerHeight} menuHeight={menuHeight} />\n      </Container>\n    </MuiThemeProvider>\n  )\n}\n\nApp.propTypes = {\n  selectedSubreddit: PropTypes.string,\n  postsBySubreddit: PropTypes.object,\n  themeMode: PropTypes.string,\n  isFullscreen: PropTypes.bool,\n  isFetching: PropTypes.bool,\n  dispatch: PropTypes.func,\n  classes: PropTypes.object,\n  router: PropTypes.object,\n}\n\nconst mapStateToProps = ({\n  selectedSubreddit,\n  postsBySubreddit,\n  router,\n  config,\n}) => {\n  const { isFetching } = postsBySubreddit[selectedSubreddit] || {\n    isFetching: false,\n  }\n  return {\n    selectedSubreddit,\n    postsBySubreddit,\n    router,\n    themeMode: config.themeMode,\n    isFullscreen: config.isFullscreen,\n    isFetching,\n  }\n}\n\nexport default App |> withStyles(styles) |> connect(mapStateToProps)\n","import { useEffect } from 'react'\n\n\nexport default () => {\n\n  const forceWindowFocus = (event) => {\n    if (event.currentTarget === event.target) {\n      window.focus() // FF\n      setTimeout(window.focus, 20) // Chrome\n    }\n\n    return true\n  }\n\n  useEffect(() => {\n    window.addEventListener('blur', forceWindowFocus)\n    return () => window.removeEventListener('blur', forceWindowFocus)\n  })\n\n}\n","import { combineReducers } from 'redux'\nimport { connectRouter, LOCATION_CHANGE } from 'connected-react-router'\n\nimport {\n  SELECT_SUBREDDIT,\n  INVALIDATE_SUBREDDIT,\n  REMOVE_SUBREDDIT,\n  SELECT_SUBREDDIT_SCOPE,\n  REQUEST_POSTS,\n  RECEIVE_POSTS,\n  RECEIVE_POSTS_ERROR,\n  SELECT_POST,\n  NEXT_POST,\n  PREVIOUS_POST,\n  MEDIA_FALLBACK,\n  REQUEST_COMMENTS,\n  RECEIVE_COMMENTS,\n  RECEIVE_COMMENTS_ERROR,\n  REQUEST_REPLIES,\n  RECEIVE_REPLIES,\n  RECEIVE_REPLIES_ERROR,\n  DEFAULT_SUBREDDIT,\n  DEFAULT_SUBREDDITS,\n  ENABLE_FULLSCREEN,\n  DISABLE_FULLSCREEN,\n  TOGGLE_FULLSCREEN,\n  TOGGLE_AUTO_ADVANCE,\n  TOGGLE_PLAY,\n  TOGGLE_THEME_MODE,\n  TOGGLE_NSFW,\n  TOGGLE_SHOW_IMAGES,\n  TOGGLE_SHOW_VIDEOS,\n  ENABLE_KEYBORAD_CONTROLS,\n  DISABLE_KEYBORAD_CONTROLS,\n  PLAYER_VOLUME_UP,\n  PLAYER_VOLUME_DOWN,\n  PLAYER_SCAN_FORWARDS,\n  PLAYER_SCAN_BACKWARDS,\n  PLAYER_SCAN_ACK,\n  PLAYER_JUMP_TO,\n  PLAYER_JUMP_ACK,\n} from '../constants'\n\nimport {\n  matchRedditPath,\n  findPostById,\n  extractPost,\n  getNewSubredditFromPath,\n  didInvalidateSubredditFromPath,\n  translateVolume,\n} from '../helpers'\n\nexport const selectedSubreddit = (state = DEFAULT_SUBREDDIT, action) => {\n  switch (action.type) {\n    case SELECT_SUBREDDIT:\n      return action.subreddit\n    case LOCATION_CHANGE:\n      return getNewSubredditFromPath(state, action.payload.location.pathname)\n    default:\n      return state\n  }\n}\n\nconst selectedPosts = (\n  state = {\n    isFetching: false,\n    didInvalidate: false,\n    comments: {},\n    scope: 'hot',\n    hot: [],\n    new: [],\n    controversial: [],\n    top: [],\n    rising: [],\n  },\n  action,\n) => {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n      return {\n        ...state,\n        didInvalidate: true,\n      }\n    case SELECT_SUBREDDIT_SCOPE:\n      return {\n        ...state,\n        scope: action.scope,\n      }\n    case REQUEST_POSTS:\n      return {\n        ...state,\n        isFetching: true,\n        didInvalidate: false,\n        error: null,\n      }\n    case RECEIVE_POSTS:\n      const items = action.posts\n      return {\n        ...state,\n        isFetching: false,\n        didInvalidate: false,\n        [action.scope]: items,\n        comments: state.comments,\n        lastUpdated: action.receivedAt,\n      }\n    case RECEIVE_POSTS_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        didInvalidate: false,\n        [action.scope]: [],\n        error: action.error,\n      }\n    case LOCATION_CHANGE:\n      const didInvalidate = didInvalidateSubredditFromPath(\n        action.subreddit,\n        action,\n      )\n\n      return {\n        ...state,\n        didInvalidate,\n        isFetching: false,\n        scope: state.scope || 'hot',\n        error: null,\n      }\n    case REQUEST_COMMENTS:\n      return {\n        ...state,\n        isFetchingComments: true,\n        error: null,\n      }\n    case RECEIVE_COMMENTS:\n      const comments = { ...state.comments, [action.post.id]: {\n        root: action.comments,\n      } }\n      return {\n        ...state,\n        isFetchingComments: false,\n        comments,\n      }\n    case RECEIVE_COMMENTS_ERROR:\n      return {\n        ...state,\n        isFetchingComments: false,\n        error: action.error,\n      }\n    case REQUEST_REPLIES:\n      return {\n        ...state,\n        error: null,\n      }\n    case RECEIVE_REPLIES:\n      if (action.comments) {\n        return {\n          ...state,\n          comments: {\n            ...state.comments,\n            [action.post.id]: {\n              ...state.comments[action.post.id],\n              [`t1_${action.parentId}`]: (\n                action.comments[1]?.data?.children?.[0]?.data?.replies || {}\n              ),\n            },\n          },\n        }\n      } else {\n        return state\n      }\n    case RECEIVE_REPLIES_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      }\n\n    default:\n      /* istanbul ignore next */\n      return state\n  }\n}\n\nexport const selectedPost = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_POSTS:\n      return {\n        ...state,\n        ...extractPost(state, action),\n        media_fallback: false,\n      }\n    case SELECT_POST:\n      return {\n        ...state,\n        ...extractPost(state, action),\n        media_fallback: false,\n      }\n    case NEXT_POST:\n      const nextIndex = state.index + 1\n      const nextPost = action.posts[nextIndex]\n      return {\n        ...state,\n        index: nextPost ? nextIndex : 0,\n        post: nextPost || action.posts[0],\n        media_fallback: false,\n      }\n    case PREVIOUS_POST:\n      const previousIndex =\n        state.index - 1 >= 0 ? state.index - 1 : action.posts.length - 1\n      return {\n        ...state,\n        index: previousIndex,\n        post: action.posts[previousIndex],\n        media_fallback: false,\n      }\n    case MEDIA_FALLBACK:\n      return {\n        ...state,\n        media_fallback: true,\n      }\n    case LOCATION_CHANGE:\n      const match = matchRedditPath(action.payload.location.pathname)\n      if (match && (!state.post || match.params.postId !== state.post.id)) {\n        return {\n          ...state,\n          ...findPostById(match.params.postId, action.posts),\n        }\n      } else {\n        // istanbul ignore next\n        return state\n      }\n    case INVALIDATE_SUBREDDIT:\n      return {\n        ...state,\n        post: { id: state.post ? state.post.id : null },\n      }\n    case TOGGLE_SHOW_VIDEOS:\n    case TOGGLE_SHOW_IMAGES:\n      return {\n        ...state,\n        ...findPostById(action.post?.id, action.posts),\n      }\n    case SELECT_SUBREDDIT_SCOPE:\n      return {\n        ...state,\n      }\n    default:\n      return state\n  }\n}\n\nexport const postsBySubreddit = (state = { cursor: {} }, action) => {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n    case REQUEST_POSTS:\n    case RECEIVE_POSTS:\n    case RECEIVE_POSTS_ERROR:\n    case REQUEST_COMMENTS:\n    case RECEIVE_COMMENTS:\n    case RECEIVE_COMMENTS_ERROR:\n    case REQUEST_REPLIES:\n    case RECEIVE_REPLIES:\n    case RECEIVE_REPLIES_ERROR:\n    case TOGGLE_SHOW_VIDEOS:\n    case TOGGLE_SHOW_IMAGES:\n    case SELECT_SUBREDDIT_SCOPE:\n      return {\n        ...state,\n        [action.subreddit]: selectedPosts(state[action.subreddit], action),\n        cursor: selectedPost(state.cursor, action),\n      }\n    case SELECT_POST:\n    case NEXT_POST:\n    case PREVIOUS_POST:\n    case MEDIA_FALLBACK:\n      return {\n        ...state,\n        cursor: selectedPost(state.cursor || {}, action),\n      }\n    case LOCATION_CHANGE:\n      const subreddit = getNewSubredditFromPath(\n        null, action.payload.location.pathname\n      )\n      const scope = state.scope || 'hot'\n      const posts = state[subreddit] ? state[subreddit][scope] : []\n      if (subreddit) {\n        return {\n          ...state,\n          [subreddit]: selectedPosts(state[subreddit], {\n            ...action,\n            posts,\n            subreddit,\n          }),\n          cursor: selectedPost(state.cursor, {\n            ...action,\n            posts,\n            subreddit,\n          }),\n        }\n      } else {\n        // istanbul ignore next\n        return state\n      }\n    case REMOVE_SUBREDDIT:\n      return {\n        ...state,\n        [action.subreddit]: null,\n      }\n    default:\n      return state\n  }\n}\n\nconst subreddits = (state = DEFAULT_SUBREDDITS, action) => {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n      const addSet = new Set(state)\n      addSet.add(action.subreddit)\n      return Array.from(addSet)\n    case REMOVE_SUBREDDIT:\n      const removeSet = new Set(state)\n      removeSet.delete(action.subreddit)\n      return Array.from(removeSet)\n    default:\n      return state\n  }\n}\n\nconst DEFAULT_CONFIG = {\n  isFullscreen: false,\n  isAutoAdvance: false,\n  themeMode: 'dark',\n  showNSFW: false,\n  keyboardControls: true,\n  showImages: true,\n  showVideos: true,\n  volume: 1,\n  scan: 0,\n  jump: -1,\n}\n\nconst config = (state = DEFAULT_CONFIG, action) => {\n  switch (action.type) {\n    case ENABLE_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: true,\n      }\n    case DISABLE_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: false,\n      }\n    case TOGGLE_FULLSCREEN:\n      return {\n        ...state,\n        isFullscreen: !state.isFullscreen,\n      }\n    case TOGGLE_AUTO_ADVANCE:\n      return {\n        ...state,\n        isAutoAdvance: !state.isAutoAdvance,\n      }\n    case TOGGLE_PLAY:\n      return {\n        ...state,\n        isPlaying: !state.isPlaying,\n      }\n    case TOGGLE_THEME_MODE:\n      return {\n        ...state,\n        themeMode: state.themeMode === 'dark' ? 'light' : 'dark',\n      }\n    case TOGGLE_NSFW:\n      return {\n        ...state,\n        showNSFW: !state.showNSFW,\n      }\n    case TOGGLE_SHOW_IMAGES:\n      return {\n        ...state,\n        showImages: !state.showImages,\n      }\n    case TOGGLE_SHOW_VIDEOS:\n      return {\n        ...state,\n        showVideos: !state.showVideos,\n      }\n    case PLAYER_VOLUME_UP:\n      return {\n        ...state,\n        volume: translateVolume(state.volume, 0.1),\n      }\n    case PLAYER_VOLUME_DOWN:\n      return {\n        ...state,\n        volume: translateVolume(state.volume, -0.1),\n      }\n    case PLAYER_SCAN_FORWARDS:\n      return {\n        ...state,\n        scan: action.seconds,\n      }\n    case PLAYER_SCAN_BACKWARDS:\n      return {\n        ...state,\n        scan: -action.seconds,\n      }\n    case PLAYER_SCAN_ACK:\n      return {\n        ...state,\n        scan: 0,\n      }\n    case PLAYER_JUMP_TO:\n      return {\n        ...state,\n        jump: action.percentage,\n      }\n    case PLAYER_JUMP_ACK:\n      return {\n        ...state,\n        jump: -1,\n      }\n    case ENABLE_KEYBORAD_CONTROLS:\n      return {\n        ...state,\n        keyboardControls: true,\n      }\n    case DISABLE_KEYBORAD_CONTROLS:\n      return {\n        ...state,\n        keyboardControls: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst createRootReducer = history => {\n  return combineReducers({\n    postsBySubreddit,\n    selectedSubreddit,\n    subreddits,\n    config,\n    router: connectRouter(history),\n  })\n}\n\nexport default createRootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport { createHashHistory } from 'history'\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport createRootReducer from './reducers'\n\nexport const history = createHashHistory()\nconst middleware = [thunk, routerMiddleware(history)]\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? window.__REDUX_DEVTOOLS_EXTENSION__({ trace: true, traceLimit: 24 })\n  : noop => noop\n\nconst persistConfig = {\n  key: 'tvr',\n  storage,\n  whitelist: ['subreddits', 'config'],\n}\n\nconst rootReducer = createRootReducer(history)\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst configureStore = () => {\n  const store = createStore(\n    persistedReducer,\n    compose(\n      applyMiddleware(...middleware),\n      devtools,\n    ),\n  )\n\n  const persistor = persistStore(store)\n  return { store, persistor }\n}\n\nexport default configureStore\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { Route } from 'react-router'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport App from './App'\n\nimport configureStore, { history } from './configureStore'\n\nconst { store, persistor } = configureStore()\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <ConnectedRouter history={history} hashType=\"noslash\">\n        <Route\n          exact\n          path=\"/r/:subreddit/comments/:postId/:slug\"\n          component={App}\n        />\n        <Route exact path=\"/r/:subreddit/:postId\" component={App} />\n        <Route exact path=\"/r/:subreddit\" component={App} />\n        <Route exact path=\"/\" component={App} />\n      </ConnectedRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}